%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: contrNewTest4.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Martijn
%%CreationDate: 7/4/12
%%BoundingBox: 0 0 825 774
%%HiResBoundingBox: 0 0 824.2754 773.6147
%%CropBox: 0 0 824.2754 773.6147
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 120 8%%BeginData: 13552 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FFFD1BCAFD26FFFD1CCAFD21FFCACAFD0CFFC3C3FD0DFFCAFD%24FFCACAFD0CFFC3C3FD0DFFCACAFD1EFFCAFD0EFFC3C3FD0EFFCAFD22FF%CACAFD0DFFC3C3FD0FFFCAFD1CFFCACAFD1FFFCAFD21FFCAFD1FFFCACAFD%1BFFCAFD21FFCAFD1FFFCAFD21FFC3FD1BFFCAFD21FFCACAFD13FFCAC3C3%FD08FFCAFD22FFCAFD13FFCACAC3FD04FFCAFD22FFCAFD11FFCAC3FFFFFF%C3FD07FFC3FD22FFCAFD11FFCACACAFFFFCAFFFFFFCAFD0AFF7F7F7FA97F%A97FFD11FFCACAFD0EFFCAC3FD05FFCAFD07FFCAFD0AFFA9557FFFA9A97F%FD12FFCAFD0FFFC3FD05FFCAFFFFFFCAFD0AFFA9317F5555557FFD10FFC3%CACAFD0FFFCAFD05FFCAFD07FFCAFD0AFFA9557F5555557FFD10FFC3CACA%FD0FFFCAFD05FFCAFFFFFFCAFD0CFFC3CAC3CAC3CAC3FD0DFFCAFFC3FFC3%FD0BFFC3CAFFFFC3FD04FFCAFD07FFCAFD0BFFCAC3CAC3CAC3CAC3CACAFD%0BFFCAFFC3CAC3FD0BFFC3CAFFFFC3FD04FFCAFFFFFFC3FD0AFFCACAFD07%FFFD04CAFD0AFFCAFFFFCAFD0BFFCACAFFFFCAFD04FFCAFD07FFCAFD0BFF%CAFD09FFC3CAFD0AFFCAFFFFCACAFD0AFFCACAFFFFFFCAFFFFFFC3FFFFFF%CAFD0AFFCACAC3CAC3CAC3CAC3CAC3CACAFD05FFBCCAFD07FFCAFD09FFCA%CAFFC3FFCACAFFFFFFCAFD07FFCAFD0BFFCAC3CAC3CAC3CAC3CAC3CACAFD%05FFC3CAFD07FFC3FD0AFFCAFFC3FFCACAFFFFFFCAFFFFFFCACACAFD1AFF%CACAFD06FFCAFD0AFFCAFFFFFFC3FD05FFCAFD07FFCACACAFD1AFFCACAFD%07FFCAFD09FFCAFFFFFFC3FD05FFCAFFFFFFCAC3CAFFFFFFCAC3FD1BFFCA%CAC3FD09FFCACAFD09FFCAFD07FFCAC3CAFFFFFFCAC3FD1BFFCACAC3FD0A%FFCAFD09FFCAFFFFFFCACAC3FFFFFFCACAFD19FFCAC3CAFD0BFFCAFD0AFF%C3FD07FFC3CAC3FD04FFCAFD1AFFCACAFD0BFFCACAFD09FFCAFFFFFFCAFD%1EFFC3CACAFD0BFFCACACAFD0AFFCAFD07FFCAFD1EFFC3CACACAFD0BFFCA%CAFD0AFFCAFFFFFFCAFD1BFFCAC3C3FD0FCAFD0CFFCAFD07FFCAFD1BFFCA%C3C3CACAFFFFFD0BCAFD0CFFCAFFFFFFCAFD0CFFC3CAC3CAC3CAC3CAC3C3%C3CAC3CABCC3CAFD1CFFCAFD07FFCAFD0CFFC3CAC3CAC3CAC3CAC3CAC3CA%C3CAC3C3CAFD1CFFCAFFFFFFC3FD0AFFCACAFD0BFFCACACAFD1FFFCAFD07%FFCAFD0AFFCACAFD0CFFCAC3FD1FFFC3FFFFFFCAFD0AFFC3FD0AFFCAC3CA%FD1AFFC3C3FFFFFFC3C3C3FD07FFCAFD0AFFC3FD0AFFCAC3CAFD1AFFC3C3%FFFFFFCAC3C3FFFFFFCAFD05FFCAFFFFFFCAFD0AFFCAFD1EFFCAFFFFFFC3%CAC3FD07FFCAFD09FFCAFD0AFFCACAFD1DFFCAFFFFFFC3CAC3FFFFFFCAFD%04FFCACAC3FFFFCAFD0AFFC3FD06FFCABCFD1CFFCAFD07FFCAFD04FFCACA%C3FFFFCAFD0AFFC3FD07FFBCFD1CFFCAFFFFFFCAFFFFFFCACAFFFFCAFFC3%FD0AFFCAFD07FFCAFD1CFFC3FD07FFC3FFFFFFCACAFFFFCAFFCAFD0AFFCA%FD06FFCAC3FD1CFFCAFFFFFFCAFD04FFC3FFFFCAC3FD0BFFC3FFC3CACAFD%20FFCAFD07FFCAFD04FFC3FFFFCACAFD0BFFC3FFC3C3CAFD21FFCAFFFFCA%FD05FFCAFFFFCAFD0CFFCACAFFC3FD20FFCAFD07FFCAFD05FFCAFFFFCAFD%0CFFCACAFFCAFD21FFCAFFFFCAFD05FFCACAFD0EFFCACACAFD21FFCAFD07%FFCAFD06FFCAFD0EFFCACACAFD22FFC3FFFFC3FD04FFCAC3FD10FFCAFD22%FFCAFD07FFCAFD04FFCAC3FD10FFCAFD22FFCACAFFFFFFC3CAC3CACAFD11%FFCAFD22FFCAFD08FFC3CAC3CACAFD11FFCAFD22FFCAFD1BFFCAFD21FFCA%FD1FFFCAFD21FFCAFD1BFFCACAFD20FFCAFD20FFCAFD20FFCAFD1CFFCAFD%0FFFCAC3FD0FFFCAFD20FFCAFD0FFFCACAFD0FFFCAFD1DFFCAFD0EFFC3CA%FD0EFFCAFD22FFCACAFD0DFFC3FFC3FD0DFFCAFD1FFFCACAFD0CFFCAC3FD%0CFFCACAFD24FFCACAFD0CFFCAC3CAFD0BFFCACAFD08FFC3CAFD18FFC3CA%C3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3C3C3CAFD0CFFC3%C3FD18FFC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CA%C3CAFD08FFCAC3FD31FFCAFFC3FD0CFFCACAFD31FFC3FFCAFD05FFCAC3CA%CACAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3C3C3CA%C3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAFFCAC3CACAFD06FF%CAC3CACAFFC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3%C3C3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3C3FFCAC3CACA%FFFFCAFD1CFFCACAFD1CFFCAFD06FFCAFD1CFFCACAFD1CFFCAFFFFCAFD1B%FFFD04CAFD1BFFC3FD06FFCAFD1BFFCACACAC3FD1BFFC3FFFFCAFD1BFFCA%C3C3FD1CFFCAFD06FFC3FD1BFFCAC3C3CAFD1BFFCAFFFFCAC3C3BCFD33FF%CAC3BCCAC3FD06FFCAC3C3BCCAFD32FFCAC3BCCAC3FFFFCAFFFFFFCAFD32%FFCAFFFFFFCAFD06FFCAFFFFFFCAFD32FFCAFFFFFFCAFFFFCAC3C3C3FD33%FFCAC3C3CAC3FD06FFCAC3C3C3CAFD32FFCAC3C3CAC3FFFFC3FD3AFFCAFD%06FFCAFD3AFFCAFFFFCAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CA%CACAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CA%C3CAC3CAC3CAC3CAC3FD06FFCAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3%CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CAC3FFC3CAC3CAC3CAC3CAC3CAC3%FFC3CAC3CAC3CAC3CAC3CAC3FFFFCAFFFD1BCAFFFD0DCAFFFD0ECAFFCAFD%06FFCAFFFD1BCAFFFD0DCAFFFD0ECAFFCAFFFFCAFD04C3BCC3C3C3BCC3C3%C3BCC3C3C3BCFD07C3BCFD07C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BC%C3C3C3BCC3C3C3BCCAC3FD06FFCAC3C3BCFD07C3BCC3C3C3BCC3C3C3BCC3%C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCCAC3C3BCFD07C3BCCAC3C3BCC3C3C3%BCC3C3CAC3FFFFC3CAC3CACACAC3FFCACAC3CACACAC3CACACAC3FD07CAC3%CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACA%CAC3CAFD06FFC3CACACAC3CACAFFC3CACACAC3CACACAC3CACACAC3CACACA%C3CACACAC3CACACAC3FD07CAC3CACACAC3FD07CAC3CACACAC3CACACAFFFF%CACACAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CACA%CAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CAC3FFC3%FD06FFCACACAC3CAC3CAC3CAC3CAC3CAC3FFC3CAC3CAC3CAC3CAC3CAC3CA%C3CACAFFC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CA%C3FFC3FFFFC3FD06CAFFFD34CAFD06FFC3FD06CAFFFD0DCAFFFD26CAFFFF%CAFD3AFFC3FD06FFCAFD3AFFC3FFFFC3FD18FFCACACAC3CACACAC3CACACA%C3CACACAC3CACACAC3CACAFD0CFFCAFD06FFCAFD19FFC3CACACAC3CACACA%C3CACACAC3CACACAC3CACACAC3FD0CFFCAFFFFCAFD18FFC3FD14FFCAFD0C%FFC3FD06FFCAFD18FFC3FD14FFCAFD0CFFC3FFFFCAFD18FFCAFD14FFCAFD%0CFFCAFD06FFCAFD18FFCAFD14FFCAFD0CFFCAFFFFCAFD18FFC3FD14FFCA%FFFFC3CAC3CAC3FD05FFC3FD06FFCAFD18FFC3FD14FFCAFFFFC3CAC3CAC3%FD05FFC3FFFFCAFD18FFCAFD14FFC3FFC3FD05FFC3FD04FFCAFD06FFC3FD%18FFCAFD14FFCAFFC3FD05FFC3FD04FFCAFFFFCAFD18FFC3FD14FFCAC3FD%07FFC3CAC3CAC3FD06FFCAFD18FFC3FD14FFCAC3FD07FFC3CAC3CAC3FFFF%CAFD18FFFD15CAC3CAFD0BFFCAFD06FFCAFD18FFFD15CAC3CAFD0BFFCAFF%FFCAFD2EFFC3FD0BFFC3FD06FFCAFD2EFFC3FD0BFFC3FFFFC3FD2EFFCAFD%0BFFCAFD06FFCAFD2EFFCAFD0BFFCAFFFFCAFD2EFFC3FD07FFC3CAC3CAC3%FD06FFCAFD2EFFCAFD07FFC3CAC3CAC3FFFFCAFD2FFFCAFD05FFCAFD04FF%CAFD06FFCAFD2FFFCAFD05FFCAFD04FFCAFFFFCAFD30FFCACAC3CACAFD05%FFC3FD06FFCAFD30FFCACAC3CACAFD05FFC3FFFFC3CAC3C3FD34FFC3C3C3%CAFD06FFC3CAC3C3CAFD33FFC3C3CACAFFFFCAFFFFFFCAFD32FFC3FFFFFF%C3FD06FFCAFFFFFFCAFD32FFC3FFFFFFC3FFFFC3CAC3CAFD19FFCACAFD19%FFC3C3CACAFD06FFC3CAC3C3CAFD19FFCAFD19FFC3CACACAFFFFCAFD1BFF%FD04CAFD1BFFC3FD06FFCAFD1BFFCACACAC3FD1BFFC3FFFFC3FD1BFFCACA%CAFD1CFFCAFD06FFCAFD1CFFCAC3FD1CFFCAFFFFCAFD1CFFC3CAFD1CFFC3%FD06FFCAFD1CFFC3CAFD1CFFC3FFFFFFFD1DCAC3FD17CAC3FFC3CACAFD08%FFCACACAFFC3FD18CAC3FD1CCAFD06FFC3C3FD32FFC3C3FD0CFFC3C3CAFD%31FFBCC3FD05FFC3CAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3%CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACA%CAC3CACACAC3CAFD06FFC3CACACAC3CACACAC3CACACAC3CACACAC3CACACA%C3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CA%CACAC3CACACAC3CACACAFFC3C3FFFFC3CAFD18FFCAFD18FFCAC3CAFFFFC3%CAFD04FFC3C3FFFFC3C3FD18FFCAFD19FFC3C3FFFFC3C3CAFFFFFFCACAFD%18FFCAC3FD17FFCAFFCAFFFFFFCAFD04FFCAFFFFFFCACAFD18FFCAC3FD18%FFCACAFFFFFFCAC3C3FFFFC3CAFD18FFCAFD18FFCAC3CAFFFFC3CAFD04FF%C3C3FFFFC3C3FD18FFCAFD19FFC3C3FFFFC3C3FFC3FD3AFFCAFD06FFCAFD%3AFFCAFFFFCAFD3AFFC3FD06FFCAFD3AFFC3FFFFCAFD3AFFCAFD06FFCAFD%3AFFCAFFFFCAFD3AFFC3FD06FFCAFD3AFFC3FFFFCAFD3AFFCAFD06FFC3FD%3AFFCAFFFFCAC3C3BCC3BCC3C3C3BCC3BCC3BCC3BCC3BCC3BCC3C3C3BCC3%BCC3BCC3C3C3BCC3BCC3BCC3BCC3BCC3BCC3C3C3BCC3BCC3BCC3C3C3BCC3%BCC3BCCAC3FD06FFCAC3C3BCC3BCC3C3C3BCC3BCC3BCC3BCC3BCC3BCC3C3%C3BCC3BCC3BCC3C3C3BCC3BCC3BCC3BCC3BCC3BCC3C3C3BCC3BCC3BCC3C3%C3BCC3BCC3BCCAC3FFFFC3FD06CAFFFD2BCAFFFD08CAFD06FFC3FD06CAFF%FD0DCAFFFD1DCAFFFD08CAFFFFCAC3C3BCFD07C3BCC3C3C3BCC3C3C3BCC3%C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCFD07C3BCFD07C3BCC3C3CA%C3FD06FFCAFD04C3BCC3C3C3BCC3C3C3BCC3C3C3BCFD07C3BCFD07C3BCC3%C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCCAC3FFFFC3FFCA%CAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3FFCACAC3%CACACAC3CACACAC3CACAFFC3CACACAC3CACACAC3CACACAC3CAFFCAFD06FF%CAFFC3CACACAC3CACACAC3FD07CAC3CACACAC3CACACAC3CACAFFFD04CAC3%CACACAC3CACACAC3FFCACAC3CACACAC3CACACAC3FD05CAFFFFCAC3CAC3CA%C3CACACAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CA%C3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3FD06FFCAC3%CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3%CAC3CAC3FFC3CAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3FFFF%C3CAFD05C3CAFD15C3CAFD0DC3CAFD0FC3CAFD06FFC3CAFD05C3CAFD15C3%CAFD0DC3CAFD07C3CAFD07C3CAFFFFCACACAC3CAC3CAC3CAC3CAC3CAC3FF%C3CAC3CAC3CAC3CAC3CAC3CAC3CAFFFFC3CAC3CAC3CAC3CAC3CAC3CACACA%C3CAC3CAC3CAC3CAC3CAC3CAC3FFC3FD06FFCACACAC3CAC3CAC3CAC3CAC3%CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3%CACACAC3CAC3CAC3CAC3CAC3CAC3CAC3FFC3FFFFC3CAC3CACACAC3FFCACA%C3CACACAC3CACACAC3FD07CAC3CACACAC3CACACAC3CACACAC3CACACAC3CA%CACAC3FD07CAC3CAC3CAC3CAFD06FFC3CAC3CAC3CACAFFC3CACACAC3CACA%CAC3CACACAC3CACACAC3CACACAC3CACACAC3FD07CAC3CACACAC3CACACAC3%CACAFFC3CACACAC3CACACAFFFFCAFFC3C3FD34FFCAC3FFC3FD06FFCAFFCA%C3FD34FFC3C3FFC3FFFFCAFD3AFFCAFD06FFCAFD3AFFCAFFFFCAFD08FF55%7F557F557F7F7F55A97F7FFFA97FA97F557F7F55A97FFD1BFFC3FD06FFCA%FD08FF2B7F2B55FD047F31A97F7FFFFF7FA955557F7F557F55FD1BFFC3FF%FFC3FD08FF7F2B557F5531552B55555585FF5555552B2B555555F97FFD1B%FFCAFD06FFCAFD08FFA92B7F55552B7F2B555555A9FF7F7F55312B7F557F%F97FFD1BFFCAFFFFCAFD3AFFC3FD06FFCAFD3AFFC3FFFFCAFD3AFFCAFD06%FFCAFD3AFFCAFFFFCAFD08FFC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CA%C3CAC3CAC3CAC3CAC3CAC3CAC3CAC3C3FD10FFC3FD06FFCAFD08FFC3CAC3%CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3%C3CAFD0FFFC3FFFFCAFD08FFCAFD20FFC3FD10FFCAFD06FFC3FD08FFCAFD%21FFCAFD0FFFCAFFC3C3FD08FFC3FD20FFCAFD10FFC3CAFD04FFC3C3FD08%FFC3FD21FFC3FD0FFFC3C3CAFD09FFCAFD20FFCAFD09FFCACACAFD05FFCA%FD04FFCAFD09FFCAFD21FFCAFD08FFCACACAFD05FFCAC3C3FD08FFC3FD20%FFCAFD08FFC3FFFFCACAFFFFFFC3CAFD04FFC3C3FD08FFC3FD21FFC3FD07%FFCAFFFFFFC3FFFFFFC3C3FFC3FD08FFCAFD20FFCAFD08FFCAFFFFFFCAFF%FFFFCAFD06FFCAFD08FFCAFD21FFCAFD07FFCAFFFFFFCAFFFFFFCAFFFFCA%FD08FFC3FD20FFCAFD08FFC3FFFFFFC3FFFFFFC3FD06FFCAFD08FFC3FD21%FFC3FD07FFC3FFFFFFC3FFFFFFC3FFFFCAFD08FFCAFD20FFCAFD04FFA9FF%FFFFCAFFFFFFCAFFFFFFCAFD06FFCAFD08FFCAFD21FFCAFFFFFFA9FFFFFF%CAFFFFFFCAFFFFFFCAFFFFCAFD08FFC3FD20FFCAFFFFFFA97FFFFFFFCACA%C3CACAFFFFFFC3FD06FFCAFD08FFC3FD21FFC3FFFFA97FFFFFFFCACAC3CA%CAFFFFFFC3FFFFCAFD08FFCAFD20FFC3FFFFFF857FA9FD0AFFCAFD06FFC3%FD08FFCAFD21FFCAFFFFA97F85FD0AFFCAFFFFCAFD08FFC3FD20FFCAFFFF%55A9FF7FA9FD09FFC3FD06FFCAFD08FFC3FD21FFC3FF55A9FF7F7FFD09FF%C3FFFFCAFD08FFFD21CAC3FFFFA9A9FF7FFD0AFFCAFD06FFCAFD08FFFD21%CAC3FFFFFFA9FF7FFD0AFFCAFFFFCAFFC3C3FD34FFCACAFFC3FD06FFCAFF%CAC3FD34FFC3C3FFC3FFFFC3CAC3C3C3CACAFFC3CACACAC3CACACAC3CACA%CAC3CACACAC3CACACAC3CACACAC3FD07CAC3CACACAC3CACACAC3CACACAC3%CACACAC3CACACAFD06FFC3CAC3C3CACAC3FFCACAC3CACACAC3CACACAC3FD%07CAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3FD04CAFFCACAC3%CAC3CAC3CAFFFFCACACAC3CAC3CAC3CAC3CAC3CAC3FFC3CAC3CAC3CAC3CA%C3CAC3CAC3CAFFFFC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CA%C3CAC3CAC3FFC3FD06FFCACACAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3CAC3%CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3CAC3CAC3CAC3CACACAC3CAC3CAC3%CAC3CAC3CAC3CAC3FFC3FFFFC3FD06CAFFFD0DCAFFFD26CAFD06FFC3FD06%CAFFFD2BCAFFFD08CAFFFFCAFD04C3BCC3C3C3BCC3C3C3BCC3C3C3BCFD07%C3BCFD07C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BC%CAC3FD06FFCAC3C3BCFD07C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3%C3C3BCC3C3C3BCCAC3C3BCFD07C3BCFD07C3BCC3C3CAC3FFFFCAFFC3CACA%CAC3CACACAC3FD07CAC3CACACAC3CACACAC3CACAFFFD04CAC3CACACAC3CA%CACAC3FFCACAC3CACACAC3CACACAC3FD05CAFD06FFC3FFCACAC3CACACAC3%CACACAC3CACACAC3CACACAC3CACACAC3CACACAC3FFCACAC3CACACAC3CACA%CAC3CACAFFC3CACACAC3CACACAC3CACACAC3CAFFCAFFFFCAC3C3BCC3BCC3%C3C3BCC3BCC3BCC3BCC3BCC3BCC3C3C3BCC3BCC3BCC3C3C3BCC3BCC3BCC3%BCC3BCC3BCC3C3C3BCC3BCC3BCC3C3C3BCC3BCC3BCCAC3FD06FFCAC3C3BC%C3BCC3C3C3BCC3BCC3BCC3BCC3BCC3BCC3C3C3BCC3BCC3BCC3C3C3BCC3BC%C3BCC3BCC3BCC3BCC3C3C3BCC3BCC3BCC3C3C3BCC3BCC3BCCAC3FFFFC3FD%06CAFFFD2BCAFFFD08CAFD06FFC3FD06CAFFFD0DCAFFFD1DCAFFFD08CAFF%FFCAC3C3BCFD07C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3%C3C3BCC3C3C3BCFD07C3BCFD07C3BCC3C3CAC3FD06FFCAFD04C3BCC3C3C3%BCC3C3C3BCC3C3C3BCFD07C3BCFD07C3BCC3C3C3BCC3C3C3BCC3C3C3BCC3%C3C3BCC3C3C3BCC3C3C3BCCAC3FFFFC3FD3AFFCAFD06FFCAFD3AFFCAFFFF%CAFD3AFFC3FD06FFCAFD3AFFC3FFCAC3FFFFCACAFD32FFCACAFFFFC3CAFD%05FFC3FFFFCACAFD32FFCACAFFFFC3CAC3FFFFFFC3CAFD18FFC3CAFD17FF%CAFFCAFFFFFFC3FD04FFC3FFFFFFC3CAFD18FFC3C3FD17FFCAFFCAFFFFFF%CAC3C3FFFFC3C3FD19FFCAFD17FFCACAC3FFFFCAC3FD04FFC3C3FFFFC3C3%FD19FFCAFD17FFCACAC3FFFFCAC3FFCAFD3AFFC3FD06FFCAFD3AFFC3FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2012-07-03T15:38:18+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-07-03T15:38:18+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2012-07-03T15:38:18+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>240</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA8AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9SSyNzWGM0dhUt14r4/P&#xA;w/swEs4xFWeS36jaHeSJZX7vIA7H6Tg4Qy8aXQ17nfo+w/5Zov8AgF/pjwjuXxp/zj83fo+w/wCW&#xA;aL/gF/pjwjuXxp/zj80F+jv9Or6C/V+dacIOHD0qU6epX1N8jw7t/j+jn6q75Xd/Lkjf0fYf8s0X&#xA;/AL/AEyXCO5o8af84/N36PsP+WaL/gF/pjwjuXxp/wA4/N31Cy/ZgRD2ZFCsPky0Ix4QvjT7y2jP&#xA;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&#xA;fanAa5kcNi7Hv8ve/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:C34298D85F206811871FF1BC7826F26A</stRef:instanceID>
            <stRef:documentID>xmp.did:C34298D85F206811871FF1BC7826F26A</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03E540664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:24:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D6AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T20:31:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0B9FED38200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:11-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T10:53:28+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T11:33:49+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T12:04:29+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T12:25:44+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T12:28:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C24298D85F206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T13:44:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C34298D85F206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T15:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C44298D85F206811871FF1BC7826F26A</stEvt:instanceID>
                  <stEvt:when>2012-07-03T15:38:18+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:C44298D85F206811871FF1BC7826F26A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:C44298D85F206811871FF1BC7826F26A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>419.999514</stDim:w>
            <stDim:h>296.999959</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Splash</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -773.615 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 773.615 li
824.275 773.615 li
824.275 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
17.2778 304.776 mo
98.5439 304.776 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 0 0 rgb
@
17.2778 295.829 mo
98.5439 295.829 li
@
12.0356 309.25 mo
51.3564 309.25 li
@
12.0356 300.303 mo
51.3564 300.303 li
@
12.0356 291.356 mo
51.3564 291.356 li
@
56.6016 309.25 mo
145.73 309.25 li
@
56.6016 300.303 mo
145.73 300.303 li
@
56.6016 291.356 mo
145.73 291.356 li
@
103.787 295.829 mo
195.751 295.829 li
@
103.787 304.776 mo
195.751 304.776 li
@
203.53 304.778 mo
284.934 304.778 li
@
203.53 295.829 mo
284.934 295.829 li
@
150.974 309.25 mo
198.282 309.25 li
198.282 309.25 li
237.669 309.25 li
@
150.974 300.303 mo
198.282 300.303 li
198.282 300.303 li
237.669 300.303 li
@
150.974 291.356 mo
198.282 291.356 li
237.669 291.356 li
@
242.922 309.25 mo
315.76 309.247 li
@
242.922 300.303 mo
315.76 300.303 li
@
242.922 291.356 mo
315.76 291.356 li
@
17.2778 286.475 mo
98.5439 286.475 li
@
12.0356 282 mo
51.3564 282 li
@
56.6016 282 mo
145.73 282 li
@
103.787 286.475 mo
195.751 286.475 li
@
203.53 286.475 mo
284.934 286.475 li
@
150.974 282 mo
198.282 282 li
237.669 282 li
@
242.922 282 mo
315.76 282 li
@
321.01 309.25 mo
386.529 309.247 li
@
321.01 300.303 mo
386.529 300.303 li
@
321.01 291.356 mo
386.529 291.356 li
@
321.01 282 mo
386.529 282 li
@
12.0356 264.1 mo
24.2769 264.1 li
24.2769 268.067 li
30.5137 268.067 li
30.5137 264.1 li
33.6709 264.1 li
33.6709 256.161 li
30.5137 256.161 li
30.5137 252.192 li
24.2769 252.192 li
24.2769 256.161 li
12.0356 256.161 li
@
387.294 264.1 mo
375.033 264.1 li
375.033 268.067 li
368.786 268.067 li
368.786 264.1 li
365.622 264.1 li
365.622 256.161 li
368.786 256.161 li
368.786 252.192 li
375.033 252.192 li
375.033 256.161 li
387.294 256.161 li
@
12.0356 412.929 mo
24.2769 412.929 li
24.2769 416.897 li
30.5137 416.897 li
30.5137 412.929 li
33.6709 412.929 li
33.6709 404.991 li
30.5137 404.991 li
30.5137 401.021 li
24.2769 401.021 li
24.2769 404.991 li
12.0356 404.991 li
@
386.548 412.929 mo
374.286 412.929 li
374.286 416.897 li
368.04 416.897 li
368.04 412.929 li
364.878 412.929 li
364.878 404.991 li
368.04 404.991 li
368.04 401.021 li
374.286 401.021 li
374.286 404.991 li
386.548 404.991 li
@
203.11 438.889 mo
203.11 426.649 li
207.083 426.649 li
207.083 420.413 li
203.11 420.413 li
203.11 417.254 li
195.165 417.254 li
195.165 420.413 li
191.196 420.413 li
191.196 426.649 li
195.165 426.649 li
195.165 438.889 li
@
195.163 228.594 mo
195.163 240.836 li
191.196 240.836 li
191.196 247.073 li
195.163 247.073 li
195.163 250.229 li
203.108 250.229 li
203.108 247.073 li
207.083 247.073 li
207.083 240.836 li
203.108 240.836 li
203.108 228.594 li
@
306.61 366.156 mo
172.067 366.156 li
172.067 326.472 li
306.61 326.472 li
306.61 366.156 li
cp
@
386.68 381.53 mo
362.102 381.53 li
357.726 390.501 348.504 396.681 337.838 396.681 cv
322.939 396.681 310.864 384.624 310.864 369.751 cv
310.864 354.88 322.939 342.823 337.838 342.823 cv
346.955 342.823 355.012 347.337 359.895 354.247 cv
386.681 354.247 li
@
168.32 228.565 mo
37.4146 228.565 li
36.8481 217.256 li
26.6426 217.256 li
26.0767 228.565 li
11.9048 228.565 li
11.9048 438.889 li
26.9282 438.889 li
27.4946 450.227 li
37.6997 450.227 li
38.2656 438.889 li
167.47 438.889 li
229.146 438.889 li
360.273 438.889 li
360.842 450.227 li
371.063 450.227 li
371.63 438.889 li
386.681 438.889 li
386.681 228.565 li
370.778 228.565 li
370.212 217.256 li
359.991 217.256 li
359.422 228.565 li
229.998 228.565 li
168.32 228.565 li
cp
@
17.2788 729.059 mo
98.5439 729.059 li
@
17.2788 720.112 mo
98.5439 720.112 li
@
17.2788 711.165 mo
98.5439 711.165 li
@
17.2788 702.215 mo
98.5439 702.215 li
@
17.2788 693.268 mo
98.5439 693.268 li
@
12.0356 733.534 mo
51.3569 733.534 li
@
12.0356 724.586 mo
51.3569 724.586 li
@
12.0356 715.639 mo
51.3569 715.639 li
@
12.0356 706.69 mo
51.3569 706.69 li
@
12.0356 697.743 mo
51.3569 697.743 li
@
12.0356 688.793 mo
51.3569 688.793 li
@
56.6016 733.534 mo
145.73 733.534 li
@
56.6016 724.586 mo
145.73 724.586 li
@
56.6016 715.639 mo
145.73 715.639 li
@
56.6016 706.69 mo
145.73 706.69 li
@
56.6016 697.743 mo
145.73 697.743 li
@
56.6016 688.793 mo
145.73 688.793 li
@
103.787 693.268 mo
192.918 693.268 li
@
103.787 702.215 mo
192.918 702.215 li
@
103.787 711.165 mo
192.918 711.165 li
@
103.787 720.112 mo
192.918 720.112 li
@
103.787 729.059 mo
192.918 729.059 li
@
150.974 733.534 mo
198.283 733.534 li
@
150.974 724.586 mo
198.283 724.586 li
@
150.974 715.639 mo
198.283 715.639 li
@
150.974 706.69 mo
198.283 706.69 li
@
150.974 697.743 mo
198.283 697.743 li
@
150.974 688.793 mo
198.283 688.793 li
@
203.53 729.061 mo
284.934 729.061 li
@
203.53 720.112 mo
284.934 720.112 li
@
203.53 711.165 mo
284.934 711.165 li
@
203.53 702.217 mo
284.934 702.217 li
@
203.53 693.27 mo
284.934 693.27 li
@
198.283 733.534 mo
237.669 733.534 li
@
198.283 724.588 mo
237.669 724.588 li
@
198.283 715.639 mo
237.669 715.639 li
@
198.283 706.69 mo
237.669 706.69 li
@
198.283 697.743 mo
237.669 697.743 li
@
198.283 688.795 mo
237.669 688.795 li
@
242.922 733.534 mo
332.203 733.534 li
@
242.922 724.588 mo
332.203 724.588 li
@
242.922 715.639 mo
332.203 715.639 li
@
242.922 706.69 mo
332.203 706.69 li
@
242.922 697.743 mo
332.203 697.743 li
@
242.922 688.795 mo
332.203 688.795 li
@
290.186 693.27 mo
380.892 693.27 li
@
290.186 702.217 mo
380.892 702.217 li
@
290.186 711.165 mo
380.892 711.165 li
@
290.186 720.112 mo
380.892 720.112 li
@
290.186 729.061 mo
380.892 729.061 li
@
337.454 733.534 mo
386.548 733.534 li
@
337.454 724.588 mo
386.548 724.588 li
@
337.454 715.639 mo
386.548 715.639 li
@
337.454 706.69 mo
386.548 706.69 li
@
337.454 697.743 mo
386.548 697.743 li
@
337.454 688.795 mo
386.548 688.795 li
@
17.2788 550.053 mo
98.5439 550.053 li
@
17.2788 541.106 mo
98.5439 541.106 li
@
17.2788 532.157 mo
98.5439 532.157 li
@
17.2788 523.209 mo
98.5439 523.209 li
@
17.2788 514.26 mo
98.5439 514.26 li
@
12.0356 554.526 mo
51.3569 554.526 li
@
12.0356 545.581 mo
51.3569 545.581 li
@
12.0356 536.633 mo
51.3569 536.633 li
@
12.0356 527.682 mo
51.3569 527.682 li
@
12.0356 518.735 mo
51.3569 518.735 li
@
12.0356 509.788 mo
51.3569 509.788 li
@
56.6016 554.526 mo
145.73 554.526 li
@
56.6016 545.581 mo
145.73 545.581 li
@
56.6016 536.633 mo
145.73 536.633 li
@
56.6016 527.682 mo
145.73 527.682 li
@
56.6016 518.735 mo
145.73 518.735 li
@
56.6016 509.788 mo
145.73 509.788 li
@
103.787 514.26 mo
192.918 514.26 li
@
103.787 523.209 mo
192.918 523.209 li
@
103.787 532.157 mo
192.918 532.157 li
@
103.787 541.106 mo
192.918 541.106 li
@
103.787 550.053 mo
192.918 550.053 li
@
150.974 554.526 mo
237.669 554.526 li
@
150.974 545.581 mo
237.669 545.581 li
@
150.974 536.633 mo
237.669 536.633 li
@
150.974 527.682 mo
237.669 527.682 li
@
150.974 518.735 mo
237.669 518.737 li
@
150.974 509.788 mo
237.669 509.788 li
@
203.53 550.053 mo
284.934 550.053 li
@
203.53 541.106 mo
284.934 541.106 li
@
203.53 532.159 mo
284.934 532.159 li
@
203.53 523.209 mo
284.934 523.209 li
@
203.53 514.262 mo
284.934 514.262 li
@
242.922 554.528 mo
332.203 554.528 li
@
242.922 545.581 mo
332.203 545.581 li
@
242.922 536.633 mo
332.203 536.633 li
@
242.922 527.684 mo
332.203 527.684 li
@
242.922 518.737 mo
332.203 518.737 li
@
242.922 509.788 mo
332.203 509.788 li
@
290.186 514.262 mo
380.892 514.262 li
@
290.186 523.209 mo
380.892 523.209 li
@
290.186 532.159 mo
380.892 532.159 li
@
290.186 541.106 mo
380.892 541.106 li
@
290.186 550.053 mo
380.892 550.053 li
@
337.454 554.528 mo
386.548 554.528 li
@
337.454 545.581 mo
386.548 545.581 li
@
337.454 536.633 mo
386.548 536.633 li
@
337.454 527.684 mo
386.548 527.684 li
@
337.454 518.737 mo
386.548 518.737 li
@
337.454 509.788 mo
386.548 509.788 li
@
282.894 670.254 mo
282.894 671.815 281.616 673.09 280.055 673.09 cv
69.0229 673.09 li
67.4639 673.09 66.1885 671.815 66.1885 670.254 cv
66.1885 603.073 li
66.1885 601.512 67.4639 600.237 69.0229 600.237 cv
280.055 600.237 li
281.616 600.237 282.894 601.512 282.894 603.073 cv
282.894 670.254 li
cp
@
366.073 638.785 mo
366.073 647.388 359.089 654.359 350.471 654.359 cv
341.854 654.359 334.868 647.388 334.868 638.785 cv
334.868 630.183 341.854 623.208 350.471 623.208 cv
359.089 623.208 366.073 630.183 366.073 638.785 cv
cp
@
376.456 682.086 mo
376.456 684.67 374.359 686.764 371.773 686.764 cv
369.185 686.764 367.087 684.67 367.087 682.086 cv
367.087 679.504 369.185 677.409 371.773 677.409 cv
374.359 677.409 376.456 679.504 376.456 682.086 cv
cp
@
376.456 562.04 mo
376.456 564.622 374.359 566.717 371.773 566.717 cv
369.185 566.717 367.087 564.622 367.087 562.04 cv
367.087 559.456 369.185 557.362 371.773 557.362 cv
374.359 557.362 376.456 559.456 376.456 562.04 cv
cp
@
29.7642 682.088 mo
29.7642 684.672 27.6699 686.766 25.0859 686.766 cv
22.502 686.766 20.4087 684.672 20.4087 682.088 cv
20.4087 679.506 22.502 677.413 25.0859 677.413 cv
27.6699 677.413 29.7642 679.506 29.7642 682.088 cv
cp
@
29.7642 562.042 mo
29.7642 564.625 27.6699 566.719 25.0859 566.719 cv
22.502 566.719 20.4087 564.625 20.4087 562.042 cv
20.4087 559.459 22.502 557.364 25.0859 557.364 cv
27.6699 557.364 29.7642 559.459 29.7642 562.042 cv
cp
@
37.9834 472.116 mo
37.9834 461.346 li
27.2129 461.346 li
27.2129 472.116 li
37.9834 472.116 li
cp
@
371.347 472.116 mo
371.347 461.346 li
360.556 461.346 li
360.556 472.116 li
371.347 472.116 li
cp
@
203.392 466.729 mo
203.392 469.079 201.486 470.983 199.135 470.983 cv
196.787 470.983 194.883 469.079 194.883 466.729 cv
194.883 464.381 196.787 462.479 199.135 462.479 cv
201.486 462.479 203.392 464.381 203.392 466.729 cv
cp
@
37.1328 763.694 mo
37.1328 752.924 li
26.3618 752.924 li
26.3618 763.694 li
37.1328 763.694 li
cp
@
370.494 763.694 mo
370.494 752.924 li
359.706 752.924 li
359.706 763.694 li
370.494 763.694 li
cp
@
203.392 758.309 mo
203.392 760.657 201.486 762.561 199.135 762.561 cv
196.787 762.561 194.883 760.657 194.883 758.309 cv
194.883 755.959 196.787 754.057 199.135 754.057 cv
201.486 754.057 203.392 755.959 203.392 758.309 cv
cp
@
104.355 583.581 mo
102.43 578.194 li
102.227 577.624 101.677 577.243 101.063 577.243 cv
101.061 577.243 101.06 577.243 101.058 577.243 cv
100.458 577.245 99.9204 577.61 99.7075 578.157 cv
98.4248 581.209 li
97.1416 578.157 li
96.9297 577.612 96.3945 577.249 95.7959 577.243 cv
95.7925 577.243 95.7896 577.243 95.7866 577.243 cv
95.7686 577.243 95.752 577.247 95.7339 577.247 cv
95.6802 577.235 95.625 577.225 95.5679 577.225 cv
93.4746 577.225 li
93.0835 577.225 92.7646 577.543 92.7646 577.936 cv
92.7646 578.329 93.0835 578.647 93.4746 578.647 cv
94.2578 578.647 li
92.4946 583.581 li
92.2998 584.122 92.5825 584.717 93.1245 584.911 cv
93.2397 584.952 93.3589 584.973 93.4746 584.973 cv
93.9028 584.973 94.3037 584.708 94.4556 584.28 cv
95.8345 580.422 li
97.4648 584.301 li
97.4893 584.358 97.5166 584.409 97.5488 584.458 cv
97.5562 584.471 97.5659 584.481 97.5737 584.495 cv
97.5996 584.532 97.6304 584.569 97.6616 584.604 cv
97.6748 584.616 97.688 584.631 97.7017 584.643 cv
97.7358 584.676 97.7725 584.708 97.8115 584.737 cv
97.8228 584.745 97.8345 584.754 97.8457 584.762 cv
97.896 584.795 97.9512 584.825 98.0078 584.85 cv
98.0117 584.852 98.0166 584.856 98.0225 584.858 cv
98.0322 584.862 98.043 584.862 98.0532 584.868 cv
98.0977 584.885 98.1426 584.899 98.1895 584.909 cv
98.2075 584.915 98.2266 584.918 98.2456 584.922 cv
98.3032 584.932 98.3618 584.938 98.4219 584.94 cv
98.4224 584.94 98.4238 584.94 98.4238 584.94 cv
98.4248 584.94 98.4248 584.94 98.4248 584.94 cv
98.4258 584.94 98.4258 584.94 98.4258 584.94 cv
98.4268 584.94 98.4277 584.94 98.4282 584.94 cv
98.4878 584.938 98.5469 584.932 98.6055 584.922 cv
98.624 584.918 98.6426 584.915 98.6606 584.909 cv
98.708 584.899 98.7524 584.885 98.7969 584.868 cv
98.8066 584.864 98.8179 584.862 98.8296 584.858 cv
98.834 584.856 98.8384 584.852 98.8428 584.85 cv
98.8989 584.825 98.9536 584.795 99.0044 584.762 cv
99.0166 584.754 99.0269 584.745 99.0396 584.737 cv
99.0776 584.708 99.1138 584.678 99.1484 584.643 cv
99.1616 584.631 99.1758 584.616 99.189 584.602 cv
99.2202 584.571 99.2485 584.534 99.2749 584.495 cv
99.2842 584.481 99.2939 584.471 99.3022 584.458 cv
99.3335 584.409 99.3608 584.358 99.3853 584.301 cv
99.3896 584.292 li
99.3896 584.292 li
101.016 580.422 li
102.394 584.28 li
102.546 584.708 102.946 584.973 103.374 584.973 cv
103.49 584.973 103.61 584.952 103.725 584.911 cv
104.267 584.717 104.549 584.122 104.355 583.581 cv
cp
0 0 1 rgb
@
89.6548 574.196 mo
90.2603 574.196 90.752 574.688 90.752 575.295 cv
90.752 575.899 90.2603 576.389 89.6548 576.389 cv
89.0488 576.389 88.5586 575.899 88.5586 575.295 cv
88.5586 574.688 89.0488 574.196 89.6548 574.196 cv
88.6016 578.151 mo
88.6016 577.588 88.8325 577.098 89.6548 577.098 cv
90.4775 577.098 90.7085 577.588 90.7085 578.151 cv
90.7085 583.969 li
90.7085 584.53 90.4775 585.022 89.6548 585.022 cv
88.8325 585.022 88.6016 584.53 88.6016 583.969 cv
88.6016 578.151 li
cp
@
79.4326 574.26 mo
79.3848 574.247 79.335 574.243 79.2832 574.243 cv
78.1548 574.243 li
77.7627 574.243 77.4448 574.559 77.4448 574.952 cv
77.4448 575.346 77.7627 575.663 78.1548 575.663 cv
78.3159 575.663 li
78.3159 583.969 li
78.3159 584.661 78.7349 585.022 79.3691 585.022 cv
80.0054 585.022 80.4224 584.661 80.4224 583.969 cv
80.4224 575.307 li
80.4224 574.639 80.0313 574.284 79.4326 574.26 cv
cp
@
116.591 574.254 mo
116.577 574.254 116.563 574.258 116.55 574.258 cv
116.502 574.247 116.454 574.243 116.404 574.243 cv
115.275 574.243 li
114.883 574.243 114.566 574.559 114.566 574.952 cv
114.566 575.346 114.883 575.663 115.275 575.663 cv
115.538 575.663 li
115.538 583.969 li
115.538 584.661 115.957 585.022 116.591 585.022 cv
117.227 585.022 117.645 584.661 117.645 583.969 cv
117.645 582.366 li
117.645 580.1 li
117.645 575.307 li
117.645 574.616 117.227 574.254 116.591 574.254 cv
cp
@
122.508 583.319 mo
120.314 580.375 li
121.873 578.745 li
122.061 578.542 122.19 578.426 122.19 578.049 cv
122.19 577.516 121.671 577.098 121.194 577.098 cv
120.877 577.098 120.603 577.272 120.386 577.502 cv
118.555 579.538 li
118.555 579.538 118.219 579.846 118.219 580.461 cv
118.219 581.1 118.784 581.715 118.784 581.715 cv
120.776 584.53 li
120.935 584.762 121.209 585.022 121.728 585.022 cv
122.292 585.022 122.725 584.53 122.725 583.997 cv
122.725 583.651 122.58 583.418 122.508 583.319 cv
cp
@
75.645 583.614 mo
75.6436 581.282 li
75.6436 581.25 75.6387 581.223 75.6353 581.194 cv
75.6387 581.11 75.645 581.028 75.645 580.936 cv
75.645 575.436 li
75.645 574.731 75.1826 574.254 74.4619 574.254 cv
73.7402 574.254 73.2788 574.731 73.2788 575.436 cv
73.2788 581.125 li
73.2788 582.538 72.4849 583.174 71.1279 583.174 cv
69.7705 583.174 68.9766 582.538 68.9766 581.125 cv
68.9766 575.436 li
68.9766 574.786 68.5786 574.333 67.9478 574.268 cv
67.8906 574.252 67.8325 574.243 67.7705 574.243 cv
64.7876 574.243 li
64.3955 574.243 64.0767 574.559 64.0767 574.952 cv
64.0767 575.346 64.3955 575.663 64.7876 575.663 cv
66.6099 575.663 li
66.6099 580.936 li
66.6099 583.795 68.3706 585.079 71.1279 585.079 cv
72.3965 585.079 73.4507 584.803 74.2236 584.229 cv
74.2236 584.325 li
74.2236 584.717 74.541 585.036 74.9336 585.036 cv
75.645 585.036 li
76.0366 585.036 76.356 584.717 76.356 584.325 cv
76.356 583.932 76.0366 583.614 75.645 583.614 cv
cp
@
85.8149 577.284 mo
85.1797 577.284 li
85.1797 576.002 li
85.1797 575.307 84.7603 574.948 84.1265 574.948 cv
83.4912 574.948 83.0728 575.307 83.0728 576.002 cv
83.0728 577.284 li
83.0728 577.288 li
83.0366 577.288 li
82.6445 577.288 82.3267 577.606 82.3267 577.999 cv
82.3267 578.391 82.6445 578.709 83.0366 578.709 cv
83.0728 578.709 li
83.0728 583.145 li
83.0728 583.157 li
83.0728 584.012 li
83.0728 584.704 83.4912 585.065 84.1265 585.065 cv
84.7603 585.065 85.1797 584.704 85.1797 584.012 cv
85.1797 583.157 li
85.1797 582.885 li
85.1797 578.672 li
85.8149 578.672 li
86.436 578.672 86.7666 578.483 86.7666 577.979 cv
86.7666 577.473 86.436 577.284 85.8149 577.284 cv
cp
@
138.146 577.065 mo
136.944 577.065 li
136.469 577.065 136.073 577.385 135.947 577.821 cv
135.832 577.346 135.459 577.098 134.936 577.098 cv
134.921 577.098 134.908 577.1 134.893 577.1 cv
134.847 577.092 134.797 577.086 134.748 577.086 cv
133.62 577.086 li
133.227 577.086 132.911 577.403 132.911 577.795 cv
132.911 578.188 133.227 578.506 133.62 578.506 cv
133.882 578.506 li
133.882 583.969 li
133.882 584.661 134.3 585.022 134.936 585.022 cv
135.571 585.022 135.991 584.661 135.991 583.969 cv
135.991 582.366 li
135.991 580.1 li
135.991 579.717 li
137.107 578.874 li
138.146 578.874 li
138.721 578.874 139.187 578.682 139.187 578.106 cv
139.187 577.532 138.721 577.065 138.146 577.065 cv
cp
@
113.099 582.797 mo
113.099 579.264 li
113.099 577.749 111.57 577.243 108.79 577.243 cv
106.951 577.545 li
106.513 577.637 106.11 577.875 106.11 578.385 cv
106.11 578.78 106.389 579.229 106.951 579.145 cv
108.946 578.827 li
109.043 578.827 li
109.664 578.827 li
110.371 578.827 110.991 578.917 110.991 579.522 cv
110.991 581.284 li
110.991 582.106 li
110.991 582.885 110.284 583.635 109.129 583.635 cv
108.408 583.635 107.959 583.247 107.959 582.77 cv
107.959 582.135 108.437 581.86 109.317 581.731 cv
109.317 581.731 109.923 581.608 109.755 580.979 cv
109.586 580.348 108.798 580.446 108.798 580.446 cv
107.181 580.633 105.853 581.125 105.853 582.87 cv
105.853 584.2 107.037 585.022 108.234 585.022 cv
109.346 585.022 110.299 584.704 111.122 583.795 cv
111.15 584.444 111.454 585.022 112.362 585.022 cv
112.868 585.022 113.315 584.69 113.315 584.213 cv
113.315 583.881 113.099 583.68 113.099 582.797 cv
@
127.593 581.458 mo
127.641 581.467 127.69 581.475 127.741 581.475 cv
130.571 581.475 li
130.623 581.475 130.672 581.467 130.72 581.458 cv
130.866 581.458 li
131.572 581.458 131.789 581.268 131.789 580.547 cv
131.789 578.815 130.403 577.098 127.979 577.098 cv
125.481 577.098 123.994 578.745 123.994 581.198 cv
123.994 583.03 125.105 585.022 128.051 585.022 cv
130.371 584.702 li
130.866 584.61 131.333 584.247 131.273 583.676 cv
131.231 583.288 130.932 582.932 130.371 583.014 cv
128.054 583.372 li
128.051 583.375 li
126.825 583.375 126.102 582.569 126.102 581.458 cv
126.102 581.458 125.761 578.569 128.021 578.569 cv
128.944 578.569 129.656 579.254 129.789 580.196 cv
127.741 580.196 li
127.388 580.196 127.102 580.485 127.102 580.836 cv
127.102 581.133 127.306 581.381 127.582 581.452 cv
127.582 581.458 li
127.593 581.458 li
cp
@
398.604 626.713 mo
398.604 616.51 li
387.247 615.942 li
386.681 472.68 li
398.037 472.114 li
398.037 461.911 li
386.681 461.342 li
386.681 461.342 li
387.533 451.136 li
11.0542 451.136 li
11.9048 461.342 li
.567383 461.911 li
.567383 472.114 li
11.9048 472.68 li
11.3379 615.942 li
0 616.51 li
0 626.713 li
11.3379 627.28 li
11.9048 752.958 li
.567383 753.526 li
.567383 763.729 li
11.9048 764.295 li
11.0542 773.615 li
387.531 773.615 li
386.68 764.295 li
398.037 763.729 li
398.037 753.526 li
386.68 752.958 li
387.247 627.28 li
398.604 626.713 li
cp
1 0 0 rgb
@
156.504 584.472 mo
156.161 584.636 155.4 584.89 154.43 584.89 cv
152.251 584.89 150.833 583.413 150.833 581.205 cv
150.833 578.98 152.355 577.354 154.713 577.354 cv
155.489 577.354 156.176 577.548 156.534 577.742 cv
156.236 578.742 li
155.922 578.578 155.43 578.399 154.713 578.399 cv
153.057 578.399 152.162 579.637 152.162 581.129 cv
152.162 582.8 153.236 583.831 154.668 583.831 cv
155.415 583.831 155.907 583.652 156.28 583.488 cv
156.504 584.472 li
cp
0 0 1 rgb
@
158.775 581.129 mo
158.775 582.711 159.67 583.906 160.954 583.906 cv
162.208 583.906 163.147 582.726 163.147 581.099 cv
163.147 579.876 162.536 578.339 160.984 578.339 cv
159.447 578.339 158.775 579.771 158.775 581.129 cv
cp
164.491 581.055 mo
164.491 583.726 162.625 584.89 160.894 584.89 cv
158.954 584.89 157.432 583.458 157.432 581.174 cv
157.432 578.772 159.029 577.354 161.014 577.354 cv
163.088 577.354 164.491 578.861 164.491 581.055 cv
cp
@
166.15 579.458 mo
166.15 578.697 166.136 578.1 166.091 577.503 cv
167.255 577.503 li
167.33 578.697 li
167.359 578.697 li
167.717 578.025 168.553 577.354 169.747 577.354 cv
170.747 577.354 172.299 577.951 172.299 580.428 cv
172.299 584.726 li
170.985 584.726 li
170.985 580.562 li
170.985 579.398 170.553 578.429 169.314 578.429 cv
168.463 578.429 167.792 579.041 167.553 579.771 cv
167.494 579.935 167.464 580.16 167.464 580.383 cv
167.464 584.726 li
166.15 584.726 li
166.15 579.458 li
cp
@
175.958 575.772 mo
175.958 577.503 li
177.838 577.503 li
177.838 578.503 li
175.958 578.503 li
175.958 582.398 li
175.958 583.293 176.212 583.8 176.943 583.8 cv
177.301 583.8 177.51 583.771 177.704 583.711 cv
177.764 584.71 li
177.51 584.8 177.107 584.89 176.6 584.89 cv
175.988 584.89 175.496 584.681 175.182 584.337 cv
174.824 583.935 174.675 583.293 174.675 582.443 cv
174.675 578.503 li
173.556 578.503 li
173.556 577.503 li
174.675 577.503 li
174.675 576.16 li
175.958 575.772 li
cp
@
179.318 579.757 mo
179.318 578.906 179.303 578.175 179.258 577.503 cv
180.407 577.503 li
180.467 578.936 li
180.512 578.936 li
180.84 577.966 181.646 577.354 182.526 577.354 cv
182.661 577.354 182.765 577.369 182.884 577.384 cv
182.884 578.623 li
182.75 578.593 182.616 578.593 182.437 578.593 cv
181.511 578.593 180.855 579.279 180.676 580.264 cv
180.646 580.443 180.631 580.667 180.631 580.876 cv
180.631 584.726 li
179.318 584.726 li
179.318 579.757 li
cp
@
184.871 581.129 mo
184.871 582.711 185.767 583.906 187.05 583.906 cv
188.303 583.906 189.244 582.726 189.244 581.099 cv
189.244 579.876 188.632 578.339 187.08 578.339 cv
185.542 578.339 184.871 579.771 184.871 581.129 cv
cp
190.586 581.055 mo
190.586 583.726 188.721 584.89 186.99 584.89 cv
185.05 584.89 183.528 583.458 183.528 581.174 cv
183.528 578.772 185.125 577.354 187.109 577.354 cv
189.184 577.354 190.586 578.861 190.586 581.055 cv
cp
@
192.246 574.13 mo
193.56 574.13 li
193.56 584.726 li
192.246 584.726 li
192.246 574.13 li
cp
@
195.77 574.13 mo
197.083 574.13 li
197.083 584.726 li
195.77 584.726 li
195.77 574.13 li
cp
@
203.88 580.414 mo
203.894 579.592 203.535 578.294 202.057 578.294 cv
200.711 578.294 200.144 579.503 200.039 580.414 cv
203.88 580.414 li
cp
200.023 581.353 mo
200.054 583.129 201.175 583.861 202.505 583.861 cv
203.446 583.861 204.029 583.697 204.509 583.488 cv
204.747 584.427 li
204.284 584.636 203.476 584.89 202.325 584.89 cv
200.099 584.89 198.77 583.413 198.77 581.234 cv
198.77 579.055 200.054 577.354 202.161 577.354 cv
204.537 577.354 205.15 579.414 205.15 580.742 cv
205.15 581.01 205.137 581.205 205.105 581.353 cv
200.023 581.353 li
cp
@
206.782 579.757 mo
206.782 578.906 206.769 578.175 206.723 577.503 cv
207.874 577.503 li
207.935 578.936 li
207.979 578.936 li
208.308 577.966 209.114 577.354 209.997 577.354 cv
210.131 577.354 210.235 577.369 210.356 577.384 cv
210.356 578.623 li
210.222 578.593 210.086 578.593 209.907 578.593 cv
208.981 578.593 208.322 579.279 208.144 580.264 cv
208.112 580.443 208.099 580.667 208.099 580.876 cv
208.099 584.726 li
206.782 584.726 li
206.782 579.757 li
cp
@
316.11 669.938 mo
320.434 669.218 323.399 667.739 323.399 666.031 cv
323.399 663.616 317.469 661.658 310.153 661.658 cv
302.839 661.658 296.908 663.616 296.908 666.031 cv
296.908 667.727 299.83 669.197 304.101 669.921 cv
@
310.153 644.751 mo
310.153 658.936 li
@
312.747 653.564 mo
310.153 658.936 li
307.56 653.564 li
@
300 666.819 mo
304.758 670.052 li
299.051 670.789 li
@
320.306 666.819 mo
315.548 670.052 li
321.255 670.789 li
@
121.733 6.76563 mo
121.524 17.5352 li
110.754 17.3281 li
110.963 6.55859 li
121.733 6.76563 li
cp
1 0 0 rgb
@
223.197 57.6504 mo
232.471 52.1445 li
237.986 61.4004 li
228.712 66.9072 li
223.197 57.6504 li
cp
@
13.7666 82.2031 mo
24.5361 82.4121 li
24.3193 92.9883 li
13.5498 92.7842 li
13.7666 82.2031 li
cp
@
88.0552 63.9097 mo
152.571 64.5376 li
155.856 64.6343 158.442 67.3765 158.346 70.6636 cv
158.252 73.9478 155.508 76.5366 152.222 76.4399 cv
87.7085 75.8091 li
84.4224 75.7144 81.8345 72.9761 81.9302 69.689 cv
82.0269 66.3979 84.77 63.812 88.0552 63.9097 cv
cp
@
194.813 77.8467 mo
196.014 79.8652 198.623 80.5283 200.641 79.3281 cv
202.664 78.127 203.329 75.5186 202.124 73.501 cv
200.922 71.4805 198.313 70.8174 196.293 72.0195 cv
194.272 73.2188 193.613 75.8281 194.813 77.8467 cv
cp
@
57.1606 88.8145 mo
57.1987 86.4668 55.3218 84.5371 52.9722 84.502 cv
50.6255 84.4668 48.6929 86.3398 48.6577 88.6875 cv
48.6255 91.0371 50.4985 92.9688 52.8438 93.0059 cv
55.1968 93.0381 57.1265 91.1631 57.1606 88.8145 cv
cp
@
81.6353 55.064 mo
82.1035 55.3647 82.7754 55.5928 83.4951 55.5928 cv
84.5625 55.5928 85.1855 55.0288 85.1855 54.2124 cv
85.1855 53.4707 84.7534 53.0254 83.6631 52.6191 cv
82.3438 52.1387 81.5283 51.4429 81.5283 50.3159 cv
81.5283 49.0566 82.5713 48.1211 84.1426 48.1211 cv
84.958 48.1211 85.5693 48.3135 85.917 48.5171 cv
85.6299 49.3691 li
85.3774 49.2124 84.8374 48.9854 84.1064 48.9854 cv
83.0024 48.9854 82.583 49.6445 82.583 50.1948 cv
82.583 50.9507 83.0752 51.3223 84.1904 51.7559 cv
85.5576 52.2827 86.2412 52.9414 86.2412 54.1284 cv
86.2412 55.3765 85.3301 56.4683 83.4229 56.4683 cv
82.6436 56.4683 81.792 56.228 81.3604 55.9414 cv
81.6353 55.064 li
cp
0 0 1 rgb
@
88.7275 55.5215 mo
88.9912 55.5566 89.375 55.5679 89.7822 55.5679 cv
92.0264 55.5679 93.2256 54.3223 93.2256 52.1387 cv
93.2373 50.2319 92.1582 49.02 89.9502 49.02 cv
89.4111 49.02 89.0024 49.0693 88.7275 49.1284 cv
88.7275 55.5215 li
cp
87.6836 48.373 mo
88.3193 48.2651 89.0752 48.1934 89.9023 48.1934 cv
91.4023 48.1934 92.4692 48.5527 93.1772 49.2007 cv
93.9092 49.8589 94.3291 50.7949 94.3291 52.1035 cv
94.3291 53.4219 93.9092 54.5015 93.166 55.2437 cv
92.3984 55.999 91.1494 56.4072 89.5791 56.4072 cv
88.8232 56.4072 88.2114 56.373 87.6836 56.312 cv
87.6836 48.373 li
cp
@
102.323 56.1318 mo
102.046 56.2632 101.436 56.4683 100.656 56.4683 cv
98.9053 56.4683 97.7656 55.2808 97.7656 53.5059 cv
97.7656 51.7183 98.9893 50.4116 100.884 50.4116 cv
101.508 50.4116 102.06 50.5679 102.346 50.7227 cv
102.107 51.5269 li
101.855 51.394 101.46 51.2515 100.884 51.2515 cv
99.5522 51.2515 98.833 52.2456 98.833 53.4448 cv
98.833 54.7891 99.6963 55.6167 100.847 55.6167 cv
101.447 55.6167 101.844 55.4727 102.144 55.3408 cv
102.323 56.1318 li
cp
@
106.621 53.374 mo
105.469 53.3491 104.162 53.5547 104.162 54.6812 cv
104.162 55.3765 104.618 55.6895 105.146 55.6895 cv
105.913 55.6895 106.404 55.208 106.572 54.7158 cv
106.608 54.5972 106.621 54.4766 106.621 54.3804 cv
106.621 53.374 li
cp
107.64 54.9448 mo
107.64 55.4487 107.664 55.9414 107.724 56.3359 cv
106.776 56.3359 li
106.692 55.6055 li
106.656 55.6055 li
106.333 56.0605 105.709 56.4683 104.882 56.4683 cv
103.706 56.4683 103.106 55.6406 103.106 54.7998 cv
103.106 53.3979 104.354 52.6304 106.596 52.6421 cv
106.596 52.5234 li
106.596 52.0547 106.465 51.1792 105.277 51.1904 cv
104.726 51.1904 104.162 51.3472 103.753 51.623 cv
103.515 50.9155 li
103.994 50.6147 104.702 50.4116 105.434 50.4116 cv
107.208 50.4116 107.64 51.623 107.64 52.7734 cv
107.64 54.9448 li
cp
@
109.346 52.3408 mo
109.346 51.6582 109.334 51.0723 109.299 50.5308 cv
110.222 50.5308 li
110.271 51.6831 li
110.307 51.6831 li
110.57 50.9043 111.218 50.4116 111.926 50.4116 cv
112.033 50.4116 112.117 50.4238 112.214 50.4355 cv
112.214 51.4312 li
112.105 51.4063 111.997 51.4063 111.854 51.4063 cv
111.11 51.4063 110.582 51.958 110.438 52.749 cv
110.414 52.894 110.402 53.0742 110.402 53.2422 cv
110.402 56.3359 li
109.346 56.3359 li
109.346 52.3408 li
cp
@
117.11 52.894 mo
117.11 52.7612 117.097 52.5811 117.062 52.4507 cv
116.906 51.79 116.33 51.2383 115.539 51.2383 cv
114.447 51.2383 113.799 52.1987 113.799 53.4707 cv
113.799 54.6445 114.387 55.6167 115.515 55.6167 cv
116.222 55.6167 116.87 55.1367 117.062 54.3574 cv
117.097 54.2124 117.11 54.0703 117.11 53.9023 cv
117.11 52.894 li
cp
118.153 47.8208 mo
118.153 54.8379 li
118.153 55.3535 118.177 55.9414 118.201 56.3359 cv
117.266 56.3359 li
117.218 55.3276 li
117.182 55.3276 li
116.87 55.9766 116.175 56.4683 115.227 56.4683 cv
113.823 56.4683 112.731 55.2808 112.731 53.5171 cv
112.719 51.5879 113.932 50.4116 115.334 50.4116 cv
116.234 50.4116 116.822 50.8311 117.085 51.2871 cv
117.11 51.2871 li
117.11 47.8208 li
118.153 47.8208 li
cp
@
252.253 74.0205 mo
251.744 73.0879 li
249.496 68.9834 241.294 51.8809 238.935 47.8398 cv
232.181 36.2695 li
229.1 30.9961 li
218.564 13.4473 206.853 .509766 183.522 .0703125 cv
50.3511 .0703125 li
28.4365 -.351563 9.06543 18.4121 8.64355 40.3281 cv
8.0752 48.7031 li
10.6924 166.348 li
10.4204 175.697 17.5864 181.328 26.6084 178.863 cv
31.2236 176.902 li
52.9072 168.084 li
36.9692 143.132 li
51.4688 134.242 li
66.5894 157.861 li
78.9888 124.768 li
80.9438 119.682 li
82.8101 115.394 88.1626 111.93 92.8403 111.986 cv
168.125 112.886 li
177.478 112.813 191.945 109.242 200.365 105.164 cv
205.594 102.848 li
248.489 84.7891 li
252.805 82.9697 254.501 78.126 252.253 74.0205 cv
cp
1 0 0 rgb
@
272.217 209.16 mo
272.426 198.39 li
283.214 198.597 li
283.005 209.367 li
272.217 209.16 li
cp
@
170.67 158.275 mo
161.412 163.781 li
155.906 154.525 li
165.164 149.018 li
170.67 158.275 li
cp
@
380.37 133.722 mo
369.582 133.513 li
369.799 122.937 li
380.587 123.141 li
380.37 133.722 li
cp
@
199.014 138.079 mo
197.813 136.06 195.205 135.397 193.188 136.597 cv
191.168 137.798 190.504 140.407 191.707 142.424 cv
192.906 144.445 195.514 145.108 197.534 143.906 cv
199.555 142.707 200.214 140.097 199.014 138.079 cv
cp
@
336.9 127.111 mo
336.863 129.458 338.744 131.388 341.097 131.423 cv
343.447 131.458 345.384 129.585 345.419 127.238 cv
345.45 124.888 343.574 122.957 341.226 122.919 cv
338.869 122.887 336.936 124.762 336.9 127.111 cv
cp
@
141.664 141.905 mo
142.172 142.837 li
144.416 146.942 152.604 164.044 154.959 168.085 cv
161.701 179.656 li
164.777 184.929 li
175.295 202.478 186.986 215.416 210.321 215.855 cv
343.723 215.855 li
365.675 216.277 385.079 197.513 385.502 175.597 cv
386.071 167.222 li
383.449 49.5776 li
383.721 40.228 376.543 34.5972 367.506 37.062 cv
362.883 39.0229 li
341.162 47.8413 li
357.411 72.7935 li
342.886 81.6831 li
327.457 58.0645 li
315.035 91.1577 li
313.076 96.2437 li
311.208 100.532 305.845 103.996 301.159 103.939 cv
225.745 103.04 li
216.375 103.113 201.884 106.683 193.464 110.761 cv
188.242 113.078 li
145.422 131.136 li
141.113 132.956 139.42 137.799 141.664 141.905 cv
cp
@
442.949 304.712 mo
524.215 304.712 li
@
442.949 295.765 mo
524.215 295.765 li
@
437.707 309.187 mo
477.027 309.187 li
@
437.707 300.24 mo
477.027 300.24 li
@
437.707 291.292 mo
477.027 291.292 li
@
482.272 309.187 mo
571.401 309.187 li
@
482.272 300.24 mo
571.401 300.24 li
@
482.272 291.292 mo
571.401 291.292 li
@
529.457 295.765 mo
621.422 295.765 li
@
529.457 304.712 mo
621.422 304.712 li
@
629.201 304.714 mo
710.605 304.714 li
@
629.201 295.765 mo
710.605 295.765 li
@
576.645 309.187 mo
623.953 309.187 li
623.953 309.187 li
663.34 309.187 li
@
576.645 300.24 mo
623.953 300.24 li
623.953 300.24 li
663.34 300.24 li
@
576.645 291.292 mo
623.953 291.292 li
663.34 291.292 li
@
668.594 309.187 mo
741.431 309.183 li
@
668.594 300.24 mo
741.431 300.24 li
@
668.594 291.292 mo
741.431 291.292 li
@
442.949 286.412 mo
524.215 286.412 li
@
437.707 281.937 mo
477.027 281.937 li
@
482.272 281.937 mo
571.401 281.937 li
@
529.457 286.412 mo
621.422 286.412 li
@
629.201 286.412 mo
710.605 286.412 li
@
576.645 281.937 mo
623.953 281.937 li
663.34 281.937 li
@
668.594 281.937 mo
741.431 281.937 li
@
746.681 309.187 mo
812.199 309.183 li
@
746.681 300.24 mo
812.199 300.24 li
@
746.681 291.292 mo
812.199 291.292 li
@
746.681 281.937 mo
812.199 281.937 li
@
437.707 264.037 mo
449.947 264.037 li
449.947 268.003 li
456.185 268.003 li
456.185 264.037 li
459.342 264.037 li
459.342 256.097 li
456.185 256.097 li
456.185 252.128 li
449.947 252.128 li
449.947 256.097 li
437.707 256.097 li
@
812.965 264.037 mo
800.703 264.037 li
800.703 268.003 li
794.457 268.003 li
794.457 264.037 li
791.293 264.037 li
791.293 256.097 li
794.457 256.097 li
794.457 252.128 li
800.703 252.128 li
800.703 256.097 li
812.965 256.097 li
@
437.707 412.866 mo
449.947 412.866 li
449.947 416.833 li
456.185 416.833 li
456.185 412.866 li
459.342 412.866 li
459.342 404.927 li
456.185 404.927 li
456.185 400.958 li
449.947 400.958 li
449.947 404.927 li
437.707 404.927 li
@
812.219 412.866 mo
799.957 412.866 li
799.957 416.833 li
793.711 416.833 li
793.711 412.866 li
790.549 412.866 li
790.549 404.927 li
793.711 404.927 li
793.711 400.958 li
799.957 400.958 li
799.957 404.927 li
812.219 404.927 li
@
628.781 438.826 mo
628.781 426.585 li
632.754 426.585 li
632.754 420.349 li
628.781 420.349 li
628.781 417.191 li
620.836 417.191 li
620.836 420.349 li
616.867 420.349 li
616.867 426.585 li
620.836 426.585 li
620.836 438.826 li
@
620.834 228.531 mo
620.834 240.773 li
616.867 240.773 li
616.867 247.009 li
620.834 247.009 li
620.834 250.166 li
628.779 250.166 li
628.779 247.009 li
632.754 247.009 li
632.754 240.773 li
628.779 240.773 li
628.779 228.531 li
@
732.283 366.092 mo
597.738 366.092 li
597.738 326.409 li
732.283 326.409 li
732.283 366.092 li
cp
@
812.351 381.466 mo
787.771 381.466 li
783.395 390.438 774.173 396.618 763.506 396.618 cv
748.607 396.618 736.532 384.56 736.532 369.688 cv
736.532 354.817 748.607 342.76 763.506 342.76 cv
772.623 342.76 780.68 347.274 785.563 354.184 cv
812.352 354.184 li
@
593.99 228.501 mo
463.086 228.501 li
462.52 217.193 li
452.313 217.193 li
451.748 228.501 li
437.576 228.501 li
437.576 438.826 li
452.6 438.826 li
453.166 450.164 li
463.371 450.164 li
463.937 438.826 li
593.141 438.826 li
654.817 438.826 li
785.943 438.826 li
786.514 450.164 li
796.734 450.164 li
797.301 438.826 li
812.352 438.826 li
812.352 228.501 li
796.449 228.501 li
795.883 217.193 li
785.662 217.193 li
785.093 228.501 li
655.668 228.501 li
593.99 228.501 li
cp
@
442.949 728.996 mo
524.215 728.996 li
@
442.949 720.048 mo
524.215 720.048 li
@
442.949 711.101 mo
524.215 711.101 li
@
442.949 702.152 mo
524.215 702.152 li
@
442.949 693.205 mo
524.215 693.205 li
@
437.707 733.47 mo
477.027 733.47 li
@
437.707 724.523 mo
477.027 724.523 li
@
437.707 715.576 mo
477.027 715.576 li
@
437.707 706.626 mo
477.027 706.626 li
@
437.707 697.679 mo
477.027 697.679 li
@
437.707 688.73 mo
477.027 688.73 li
@
482.272 733.47 mo
571.401 733.47 li
@
482.272 724.523 mo
571.401 724.523 li
@
482.272 715.576 mo
571.401 715.576 li
@
482.272 706.626 mo
571.401 706.626 li
@
482.272 697.679 mo
571.401 697.679 li
@
482.272 688.73 mo
571.401 688.73 li
@
529.457 693.205 mo
618.589 693.205 li
@
529.457 702.152 mo
618.589 702.152 li
@
529.457 711.101 mo
618.589 711.101 li
@
529.457 720.048 mo
618.589 720.048 li
@
529.457 728.996 mo
618.589 728.996 li
@
576.645 733.47 mo
623.954 733.47 li
@
576.645 724.523 mo
623.954 724.523 li
@
576.645 715.576 mo
623.954 715.576 li
@
576.645 706.626 mo
623.954 706.626 li
@
576.645 697.679 mo
623.954 697.679 li
@
576.645 688.73 mo
623.954 688.73 li
@
629.201 728.998 mo
710.605 728.998 li
@
629.201 720.048 mo
710.605 720.048 li
@
629.201 711.101 mo
710.605 711.101 li
@
629.201 702.154 mo
710.605 702.154 li
@
629.201 693.207 mo
710.605 693.207 li
@
623.954 733.47 mo
663.34 733.47 li
@
623.954 724.525 mo
663.34 724.525 li
@
623.954 715.576 mo
663.34 715.576 li
@
623.954 706.626 mo
663.34 706.626 li
@
623.954 697.679 mo
663.34 697.679 li
@
623.954 688.732 mo
663.34 688.732 li
@
668.594 733.47 mo
757.874 733.47 li
@
668.594 724.525 mo
757.874 724.525 li
@
668.594 715.576 mo
757.874 715.576 li
@
668.594 706.626 mo
757.874 706.626 li
@
668.594 697.679 mo
757.874 697.679 li
@
668.594 688.732 mo
757.874 688.732 li
@
715.856 693.207 mo
806.563 693.207 li
@
715.856 702.154 mo
806.563 702.154 li
@
715.856 711.101 mo
806.563 711.101 li
@
715.856 720.048 mo
806.563 720.048 li
@
715.856 728.998 mo
806.563 728.998 li
@
763.125 733.47 mo
812.219 733.47 li
@
763.125 724.525 mo
812.219 724.525 li
@
763.125 715.576 mo
812.219 715.576 li
@
763.125 706.626 mo
812.219 706.626 li
@
763.125 697.679 mo
812.219 697.679 li
@
763.125 688.732 mo
812.219 688.732 li
@
442.949 549.99 mo
524.215 549.99 li
@
442.949 541.042 mo
524.215 541.042 li
@
442.949 532.093 mo
524.215 532.093 li
@
442.949 523.146 mo
524.215 523.146 li
@
442.949 514.197 mo
524.215 514.197 li
@
437.707 554.462 mo
477.027 554.462 li
@
437.707 545.517 mo
477.027 545.517 li
@
437.707 536.57 mo
477.027 536.57 li
@
437.707 527.619 mo
477.027 527.619 li
@
437.707 518.671 mo
477.027 518.671 li
@
437.707 509.724 mo
477.027 509.724 li
@
482.272 554.462 mo
571.401 554.462 li
@
482.272 545.517 mo
571.401 545.517 li
@
482.272 536.57 mo
571.401 536.57 li
@
482.272 527.619 mo
571.401 527.619 li
@
482.272 518.671 mo
571.401 518.671 li
@
482.272 509.724 mo
571.401 509.724 li
@
529.457 514.197 mo
618.589 514.197 li
@
529.457 523.146 mo
618.589 523.146 li
@
529.457 532.093 mo
618.589 532.093 li
@
529.457 541.042 mo
618.589 541.042 li
@
529.457 549.99 mo
618.589 549.99 li
@
576.645 554.462 mo
663.34 554.462 li
@
576.645 545.517 mo
663.34 545.517 li
@
576.645 536.57 mo
663.34 536.57 li
@
576.645 527.619 mo
663.34 527.619 li
@
576.645 518.671 mo
663.34 518.673 li
@
576.645 509.724 mo
663.34 509.724 li
@
629.201 549.99 mo
710.605 549.99 li
@
629.201 541.042 mo
710.605 541.042 li
@
629.201 532.095 mo
710.605 532.095 li
@
629.201 523.146 mo
710.605 523.146 li
@
629.201 514.199 mo
710.605 514.199 li
@
668.594 554.464 mo
757.874 554.464 li
@
668.594 545.517 mo
757.874 545.517 li
@
668.594 536.57 mo
757.874 536.57 li
@
668.594 527.621 mo
757.874 527.621 li
@
668.594 518.673 mo
757.874 518.673 li
@
668.594 509.724 mo
757.874 509.724 li
@
715.856 514.199 mo
806.563 514.199 li
@
715.856 523.146 mo
806.563 523.146 li
@
715.856 532.095 mo
806.563 532.095 li
@
715.856 541.042 mo
806.563 541.042 li
@
715.856 549.99 mo
806.563 549.99 li
@
763.125 554.464 mo
812.219 554.464 li
@
763.125 545.517 mo
812.219 545.517 li
@
763.125 536.57 mo
812.219 536.57 li
@
763.125 527.621 mo
812.219 527.621 li
@
763.125 518.673 mo
812.219 518.673 li
@
763.125 509.724 mo
812.219 509.724 li
@
708.564 670.191 mo
708.564 671.751 707.287 673.027 705.726 673.027 cv
494.693 673.027 li
493.135 673.027 491.859 671.751 491.859 670.191 cv
491.859 603.009 li
491.859 601.449 493.135 600.173 494.693 600.173 cv
705.726 600.173 li
707.287 600.173 708.564 601.449 708.564 603.009 cv
708.564 670.191 li
cp
@
791.742 638.721 mo
791.742 647.325 784.76 654.295 776.141 654.295 cv
767.524 654.295 760.537 647.325 760.537 638.721 cv
760.537 630.12 767.524 623.145 776.141 623.145 cv
784.76 623.145 791.742 630.12 791.742 638.721 cv
cp
@
802.127 682.023 mo
802.127 684.607 800.03 686.701 797.443 686.701 cv
794.855 686.701 792.758 684.607 792.758 682.023 cv
792.758 679.441 794.855 677.345 797.443 677.345 cv
800.03 677.345 802.127 679.441 802.127 682.023 cv
cp
@
802.127 561.976 mo
802.127 564.558 800.03 566.654 797.443 566.654 cv
794.855 566.654 792.758 564.558 792.758 561.976 cv
792.758 559.392 794.855 557.298 797.443 557.298 cv
800.03 557.298 802.127 559.392 802.127 561.976 cv
cp
@
455.436 682.025 mo
455.436 684.609 453.341 686.703 450.757 686.703 cv
448.173 686.703 446.08 684.609 446.08 682.025 cv
446.08 679.443 448.173 677.349 450.757 677.349 cv
453.341 677.349 455.436 679.443 455.436 682.025 cv
cp
@
455.436 561.978 mo
455.436 564.562 453.341 566.656 450.757 566.656 cv
448.173 566.656 446.08 564.562 446.08 561.978 cv
446.08 559.396 448.173 557.3 450.757 557.3 cv
453.341 557.3 455.436 559.396 455.436 561.978 cv
cp
@
463.654 472.052 mo
463.654 461.283 li
452.884 461.283 li
452.884 472.052 li
463.654 472.052 li
cp
@
797.018 472.052 mo
797.018 461.283 li
786.227 461.283 li
786.227 472.052 li
797.018 472.052 li
cp
@
629.063 466.666 mo
629.063 469.015 627.156 470.919 624.806 470.919 cv
622.457 470.919 620.554 469.015 620.554 466.666 cv
620.554 464.318 622.457 462.416 624.806 462.416 cv
627.156 462.416 629.063 464.318 629.063 466.666 cv
cp
@
462.804 763.63 mo
462.804 752.861 li
452.033 752.861 li
452.033 763.63 li
462.804 763.63 li
cp
@
796.164 763.63 mo
796.164 752.861 li
785.377 752.861 li
785.377 763.63 li
796.164 763.63 li
cp
@
629.063 758.246 mo
629.063 760.593 627.156 762.498 624.806 762.498 cv
622.457 762.498 620.554 760.593 620.554 758.246 cv
620.554 755.896 622.457 753.994 624.806 753.994 cv
627.156 753.994 629.063 755.896 629.063 758.246 cv
cp
@
530.026 583.517 mo
528.102 578.13 li
527.897 577.56 527.348 577.179 526.733 577.179 cv
526.732 577.179 526.73 577.179 526.729 577.179 cv
526.129 577.181 525.592 577.546 525.379 578.093 cv
524.096 581.146 li
522.813 578.093 li
522.601 577.548 522.065 577.185 521.467 577.179 cv
521.463 577.179 521.461 577.179 521.457 577.179 cv
521.439 577.179 521.423 577.183 521.404 577.183 cv
521.352 577.171 521.296 577.162 521.238 577.162 cv
519.146 577.162 li
518.754 577.162 518.436 577.48 518.436 577.873 cv
518.436 578.265 518.754 578.583 519.146 578.583 cv
519.929 578.583 li
518.166 583.517 li
517.971 584.058 518.254 584.654 518.795 584.847 cv
518.91 584.888 519.029 584.91 519.146 584.91 cv
519.574 584.91 519.975 584.644 520.127 584.216 cv
521.506 580.359 li
523.136 584.238 li
523.16 584.294 523.188 584.345 523.22 584.394 cv
523.227 584.408 523.236 584.417 523.244 584.431 cv
523.271 584.468 523.301 584.505 523.332 584.541 cv
523.346 584.552 523.359 584.568 523.373 584.58 cv
523.406 584.613 523.443 584.644 523.482 584.673 cv
523.494 584.681 523.506 584.691 523.517 584.699 cv
523.566 584.732 523.622 584.761 523.679 584.787 cv
523.683 584.789 523.688 584.792 523.693 584.794 cv
523.703 584.798 523.714 584.798 523.725 584.804 cv
523.769 584.822 523.813 584.835 523.86 584.845 cv
523.879 584.851 523.897 584.855 523.916 584.859 cv
523.975 584.869 524.033 584.875 524.093 584.876 cv
524.094 584.876 524.095 584.876 524.095 584.876 cv
524.096 584.876 524.096 584.876 524.096 584.876 cv
524.097 584.876 524.097 584.876 524.097 584.876 cv
524.098 584.876 524.099 584.876 524.1 584.876 cv
524.158 584.875 524.218 584.869 524.276 584.859 cv
524.295 584.855 524.313 584.851 524.332 584.845 cv
524.379 584.835 524.424 584.822 524.468 584.804 cv
524.478 584.8 524.488 584.798 524.5 584.794 cv
524.505 584.792 524.51 584.789 524.514 584.787 cv
524.57 584.761 524.625 584.732 524.676 584.699 cv
524.688 584.691 524.697 584.681 524.711 584.673 cv
524.748 584.644 524.785 584.615 524.819 584.58 cv
524.832 584.568 524.847 584.552 524.859 584.539 cv
524.891 584.507 524.92 584.47 524.945 584.431 cv
524.955 584.417 524.965 584.408 524.973 584.394 cv
525.004 584.345 525.031 584.294 525.057 584.238 cv
525.061 584.228 li
525.061 584.228 li
526.687 580.359 li
528.064 584.216 li
528.217 584.644 528.617 584.91 529.045 584.91 cv
529.161 584.91 529.281 584.888 529.396 584.847 cv
529.938 584.654 530.22 584.058 530.026 583.517 cv
cp
0 0 1 rgb
@
515.326 574.132 mo
515.932 574.132 516.423 574.625 516.423 575.232 cv
516.423 575.835 515.932 576.326 515.326 576.326 cv
514.72 576.326 514.229 575.835 514.229 575.232 cv
514.229 574.625 514.72 574.132 515.326 574.132 cv
514.272 578.087 mo
514.272 577.525 514.504 577.035 515.326 577.035 cv
516.148 577.035 516.379 577.525 516.379 578.087 cv
516.379 583.906 li
516.379 584.466 516.148 584.958 515.326 584.958 cv
514.504 584.958 514.272 584.466 514.272 583.906 cv
514.272 578.087 li
cp
@
505.104 574.197 mo
505.056 574.183 505.006 574.179 504.954 574.179 cv
503.826 574.179 li
503.434 574.179 503.115 574.496 503.115 574.888 cv
503.115 575.283 503.434 575.599 503.826 575.599 cv
503.986 575.599 li
503.986 583.906 li
503.986 584.597 504.406 584.958 505.04 584.958 cv
505.676 584.958 506.094 584.597 506.094 583.906 cv
506.094 575.244 li
506.094 574.576 505.702 574.22 505.104 574.197 cv
cp
@
542.262 574.191 mo
542.248 574.191 542.234 574.195 542.221 574.195 cv
542.174 574.183 542.125 574.179 542.074 574.179 cv
540.946 574.179 li
540.554 574.179 540.236 574.496 540.236 574.888 cv
540.236 575.283 540.554 575.599 540.946 575.599 cv
541.209 575.599 li
541.209 583.906 li
541.209 584.597 541.627 584.958 542.262 584.958 cv
542.897 584.958 543.316 584.597 543.316 583.906 cv
543.316 582.302 li
543.316 580.037 li
543.316 575.244 li
543.316 574.552 542.897 574.191 542.262 574.191 cv
cp
@
548.179 583.255 mo
545.985 580.312 li
547.543 578.681 li
547.731 578.478 547.861 578.363 547.861 577.986 cv
547.861 577.453 547.342 577.035 546.865 577.035 cv
546.548 577.035 546.273 577.208 546.057 577.439 cv
544.226 579.474 li
544.226 579.474 543.89 579.783 543.89 580.398 cv
543.89 581.037 544.455 581.652 544.455 581.652 cv
546.447 584.466 li
546.605 584.699 546.88 584.958 547.398 584.958 cv
547.963 584.958 548.396 584.466 548.396 583.933 cv
548.396 583.587 548.25 583.355 548.179 583.255 cv
cp
@
501.316 583.55 mo
501.314 581.218 li
501.314 581.187 501.31 581.16 501.307 581.13 cv
501.31 581.046 501.316 580.964 501.316 580.873 cv
501.316 575.373 li
501.316 574.667 500.854 574.191 500.133 574.191 cv
499.411 574.191 498.949 574.667 498.949 575.373 cv
498.949 581.062 li
498.949 582.474 498.156 583.111 496.799 583.111 cv
495.441 583.111 494.647 582.474 494.647 581.062 cv
494.647 575.373 li
494.647 574.722 494.25 574.269 493.619 574.205 cv
493.562 574.189 493.504 574.179 493.441 574.179 cv
490.459 574.179 li
490.066 574.179 489.748 574.496 489.748 574.888 cv
489.748 575.283 490.066 575.599 490.459 575.599 cv
492.281 575.599 li
492.281 580.873 li
492.281 583.732 494.041 585.015 496.799 585.015 cv
498.067 585.015 499.121 584.74 499.895 584.166 cv
499.895 584.261 li
499.895 584.654 500.212 584.972 500.604 584.972 cv
501.316 584.972 li
501.707 584.972 502.027 584.654 502.027 584.261 cv
502.027 583.869 501.707 583.55 501.316 583.55 cv
cp
@
511.486 577.22 mo
510.851 577.22 li
510.851 575.939 li
510.851 575.244 510.432 574.884 509.797 574.884 cv
509.162 574.884 508.744 575.244 508.744 575.939 cv
508.744 577.22 li
508.744 577.224 li
508.707 577.224 li
508.315 577.224 507.998 577.542 507.998 577.935 cv
507.998 578.328 508.315 578.646 508.707 578.646 cv
508.744 578.646 li
508.744 583.082 li
508.744 583.093 li
508.744 583.949 li
508.744 584.64 509.162 585.001 509.797 585.001 cv
510.432 585.001 510.851 584.64 510.851 583.949 cv
510.851 583.093 li
510.851 582.822 li
510.851 578.609 li
511.486 578.609 li
512.107 578.609 512.438 578.419 512.438 577.916 cv
512.438 577.41 512.107 577.22 511.486 577.22 cv
cp
@
563.816 577.001 mo
562.615 577.001 li
562.14 577.001 561.744 577.322 561.617 577.757 cv
561.502 577.283 561.13 577.035 560.607 577.035 cv
560.592 577.035 560.578 577.037 560.563 577.037 cv
560.518 577.029 560.469 577.023 560.419 577.023 cv
559.291 577.023 li
558.897 577.023 558.582 577.339 558.582 577.732 cv
558.582 578.125 558.897 578.443 559.291 578.443 cv
559.553 578.443 li
559.553 583.906 li
559.553 584.597 559.971 584.958 560.607 584.958 cv
561.242 584.958 561.662 584.597 561.662 583.906 cv
561.662 582.302 li
561.662 580.037 li
561.662 579.654 li
562.777 578.81 li
563.816 578.81 li
564.392 578.81 564.857 578.619 564.857 578.042 cv
564.857 577.468 564.392 577.001 563.816 577.001 cv
cp
@
538.77 582.734 mo
538.77 579.201 li
538.77 577.685 537.24 577.179 534.461 577.179 cv
532.622 577.482 li
532.184 577.574 531.781 577.812 531.781 578.322 cv
531.781 578.716 532.06 579.166 532.622 579.082 cv
534.617 578.763 li
534.715 578.763 li
535.334 578.763 li
536.041 578.763 536.662 578.853 536.662 579.458 cv
536.662 581.22 li
536.662 582.042 li
536.662 582.822 535.955 583.572 534.801 583.572 cv
534.079 583.572 533.631 583.183 533.631 582.707 cv
533.631 582.072 534.107 581.796 534.988 581.667 cv
534.988 581.667 535.594 581.544 535.426 580.916 cv
535.257 580.285 534.469 580.382 534.469 580.382 cv
532.852 580.57 531.523 581.062 531.523 582.806 cv
531.523 584.136 532.707 584.958 533.905 584.958 cv
535.017 584.958 535.97 584.64 536.793 583.732 cv
536.821 584.38 537.125 584.958 538.033 584.958 cv
538.539 584.958 538.986 584.626 538.986 584.15 cv
538.986 583.818 538.77 583.617 538.77 582.734 cv
@
553.264 581.394 mo
553.312 581.404 553.361 581.412 553.412 581.412 cv
556.242 581.412 li
556.293 581.412 556.343 581.404 556.391 581.394 cv
556.537 581.394 li
557.242 581.394 557.459 581.205 557.459 580.484 cv
557.459 578.751 556.074 577.035 553.649 577.035 cv
551.152 577.035 549.665 578.681 549.665 581.134 cv
549.665 582.966 550.776 584.958 553.722 584.958 cv
556.041 584.638 li
556.537 584.546 557.004 584.183 556.943 583.613 cv
556.902 583.224 556.603 582.869 556.041 582.951 cv
553.725 583.308 li
553.722 583.312 li
552.496 583.312 551.772 582.505 551.772 581.394 cv
551.772 581.394 551.432 578.505 553.692 578.505 cv
554.615 578.505 555.326 579.191 555.459 580.132 cv
553.412 580.132 li
553.059 580.132 552.772 580.421 552.772 580.773 cv
552.772 581.07 552.977 581.318 553.253 581.388 cv
553.253 581.394 li
553.264 581.394 li
cp
@
824.275 626.65 mo
824.275 616.447 li
812.918 615.878 li
812.352 472.617 li
823.708 472.05 li
823.708 461.847 li
812.352 461.279 li
812.352 461.279 li
813.203 451.073 li
436.725 451.073 li
437.576 461.279 li
426.238 461.847 li
426.238 472.05 li
437.576 472.617 li
437.009 615.878 li
425.671 616.447 li
425.671 626.65 li
437.009 627.216 li
437.576 752.894 li
426.238 753.462 li
426.238 763.666 li
437.576 764.232 li
436.725 773.551 li
813.201 773.551 li
812.351 764.232 li
823.708 763.666 li
823.708 753.462 li
812.351 752.894 li
812.918 627.216 li
824.275 626.65 li
cp
1 0 0 rgb
@
582.176 584.409 mo
581.832 584.573 581.07 584.827 580.101 584.827 cv
577.922 584.827 576.504 583.349 576.504 581.141 cv
576.504 578.917 578.026 577.291 580.385 577.291 cv
581.16 577.291 581.847 577.485 582.205 577.678 cv
581.906 578.678 li
581.594 578.514 581.101 578.335 580.385 578.335 cv
578.729 578.335 577.832 579.574 577.832 581.066 cv
577.832 582.737 578.906 583.767 580.34 583.767 cv
581.086 583.767 581.578 583.588 581.951 583.424 cv
582.176 584.409 li
cp
0 0 1 rgb
@
584.446 581.066 mo
584.446 582.648 585.342 583.842 586.625 583.842 cv
587.879 583.842 588.818 582.663 588.818 581.036 cv
588.818 579.813 588.207 578.276 586.654 578.276 cv
585.117 578.276 584.446 579.708 584.446 581.066 cv
cp
590.162 580.992 mo
590.162 583.663 588.297 584.827 586.564 584.827 cv
584.625 584.827 583.104 583.394 583.104 581.111 cv
583.104 578.708 584.699 577.291 586.685 577.291 cv
588.759 577.291 590.162 578.797 590.162 580.992 cv
cp
@
591.821 579.395 mo
591.821 578.633 591.807 578.037 591.762 577.44 cv
592.926 577.44 li
593 578.633 li
593.03 578.633 li
593.388 577.961 594.225 577.291 595.418 577.291 cv
596.418 577.291 597.97 577.887 597.97 580.365 cv
597.97 584.663 li
596.656 584.663 li
596.656 580.499 li
596.656 579.334 596.224 578.366 594.984 578.366 cv
594.135 578.366 593.463 578.977 593.225 579.708 cv
593.164 579.872 593.135 580.096 593.135 580.32 cv
593.135 584.663 li
591.821 584.663 li
591.821 579.395 li
cp
@
601.629 575.708 mo
601.629 577.44 li
603.51 577.44 li
603.51 578.44 li
601.629 578.44 li
601.629 582.334 li
601.629 583.23 601.883 583.737 602.613 583.737 cv
602.972 583.737 603.182 583.708 603.375 583.648 cv
603.435 584.647 li
603.182 584.737 602.778 584.827 602.271 584.827 cv
601.658 584.827 601.166 584.618 600.854 584.274 cv
600.495 583.872 600.346 583.23 600.346 582.379 cv
600.346 578.44 li
599.227 578.44 li
599.227 577.44 li
600.346 577.44 li
600.346 576.096 li
601.629 575.708 li
cp
@
604.988 579.694 mo
604.988 578.842 604.974 578.112 604.929 577.44 cv
606.078 577.44 li
606.138 578.873 li
606.183 578.873 li
606.511 577.903 607.316 577.291 608.197 577.291 cv
608.332 577.291 608.436 577.305 608.555 577.321 cv
608.555 578.559 li
608.421 578.53 608.287 578.53 608.107 578.53 cv
607.182 578.53 606.525 579.215 606.347 580.201 cv
606.316 580.379 606.302 580.604 606.302 580.813 cv
606.302 584.663 li
604.988 584.663 li
604.988 579.694 li
cp
@
610.542 581.066 mo
610.542 582.648 611.438 583.842 612.721 583.842 cv
613.975 583.842 614.914 582.663 614.914 581.036 cv
614.914 579.813 614.303 578.276 612.75 578.276 cv
611.213 578.276 610.542 579.708 610.542 581.066 cv
cp
616.258 580.992 mo
616.258 583.663 614.393 584.827 612.661 584.827 cv
610.721 584.827 609.199 583.394 609.199 581.111 cv
609.199 578.708 610.795 577.291 612.78 577.291 cv
614.854 577.291 616.258 578.797 616.258 580.992 cv
cp
@
617.917 574.067 mo
619.23 574.067 li
619.23 584.663 li
617.917 584.663 li
617.917 574.067 li
cp
@
621.44 574.067 mo
622.754 574.067 li
622.754 584.663 li
621.44 584.663 li
621.44 574.067 li
cp
@
629.551 580.35 mo
629.564 579.529 629.206 578.231 627.729 578.231 cv
626.382 578.231 625.814 579.44 625.71 580.35 cv
629.551 580.35 li
cp
625.694 581.29 mo
625.725 583.066 626.846 583.797 628.176 583.797 cv
629.117 583.797 629.7 583.633 630.18 583.424 cv
630.418 584.364 li
629.955 584.573 629.146 584.827 627.996 584.827 cv
625.77 584.827 624.441 583.349 624.441 581.17 cv
624.441 578.992 625.725 577.291 627.832 577.291 cv
630.208 577.291 630.821 579.35 630.821 580.678 cv
630.821 580.947 630.808 581.141 630.776 581.29 cv
625.694 581.29 li
cp
@
632.453 579.694 mo
632.453 578.842 632.439 578.112 632.395 577.44 cv
633.545 577.44 li
633.605 578.873 li
633.65 578.873 li
633.979 577.903 634.785 577.291 635.668 577.291 cv
635.803 577.291 635.906 577.305 636.027 577.321 cv
636.027 578.559 li
635.893 578.53 635.758 578.53 635.578 578.53 cv
634.652 578.53 633.992 579.215 633.814 580.201 cv
633.783 580.379 633.77 580.604 633.77 580.813 cv
633.77 584.663 li
632.453 584.663 li
632.453 579.694 li
cp
@
741.781 669.875 mo
746.104 669.155 749.07 667.675 749.07 665.967 cv
749.07 663.552 743.14 661.594 735.824 661.594 cv
728.51 661.594 722.578 663.552 722.578 665.967 cv
722.578 667.664 725.501 669.133 729.771 669.858 cv
@
735.824 644.688 mo
735.824 658.873 li
@
738.418 653.5 mo
735.824 658.873 li
733.23 653.5 li
@
725.671 666.755 mo
730.43 669.989 li
724.723 670.725 li
@
745.977 666.755 mo
741.219 669.989 li
746.926 670.725 li
@
547.404 6.70215 mo
547.195 17.4717 li
536.426 17.2646 li
536.635 6.49512 li
547.404 6.70215 li
cp
1 0 0 rgb
@
648.868 57.5869 mo
658.142 52.0811 li
663.657 61.3369 li
654.383 66.8438 li
648.868 57.5869 li
cp
@
439.438 82.1396 mo
450.207 82.3486 li
449.99 92.9248 li
439.221 92.7207 li
439.438 82.1396 li
cp
@
513.727 63.8462 mo
578.242 64.4741 li
581.527 64.5708 584.113 67.313 584.018 70.6001 cv
583.924 73.8843 581.179 76.4731 577.893 76.3765 cv
513.379 75.7456 li
510.094 75.6509 507.506 72.9126 507.602 69.6255 cv
507.697 66.3345 510.441 63.7485 513.727 63.8462 cv
cp
@
620.484 77.7832 mo
621.686 79.8018 624.293 80.4648 626.312 79.2646 cv
628.334 78.0635 629 75.4551 627.795 73.4375 cv
626.594 71.417 623.984 70.7539 621.965 71.9561 cv
619.943 73.1553 619.283 75.7646 620.484 77.7832 cv
cp
@
482.832 88.751 mo
482.869 86.4033 480.992 84.4736 478.643 84.4385 cv
476.297 84.4033 474.363 86.2764 474.328 88.624 cv
474.297 90.9736 476.17 92.9053 478.515 92.9424 cv
480.867 92.9746 482.797 91.0996 482.832 88.751 cv
cp
@
507.307 55.0005 mo
507.774 55.3013 508.446 55.5293 509.166 55.5293 cv
510.233 55.5293 510.856 54.9653 510.856 54.1489 cv
510.856 53.4072 510.424 52.9619 509.334 52.5557 cv
508.015 52.0752 507.199 51.3794 507.199 50.2524 cv
507.199 48.9932 508.242 48.0576 509.813 48.0576 cv
510.629 48.0576 511.24 48.25 511.588 48.4536 cv
511.301 49.3057 li
511.049 49.1489 510.508 48.9219 509.777 48.9219 cv
508.674 48.9219 508.254 49.5811 508.254 50.1313 cv
508.254 50.8872 508.746 51.2588 509.861 51.6924 cv
511.229 52.2192 511.912 52.8779 511.912 54.0649 cv
511.912 55.313 511.001 56.4048 509.094 56.4048 cv
508.314 56.4048 507.463 56.1646 507.031 55.8779 cv
507.307 55.0005 li
cp
0 0 1 rgb
@
514.398 55.458 mo
514.662 55.4932 515.046 55.5044 515.453 55.5044 cv
517.697 55.5044 518.896 54.2588 518.896 52.0752 cv
518.908 50.1685 517.829 48.9565 515.621 48.9565 cv
515.082 48.9565 514.674 49.0059 514.398 49.0649 cv
514.398 55.458 li
cp
513.354 48.3096 mo
513.99 48.2017 514.746 48.1299 515.573 48.1299 cv
517.073 48.1299 518.141 48.4893 518.848 49.1372 cv
519.58 49.7954 520 50.7314 520 52.04 cv
520 53.3584 519.58 54.438 518.837 55.1802 cv
518.069 55.9355 516.82 56.3438 515.25 56.3438 cv
514.494 56.3438 513.883 56.3096 513.354 56.2485 cv
513.354 48.3096 li
cp
@
527.994 56.0684 mo
527.717 56.1997 527.106 56.4048 526.327 56.4048 cv
524.576 56.4048 523.437 55.2173 523.437 53.4424 cv
523.437 51.6548 524.66 50.3481 526.555 50.3481 cv
527.179 50.3481 527.73 50.5044 528.018 50.6592 cv
527.778 51.4634 li
527.526 51.3306 527.131 51.188 526.555 51.188 cv
525.223 51.188 524.504 52.1821 524.504 53.3813 cv
524.504 54.7256 525.367 55.5532 526.518 55.5532 cv
527.118 55.5532 527.515 55.4092 527.814 55.2773 cv
527.994 56.0684 li
cp
@
532.292 53.3105 mo
531.141 53.2856 529.833 53.4912 529.833 54.6177 cv
529.833 55.313 530.289 55.626 530.816 55.626 cv
531.584 55.626 532.075 55.1445 532.243 54.6523 cv
532.279 54.5337 532.292 54.4131 532.292 54.3169 cv
532.292 53.3105 li
cp
533.311 54.8813 mo
533.311 55.3853 533.335 55.8779 533.395 56.2725 cv
532.447 56.2725 li
532.363 55.542 li
532.327 55.542 li
532.004 55.9971 531.38 56.4048 530.553 56.4048 cv
529.377 56.4048 528.777 55.5771 528.777 54.7363 cv
528.777 53.3345 530.024 52.5669 532.268 52.5786 cv
532.268 52.46 li
532.268 51.9912 532.136 51.1157 530.948 51.127 cv
530.396 51.127 529.833 51.2837 529.424 51.5596 cv
529.186 50.8521 li
529.665 50.5513 530.373 50.3481 531.104 50.3481 cv
532.879 50.3481 533.311 51.5596 533.311 52.71 cv
533.311 54.8813 li
cp
@
535.018 52.2773 mo
535.018 51.5947 535.006 51.0088 534.97 50.4673 cv
535.893 50.4673 li
535.941 51.6196 li
535.978 51.6196 li
536.241 50.8408 536.889 50.3481 537.597 50.3481 cv
537.704 50.3481 537.788 50.3604 537.885 50.3721 cv
537.885 51.3677 li
537.776 51.3428 537.668 51.3428 537.524 51.3428 cv
536.781 51.3428 536.253 51.8945 536.109 52.6855 cv
536.085 52.8306 536.073 53.0107 536.073 53.1787 cv
536.073 56.2725 li
535.018 56.2725 li
535.018 52.2773 li
cp
@
542.781 52.8306 mo
542.781 52.6978 542.768 52.5176 542.732 52.3872 cv
542.577 51.7266 542.001 51.1748 541.21 51.1748 cv
540.118 51.1748 539.47 52.1353 539.47 53.4072 cv
539.47 54.5811 540.059 55.5532 541.186 55.5532 cv
541.893 55.5532 542.541 55.0732 542.732 54.2939 cv
542.768 54.1489 542.781 54.0068 542.781 53.8389 cv
542.781 52.8306 li
cp
543.824 47.7573 mo
543.824 54.7744 li
543.824 55.29 543.848 55.8779 543.872 56.2725 cv
542.937 56.2725 li
542.889 55.2642 li
542.853 55.2642 li
542.541 55.9131 541.846 56.4048 540.897 56.4048 cv
539.494 56.4048 538.402 55.2173 538.402 53.4536 cv
538.391 51.5244 539.603 50.3481 541.006 50.3481 cv
541.905 50.3481 542.493 50.7676 542.756 51.2236 cv
542.781 51.2236 li
542.781 47.7573 li
543.824 47.7573 li
cp
@
677.924 73.957 mo
677.415 73.0244 li
675.167 68.9199 666.965 51.8174 664.605 47.7764 cv
657.852 36.2061 li
654.771 30.9326 li
644.234 13.3838 632.523 .446289 609.193 .00683594 cv
476.021 .00683594 li
454.107 -.415039 434.736 18.3486 434.314 40.2646 cv
433.746 48.6396 li
436.363 166.284 li
436.092 175.634 443.258 181.265 452.279 178.8 cv
456.895 176.839 li
478.578 168.021 li
462.641 143.068 li
477.14 134.179 li
492.26 157.797 li
504.66 124.704 li
506.615 119.618 li
508.48 115.33 513.834 111.866 518.512 111.923 cv
593.797 112.822 li
603.148 112.749 617.615 109.179 626.035 105.101 cv
631.266 102.784 li
674.16 84.7256 li
678.476 82.9063 680.172 78.0625 677.924 73.957 cv
cp
1 0 0 rgb
@
697.888 209.096 mo
698.098 198.327 li
708.885 198.534 li
708.676 209.303 li
697.888 209.096 li
cp
@
596.341 158.211 mo
587.083 163.717 li
581.577 154.461 li
590.835 148.955 li
596.341 158.211 li
cp
@
806.041 133.659 mo
795.253 133.45 li
795.47 122.874 li
806.258 123.078 li
806.041 133.659 li
cp
@
624.685 138.015 mo
623.484 135.997 620.875 135.333 618.858 136.534 cv
616.839 137.735 616.175 140.343 617.378 142.361 cv
618.577 144.381 621.186 145.044 623.205 143.842 cv
625.226 142.643 625.885 140.034 624.685 138.015 cv
cp
@
762.571 127.047 mo
762.534 129.395 764.414 131.325 766.768 131.36 cv
769.117 131.395 771.055 129.522 771.09 127.174 cv
771.121 124.825 769.245 122.893 766.896 122.856 cv
764.539 122.824 762.606 124.699 762.571 127.047 cv
cp
@
567.335 141.841 mo
567.843 142.774 li
570.087 146.878 578.274 163.981 580.63 168.022 cv
587.372 179.592 li
590.448 184.866 li
600.966 202.415 612.657 215.352 635.992 215.792 cv
769.394 215.792 li
791.346 216.213 810.75 197.45 811.173 175.534 cv
811.742 167.159 li
809.12 49.5142 li
809.393 40.1646 802.214 34.5337 793.177 36.9985 cv
788.554 38.9595 li
766.832 47.7778 li
783.082 72.73 li
768.557 81.6196 li
753.127 58.001 li
740.705 91.0942 li
738.747 96.1802 li
736.879 100.468 731.516 103.932 726.83 103.875 cv
651.416 102.976 li
642.047 103.049 627.555 106.62 619.135 110.698 cv
613.913 113.014 li
571.093 131.073 li
566.784 132.892 565.091 137.736 567.335 141.841 cv
cp
@
715.858 304.714 mo
805.731 304.714 li
@
715.858 295.765 mo
805.731 295.765 li
@
715.858 286.412 mo
805.731 286.412 li
@
290.188 304.778 mo
380.061 304.778 li
@
290.188 295.829 mo
380.061 295.829 li
@
290.188 286.475 mo
380.061 286.475 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Martijn) ()%%Title: (contrNewTest4.eps)%%CreationDate: 7/4/12 9:42 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6CMt35[4_@bp`JXVJ-7i@\o->(p59_0LLa.<kh*,0C`dJ0#W+EE\AO477G1OerE7IX<*'SZECR3Xo14taWN!&dWc`fkT0:rB%G^o_XjS\2sMgp15F2",t1b1<*ZKnrj4o=+ah_3h<=4n(d"KJr%6M+5;DPn,&=mjG@Mn.2EHPa`kcPG\Fhd'P.0AaC3?^tG-^ADY'%s)<'Dqr[*TqW;JbIhnr[(Ve7=:QLP9Z1Vqr0BqT7am%gCipuI"C?E+p%Y`3CgjOZmqWb9Qc[K&&IPhN3JE$']S,D#&C5\P"mo'(M%oAe<oY86"mUPi3'3MWe8iJZY@s8HJIF[bnpOZ49?pOD%:a7n,cj1g*=YO<8lT=heI4M!Sa3</G3C4DQdDpOFrs7&ja3ENfZ'MG%Z%kdGOb]i=l;EVB+uk\@q,PmT+j/7QG9*gT!)I@@GmC[p/.Lh5_I]bj\8Pp'!rMR0#BW$Gu#@U.X+0.2Zb^S:B`4upBhGkX\YjL^Uc%=j<M\Wu!/`U?-ALG+JOahgGJ'FE.,co91\-Ln29pH1[Sa=,U!/io^hIO+)Ojlf,qaV8<a5QTm.+Ld!Fdhd`Y"+pu]#BY+b84tNr$%?97lTmGe&!Mnek>TBC)mE_";BX5[_D#>Z;qj#:j?#,8D.]63h^[#LBuNcd&&;Eju<G5'b7PFkXr^XDW]0E6EFnnQs"T>Pj=@mA0(%Y<8BCh#&\r:W?+%E-8QJf2Wu7S:<?'8K79G$gI#52ajA&7jhD')ESEAD:l1#,,OnEUT5Uh%Oq5,s'GVE[eo"jAD,A&&Fb2,j8W$H%s*S^\+lHu=pbi8&)hNHaE.FkJWP1m)^;m.c8$0KqXhI"ZYVo-?SPi:^clYAU$>PiX>5/R,UXjgQ>4XbGSBp`MI#^5m#Pe#NT^VFC%_#_87307c``%kX:O7XjXi^s#2KWSn^+13dMr/Y$KPKd(@_i4(Ll<m*V+7lq+OCp9qr/XX@&cP9nZ;/h'Aq^1=Du<!Pk(Gp025PfP%_S#A&l5Ue:bk;8dQSk(/PZ>U#ntaK77PA8<Yt=C$\a>O0O?][tq;Hh1,WdE\QLAA)n.W2`5MKUL'mUSd_uKLbfua6RIi17=n3:Yr%Ie[8n;5cn6<Vf4H7KXL<d?![_N)*Ip[:J*0?"E(QHAl+K-2gHZ[U2qMrh'a5B9\8+iG"^fI#IgZJ(,,-`r'@AjB;DA3geaS1S\bJ%40inTK2B&)YgJ>*)b)HE,.(b@_Y-s[>t-3B0)`r(@H=jA2E)L8C0C#R\i_Y'b9%V4S4oVgflL:8C#OUB#lTd]?(T_qAuBc6=gh'M%m0e%Uh2h2`VahZ2P<SE?Xn&t4(m1pGSfUtN`bOPAI\g=qd^bD<i2:N_Vgl@GDoSF?#GMWV`h2g7lWHhX1B*M&_]YSlTCO@Bq4+ea%Sb:=SNdNY^PWudlnp1-^J$ts9m7GFp;uZ.PbNJDnr9<JgiTJiTr%IpsTC%j?V"sgGO6L&U9D!5MmETncp3b3$chVcT/%UAj3imXp%#Pr9JAI!Qdc[>ZC[jZ=p;QniYhe@rA9Teo,?N'R_^30&$JsOJ+m'H?OG&R4P56oE/rLRd-rf-auRbI)u30r^]*?IdWqG,`M[VB&[%OFEM\TI1W!Jc=HjkkBZ.mZ`9o`rBOs>8;$3knCu0jA$k542=X;R\&"MH+h4q-N3=ri._?1<V2$p'^D,kc&_S-r$7lo<LZ04p,U`.%oj=O/N:B0bHrk&'fZ<)Ns1>j0dso$fnt#IEdC'PMkFK2u"*b)dfGs2u=c_V+)b,K\UYgt&2ec^ugoQ6i_5O30F)>eU5HO&9I*shI%gYo&A"a;<ZrTP%9="Vs"&+-s`d,oo(LoGZt3MHCB*Kq50:s\oAm<^UPCX6.5U&Efm/b^:PfqoMMmDc'rR2qS2b<><Q-WnDmC.l-u%1<9*9:\hgd]1P"TI5#<f[hCRKCY#]Wh,nTsfi$#GVR'Q?/m6M)gQjuC[-%Ogpt_h8-dJ`37JfK;(e.9U:ts5jo"Y$CqrCJLYuq\!%flBD,B1YV<HeY'f>%_Y-#\S1p)m!AmeJ^XFbkM<^LP*1T@m;pAeOH]U5F#-EeDAEfmBuUk.caM@>M>U+Q-\:Sr.]XHB:)S`T,PL:%Q?Jo]"85kXnhNqba&XOb`La(cj/;dc8'<_)mJ3&PO6;+:L[KmWL"]o2"RhZ!q1ICF)F%;<d5AGbp7s=Cq,i!CAZIm7jml/FVkmAQ%MJXqPk>8\nYE"X`qtfr,-RX&V'lQhdCDccPko?eB9PR89TB\[h8e*1hY'b:qZfRfKHaIPJDB;L;FQ9MAa4b<07o*g!rO'5/Y*M7+%l?FNYBQe318`uW5mrhF(V/1R0N+[S"T2M1u4-9`M?0O6G8`)QYSkF$GrYhf%dP.B1TMfar5&CMic.i(Og(qD7B5667<(XI:R)]dE%7inXJ,)c;YHrFTfX6mIRQBsLU_Pf>Fn]?D56^RWg2%5[e]47H]"32.[$pI%B)gdk=H'a6UmJ@3&`j^9.7kWLKf3%2"[bL"OT!ic[%H^?Hkn"U<NkB?.dehmdrPL^\4nrn1pH'CA?*L_K&phq%d8?&6Hj^V96X7hZ'F</:P##4LLci*\1WdUmJQ&30F60UZmY-A+-U&EZq%]]l>cZ1aZ&<;5pkjQTJ4ZJ<;lqu,)%rN/sq]*EZ%g-%1HI&K,M@uXK;g4%f0Cqj3RI/Ttkg5Y.hf]ROflR*oapKns:c/7AI]oC&)%dCLF_eMcklE:ZktmkE.+HD0j?>97LTFom%UY+"pHL)9/gD:.Ieb\l+=H(tBsgq?tMs,T=Fq`L,a=iXuXJ@TWSVMAqE-5&^p9(oCO%/PFFY/3X#qr`'<6*&2k^1m?Wn8%s7jVKH%"Yo+p)>Y?<TWV2=H<dege)Yo@;T%_k=jX!5FW(I#e\XiELK52u__tOC98)Dk&/nk;Y%j[srM^[B`P5P@g\gWm@<1)^%86C[/@c&]W1=<"Q?CA[`IY;,_m\sCC2ehX(.Y;+=h9-O2#&qllQpo.s9ec)R3:N_f!8+\-FV:sr]%F]RB-s/$F]`jmo1=0A1_<b(/I?Vf9hr'a4n2sZbC]=+#\n[E\VQbS`0_\1C`L5%q!7A0K\[9?kE5+?[#[Z6VWl+1[oK?XBFCjULB%L\o`MhaRZOa\@rnj$,cIO`19QBUTUf4:`Zr27u]O0&qsakAaBa2"f&aRus:Rc!@a;gn9%7g$:A<U8_Mo]7.NCL`>cddYJD\>.mc\%;9M?DrIc`Yq+[Ikb>6GaMek8rS,V)bU1pc6qkHqG;J>_8R"#$[,?T8<B7<R%nn'W;lWP"o(=f28?;n%1`IC7es-1d51Z@LUfI`_5%@F`*XcZ*M+Y4It0I[[@MRBM%-2iZ=%d?\RMhe3O&gEM,blFW=s9C8Qf-R\cd=E<fd-b`g$f5p?DnN9M3P-me652Bs7.ucf:#LQ?.%Vph8+qsr3\?sgHQ;cEM&eK#u$%n?AEdm*0qA,iG&o_#bBlKOU!hR70kZfAOLU!#LK]V3DHCuCBS1^Vr"@4ToDDtSKOgK<ijIr$q[%PIu'.9fno,HL9-5-uWh,hG6_UWP!lX2N``R\@DIShin\7Qe8shp>m5B?e._!kJ6NroIhBN+q=jo=W7U9+!=F)lY"^NX*1+4&'s;5%i)7G\plj0X7d^/WPo]'JY/MqI`f-$NI;':CG05B]/NEQtEt64cXK;S,hq(s%<pF%GY?Bp39P:iS)>iX4b*`anRFSq^mFC2S<I/<,%R;0rZ6CXNL^brjS[9B0PZ2M+IQ>Y2BCP8r^?]&h@ZPLM,C;4U0=F%INo!g0WjDj$VCV;XSV/ZtY+*J<WSZY^.HZ!T!omWH4-fZ;G%:Q.NY1Y/_t3/bo)-#,aCoo'>=5&o'NlWW5re<)DFlshj15<D;_MWSp-S?C+-T+deNjl`8)S]tU>V"+%Pc;N7:-ZH#:0kSWD5KTb%%1IEfU*@tjX>al$Tm"FP@bN73J+8M,MS]&:r+6;7*a6"gnQc@e0eB!'oLSjM#`!2,Z:8E`crNAd+j\%O*^X].<D6eChdp2U8bc@PS%WGQnC<ft5CBVNSoAY*))kS$"uVtbPD?7Y8(mF1H?I!c&ir-Y>IDZ9)#e)QIL(>Zq#h,ncF`hjND;=:R[Pus1k\+W#aZY$/;'GjsP%H-Md^C11j;f(4-*':l==7ua?Fe,6QnAa@!.CNU`N:$l;GIt+8JO^Ha%9il0PDoMMD)RZd9m51iQmKf,,*\379cN3%!2c0?@,=GJV%`YcPk*,8iXe;mMkNLl+JdCcT8p&$Ddg3h\qpiLn"4B6IoWpbnZF3O4QGb%;71Cp8Y2H6;=X#ng)XJI:^n9X@KC&O4WYICU[2@F?C%n&cM>+0Y]94(IU0Zi0JsJ3q@ro8>E?f\RK:lFY5tdu0j[]D=U=o3u_4riKSCq")\D?;U$QF+CL'rlX-ZQf"@JVm$)IH1Cn$?d<"c%D#If*e\t=BfajE7a8J-tp8@pn*+/Yap'3/dIs^_bjD(rJFRo-dT5<`Lo]U<MP:u0/rb+N7IsQ&'qVq'^HsB;<c[T)f?G(-DXX-L#%Y@df[FSYY(VS>2U3^:3GEHuEsnDkD^k(qT%CjR^;U!]X92m_>h`VHQY[8$HVD,8;lDstY":ir&1h95Q]hTUGY\2^V8:;<g2CGD0M%rkms[4+?,cgN-MjlTJs9jdpWJY9$q%<;Y]=d$G9Rp%d#"l,h8<7rR:T*8f8^%H#d/jL]O?lbhCO(T/YLc:3+p9"mBu]K/&:?+ft%%mV6b8WRe9lY><GN&KrpY)+T$np(e5*fo%dZD\q3keXHZDq4]d7?4paa=l8i6TAYQG[X6kYrTDA!=!tq'^ES\\oSV;\`U#hH?jKt0%T4d!(cZWZ4rRY)Zc+$OCWF+_)S3;50HeCM:qnt/Yf@.K`QF`LM3^!@Mle0J-I!YPC>5`X8jCe-hT;=_qpZeX.inh?)LF;6mk0Hpl%/&#7DY5/+,V1:8Oq(?co9D#^^L+[\(rpFm?h7VM.%NH%#h?=^$EkNDsG/`jY>rS[rHZ%^]ps(rCI,+;7pO;VNn+^0QpNqAH*sA$3%#U+p:qCmRB9%YHS^)-L\60t>(+i]mY+,?6D:>Cj#\/4o"!KG*;V3#.YWD>l2Bd`;F]sQ[@^$C(gqUh]pk]:,-SUS&?pNujfIk]4P%"ul<#$ung*&(o]7L7MasQk+OJ_u=V:]Bli$^EHOB3TWF83Ti_YGOfXCkInO#&+Tb'Jh&[G&kX_)J*G.,8u7cCZ:f]1A\M1<b!,be%-jMi@A34[ak.VMm0?n'`L:fm+gS+%ZW,6c"kV!&8pb,U84o2e:Ih-]4G.Xk^>5)=#Im*f@r&=3(`.*.547M.OInTaP;u[2(E-JI7%p[mpgr]Q@X>Q=^o$:5.D#7s:6JhWA?W?eb#m5%n(KX"2h]3>_]J3#gV6cgS15TjB)A0d>/.@G!@rs;;;Gd<K)<as`VEtD#+@$2Ca%V?bdj1#3,s..&_]9PMPG8*PfM`sBa@!<jbl,,),nL4kFR3kC02L.Y0oks?hV#YI['X4!5JkXm7=Ub/8mTs'd!FrEEj^KWekV8%B+%^T3R8Y*-YNjUWquR.,p6L.Sb*!&F=/+UAt@5R>bUh*;68#%#DZ8dHPlOV!0SN"BkM"X=4]-,rW;*"F=V+T*L%0hWB$g=m7Yre)D!%-&Rg9H6nIu;=&."WYel5=39G_@AJW?7M9D@AZMMj.E*^[9M+2%qK%E$]&p3J^Hqn>.dTFI'CN;O"*7\4H:6'$dm2"4B0sNZ@3K$?%Y6__QXg#!,%Km/["kPeCNYRCA1MmiIo7.*&YWs^,LO2F=N[QOmbnZt[IA3u3PVqO-7?k/ToFm$e#(ZZq5)nCI`qQj$]6&uBM#R\=%IKL2.0)5CXS,7IVg)c'bm#WW_chHT!`5g\?fS`sU2?mVkKc%VnhAdC']n?9$hs]%@pIX3s.?N5rJ$=,N-\8Ni'UXaFqh&u%&&Nl^%E!P4u_>aH5hYs#Jb77B`-:Z\;_iYl-qej1'4.p3[W;0`aVX3CrlEdC[,7VK<5e?d-I%Q-NVr@$i0Ja0HT-kP#TY\6c8"saj-8VPK%mEid,9s:Hd7[g?T$$TT!5PJmcF'=2:>)>qKhU<X(F>,ftP`?7!4rp@XSZ!Q4[nNjSdi(\Z8P^_=UQ`5aB66m]Fb`_/hP/QgC!@m)%]VkAWd95A)1I%eD^I,VrBlA=OTh,(ABt$._)Z-m_F5"ALg;Qa4g!bsNg/h(^gMNbhi^%puh7L&YKslFQ!_>]`JbYO(>s'5n[RUJ+%94UqV=9]t;7(b.6n8kiB#K-c>i&[U]?:*Km*n_4373X`fUt>DE,/QJe`Ea\06A.?1T1q_NJV_kPc5dHDhBNZi,uQ?`dK>VT+qbDS%lH[dsU5br^5c[W"JX1s!7o'AD\u+M?)\Y-*YT\]0.;VO`R1pRGHq5M&ae%m6-$/!OE0goL\a!EAoqnj\NUkD?G"n1Ur>R)oq](gt%Hi!-nZo,sl9=XAK8\Qq$2^\@?,i>!M)j>YZP&F%bNCgi]^,L5fL(lPAYT\^MgE_RH]j(+'526,gS)c6Z**p:D]AR=O5Pb,&EQ-$+%2\o=6iA5Nh2V.fGRbq6=)f'n4c#9]ZNA\JUju:lh7W71OE#V^-OMZ_d52Vfq2e.^#S$qo"b\Y#m"kggg@32k*]!8hpo/Uu@$/7V"%h9WOcmJ0Q2n*=?nppF[bnIjUam/=C@QUdtB@,gKjZfnhr2jB_OgEcUlRHl%(_JG$-JCdQ0I'<S:ARsW``t/+<5Np`!Tu(/LEV@ZD%^](j7^#JT)^S`0s%A,Lhg@jkEbJ2Qc[*YC.]V.cYSTBSDnq-UmhiQH,#@H[oguta-6]V'PWPI?*D]\Kr3^<N3Lt_?DHbaFEqX"nd%8`DI/g!E[d^?G(M6`*SkZ-](+]V.cY]k4"nTe1R.\o+rtaeOn7C)IIo.'Wl"gbASuUCKOTh@D?7,h([WQI.dd[cp3*6GK)UnFPkG%bSQ`<5hkV\Fr/<F&)/^5*Tt9tff&NpYtfrd`dY#=dGeWsBf:FUY#k_]7Q>KU+4J*j[r_"7M\^sUq(0r<&?Fj:B]i8Fi5[OG;YmYa%%QVOG7kAPd4KW+!_JYi[E@_uI-m,^)A;1g_@U2L:NF+;.gsr)n_T&@2a#fUl>r#Kil0CH))<XuNX;6,NJ!YH9e1OIKL4CN8\m[Zh%N)9snrbgJ59s"KZ1W8!@rN(G++Y2jlm4#/2D.K:O#MS1kPne7>2P=6sL0WJ9T%LPfs$!+kU(=n_P'2ig(pB>B\UM.<Mg8?:c5H'd%o\3oPPZak@+TnZl`c*](B=sb\ap-k>OiYi%Yg;#4*iVU#EsQbt9a$7MXhEpg?=4e0(=f*o"%uRlX!G_AfAemgIOuZ2O#qa/s+B3D%pa]OrOYodtdl+J3Jtc*<"QAARYr*'/mNOh*K>U45-6]X![L8WsIKZa85!)PEki6h3b9$6s;XlORo'!`gEmBfjBXat$hsNV:kcc'^%,(>8IJj/5T*,A$a[)Yf`V$N55(E+\V0fS<&U0$'H0$,l`i70$s9*^bPgr64U,g(+\H_\];=Um:ZkTH6;artbQ0;!SE)c/:1J\Yi2%T^QQT#/$^pGZZ)p'[MlH_4M`NVmZQ@dFe`]dHAk@*K\q&Z)9?4Z\KFKkt)h_3Cqnb%ZoQponfP<o#@M4Lb*ES1__-$3fOGGU^9(R%52jT%6"Z>c4o.;Y*UOHbK",Mjq_U"!fS8fP)lU4Ok"CaH5K"HNe68Zicm,-H-qM)Y%SODIHZ#N)L-;;A9WFh/6H94fMoM%PWn9M!%m%R6HCq;7(/..e'T>Y5(3-g7)nM(H>DBS(&)^(.`jb`^%ORS[F2il(rX]_!R\nB`leY2TS.nSRYSslB/k_6?lT^M(.@DlP>Zj$]7%%b_n5;i(0E<EYVQA;_r95bCUT@$8DMh\Z,-_N@=s^(hbQ[X0><3XmAkj.O*Ypaka^CmYjm!7_NH5f,cE^BgMC/=;f/GS1Ee>bVC_%UC]2_+FW-UC\bJ:];11S*@r`+O<gNCBuL_M;O\r5BLd>?4QJnW7CiUZ"1JT:cr\H?'CeqsH"`nW@WKCB/Nde`&59Eh"etT\$^*PP%0M1Q9?qYi-r$-o*&>1B`&u75),\d97m/npmM*YH%3-Sst0g+q43j$e<d_5:UHmBsu;4t3]Uk@!U2M,NET.*MPd;-Ro9,aeH"^2mD%ok3n1'/B`D80pP\-o@k?.M9cKcs-ejb=*Br.Nlk64/nD][WBB\TcGdI(D)O8Jq6E,)`Ed-Ls>Zj%DXPV3Cm0:dRm!A&X^^sOaG:u%6)1.A*<[J@(n?FUdH@GUl,?@(Qn"6u^.n^BfJ1j!1_6m>!r+RTgK@a:Gs_^siNl6hOt)M:ZD.NMq-%1[<Jk[q79n5mg8l1hCjd=^%<0f:#cGe%C)mi&P\=9(k5a2Ws:T[WpU!5,abG6K+"q*fk3q0\d[OdLA8dC-t;rM"0BuasGEK0M[YqYR=%q?It,eUju[S]8)5Kk.U%$m^]r>8r.7P#Re%O*tWgdBQfANRc`bT$J5%%Ue_s=Z2<TAmr1p"1R5"7U]]%9a.,!2\$H.:MaBKD4]#Xpp:S>YnjXjZ!+m&b\FYG%1d094@Y_ETUZ"m^5m!Pa<9P)'D<e3Q]sApJ1Q+EB[*qCB7oiD.(?\@@F:]\a#Qt<&3iWA78mEcpI=p'o;!tQB,^H&MEaNqZe%eFD%oS#l)N$P9_!1mC;Q0;YhZQ%t0cYNi'+gSVPnL$Iq]r8Rb8h)Pg.*&\e&_fi4niRXf6>01$J2I2JM\_s`[Mhh&Zr.XFN\ncX[Dq8Y%W?/VmNM*]AKG?CS'9A@4$rq1+N5?7W2o4`@Zj"iC9le*!P1hBH\Pc5Ya(2*+cpR#r<d;>TgOP5Zg,<!1c?,OP8_1"rFT=4J(=5AG%m:>*`!ctod3-7dVd(/E+YS_1XVmiO?F\".D[C0Rl2GK@=@;sehc4c_?7qhM\i=,eYZ$AYFo4>FsJKrh1`J.e>\`kr^SlB&NnDHi%%J>XNJ?XT:QdfBj(1P]q_*D7pS_N!49-+sL.hEbnA-u+cj<f-.9B3H2&N7'O\5>+MDM4c8[Khb7obaO@7l(Af-2tjf9i#%@ef$RYO%b>\7H4H1oH/sAoLr=!Ee;W!?'$8U^74mlqd3]&:00^Wl,$`jKZDs3Tt:s4HX6Os>S&jIR+%*Oh+N.)Q$_]aFBT6jK2cjt5m@kh@6%X0K6tq1X[UYs8E'UsER.ne.%1;8hUj!s$k%P!2W0"^2W=`3Nes"h"lBCD\C%<$l[=[ZjNT@*_u,A.G87fGMR(LjV>r4Y,F+%QS4r%ZpQhdpE9EnXG[*cK:(<$+\a.i8_DRf.ScUm;h/5]MFDosoX(#c^bj>BQc+drF#JN$(UfYm]UB]Cfu)6r1jr.ISHt0D&B'F#g=2%M%Nmti40c5rcD'sO"kF;;"R;<\_@H&H;"UU)]Xi;6J<O@a8=#CKu/:+IS:C:]L`+RL)Yim/sfAJ]h(VeLnc_Mt]s"8JHPQ`K\e[l&8%d\7-][e4\Q2/=i3HLsY5_9]n\`Wdf'r\6'c;MFD166VDO2O\EP@]!sA3,AoRmIF`a@Z&ZRkBA%l8jn3'#+%biVkmq1-p`DqKt3:G%N>6Cd"q%.OYmuje*n2HrigWJ8IV1Kq*XY?1Z\"ee<[Abj>#S>0Z>m'-OT(MQEs8`,E7V6]:>3MJNO39(IrY[3Jd3>5M,dko3i+ZV%:cnVD'-4&#e89b`6<-!'iDL5Z,M?6G63>lCQ:qY@X_VK*X9:;_6"92.@57uSm's,%-_^P(#kDU=>HL;unk%ABmU^5IlNfI_e0gIG%R?XsC8"1UYh^BVNJR+s\+D$6j(M5U&WFNJCW<R8@CJ)s[>cqZFfh:[['1(S"Wn=D)q[&Fs\6(tRQ9mZdWjN<W=P/W&Y!hK6i)jr)%_I%"]`YKd9-TbE3*59d"f[JAt4:N;RMTWjI*`b-i=engFkjVES*'9o/>:!`KJJ#q_q<rhsQcH$9D4hG$YCj"e6OL340V<GnqG@Zo%]T)QT=p7bK:\m<J44^>N":5C#!<5eYW%LbS$26YP]S$.jh9?aZkWuhn[d<T=AkkU27Lq0R+R@:Q*AcJoE%uX/3@ghcD=CSO<Le2'%A@%rKot9RqI%BK0E!CJX-=dXniP6eUZ*"823H/;Np>JrJ3#hASZGu8tDULPp&DJ^!`#_Zi0>WO;XU1md3L"Q-"npqZOj;n!Ja,g>%g2R+Da:AsNN%Bf`JlH-KnlXGs5b&-MaP_/#Qt6D6!!@.[!O&AuH.uL+45p[d49^/cn`cb8^b6Eg,Lo>[T7oGe]dU1b0klS`>kDc[%/*Q;J&.=45=4/CsH@YnBbMYp2&s^IA='2$Q"%Qq8d4%%7WT66aPQ:"UG<+njYtq..R#%-n.3e&.CCTc?_;&,_QbGS;Nom4J_bu4.%QU>f#Y:s3+[.KHjO[.D"29hPQ(gXC&%uM1s"83`44&C*6laWSu3,(Zp\^>YPkCRj`7hWDWRBdoqXeY]7@/;tmfGp%,%a5jTAskM1%AnoA`^r&DI7:L>bT%GP3biJ(T^5ePlQrj.P\20Y)ZoW.\7V<F/Kmf9cL,n\6NqK#q=[@gO&8>6t7[G<XH7L56gL[\LXVL_L>oei\%,%Yj5EB^I`XT#T\OVM!>OG?bMeQHQAf;<,6#JQk5amAQ"^(2_f#T!nY[M7^Wi,LKfkpGB/e<K0U4]lhYV!7Y@oU#?[ZZ\\UH`4Uu%Mr5,IY\Sp>)?KRF5Ds\r"\(sDU0=TmUfW#P4L7([%V96Q9J[B\1G+9I81IPG=VG;fLkB^N%kNq,jOlr#"s5QCGWVm`eQ4[%W>3i3%`0X"GJBgaRaga.T;J1EU!f;P`=e^\&rN5Ft0"!r(VIT@-XTU.,Tb3,402LlV`R4sI1D:/Ui%s\'*nDG'+*d`T9;'TC3<E%K?n&o"%bje2j$\N]-5T8,RLL</,%&o%d_Lu)8XrTTnOMN)fY7&nO@c9Rf$muUmGnHbkoHu+2=W3fNjoWGOG2[^uTeiqG6>@m+-kE#.$>JGN%Ne?*Qf_UIGHhZ<g4EVKC*6;&$_$&42ES)D$F"MM+j`<(f*,YlK*f@'*/K5>S`K;Rr'g!&]qb537C7%#I@*"FeNZ88f7<S:U_e:0)%_-A1A]aV:b8m)0fk3t%E!%^>%&[d;5lhOY6/bQf1ak2VodSkl7R/"%%L1!>8C&FaI"2SILgpFq,4;N'i$aZ2k=0NAEa+ZF3iF%g[%@@f1"9q(RVm/t[c*Hh:%<p>H(LYNtb0Kq=27%-W#"Jq=I+_ASd7)o:n9pFuJlkNu[;59#APCb*Y![]R9N?j'-<ah2tQ\0Zt(4GDV%;"T>L8$ZcKVsi:pY[hj9P3Y>3oqpmWS5G*]1Y(ts7jAZS/d,5$8On;fb!BE/)t=pET"PZ/()B_gL+VOUTBjJiK<Z3N-"T6/IS%4D%fjbcW*J/so5ES`M<K6_ahN3C.6-\TLSG5>De<(__c:<rSUp?^3&E+NqnJ<u,M%<Ne*&.LB[N\5)*.+VU^ENhMe31<M0p6GHZT./;%n1c4?\p@XbnO2l*'aj.J@/@h7b+LX8'-cEZaT=F5#uJ$^7]<"sZBe#X`&UTj=QC<.6>pg'@75PmSE[jh#r6(sh*Wi>2D\>60jA,@%U)Q.:7^/AJXVGet>1-qocb/ENSgJb=GR_u<DubVBkD?FEJkqE.(>;:sHNsjPH?%(o\Me";Da@U??)X%@B@A.+Y\r()0np!\m@de6%A"JuY:'DF:nP?q4SIqiu[A83Ye[0o?66kE0m"C_1K.(@LWRQksFJk1opaOZDKbgQ;+?WD0`:b<<8$!##fAu`aE'fu:N.#J1<f,Ea%6A?b_!S0?:;XdZq6^)lt"!?<]p56=Jh4<mtJ3OD?5;7tF9W)P4>m"cIG<G,U6#gFi<g.U!c?*U@2rThUg]3_80WOuDo"^):2;j7]%e/)j]o+I/KmV3`)%M8r%&NPJf'_KH>1H!eKB1.1QLM0BAm\'!aD^4=2')f1N)Fm3L!c9t<]=m7RPnA_&:dQ73.W4=;6SJ8$DuaDV%g4NbLqA=l1+E3+/4Y`>N@lOQML<'$g^1M?L:',R>@h'-i8*gBl*c9?:@tNBcp.hD'X?4cZ_WX:eiusOr$,%'.DR!-j%iE8Ulu<Xl%1h92)7Z\A'B*UF:7Ebr[dqEaC*mR^1ep$%O&2lRqc"DR/h/SO;qb_jH9+p+b`?DG)&J$*b.Us]:kR"=kU[X]k1(5on%`2/0#ToYW%i1ZHX!oFiH08M*ph!O0m,<5fQ)X8Zp.qbNJ(DrG&3MYWR*b7qUapsFN!i,*-+=YY^_FW#J`n[l4"jW&7P./C,*$e9$K9.5l#/gna%5)X_H$B\$gnghDMZZ*(1=d_gq6rF5[kQCu!D8LuEPC2LI,M-A^H#]8r<f^bK"1-5QDKga@$7K!j6Wu)(-IE.mdQU/0O_'5W"SG&U%5j3;M_&X):L1k2LJs]5%j9ke93G.P>j?L6#c-l+D+uZFU=u4&o7q>:d_g[]+pd&:8-O3YNIilV.>N6&DK\!FBB.(a\c=G*""<j'>%3XW6<#YXI/ZT77X)1)B2IMt3Nk_7Y+DgkN2$XR.G'kk%.S+14VQrAX7L*3k=c?;F0SSQ79^RqCX(s<1d_\)&X.U\8hk"ea[9(0<N%Bi;^E,,Ah7LY6dlASO8KlIG'F1\LmInN"P<f^[R_:OdWuVd$pD'E=N_B6p'!SQ5Di@f$RM!A85JT076]F59<*5RK[PHnZJ>^'a<Z%Hpc;<''hLq:[PsZ_Q"M&g.QI_DZds"+qJQ=hdcloYXIn@6'cc6d=UGD8C3iKAhFp*U]/-:6o(=ZIAu(a/:M1*FkF%@Ni^+coFQo$%p'e,sKXT:+a]r9S644lVU,eQq*VN1,Cr@VJLTkN>F.@7APLbhV'o6K8]B/+\1FZhq+8Js)),flFe*&T79TeNTH@D_pm5LVph_Od/%+rjj$J;'V,'mh@<,[pO#DGl-O3mheIh>B^O(hmL(]pK*N'S;#Dj+g.pK.q0C%l#5NaanGYd`U4>TY:-4/4ta3&OHO:0f5L7FRsm+%O?e]A%%(BSMIi@;@n5g[VP#+*bgFM*L-eXfkB7kY4EDS#nI;i&m8)TS&[$]Jh[Plia,*5JdOZSQ5&E*fh:SQ]cX'-fG*^Ggf[n0P%&W?q>C%Rpbc29YIi`%%`@A!DOa:5^I`[5X^m[]XEl-*Q.3D)IcZ?-Wn`T^siTWi"^eU1CFg/3`r8._#*gLio1H<)p;dP38[HZ=kG%HDt]^bKhoK5u%Wu9-"ZZkPQMsZkW3nZF4p=:5-Y<oi\RE.j3*1%4!SLJd`4uitN\pM8ZY_>m'MpI<IRa3.eB_21?N)M*?f"?bjK>%%]a2PR\6XAV6-n_]qh8JdS$7*(F7[I>9:UF==Bj;9Jk=Gp6BpeKq'4lUCAhtbqV_C9[pj'kE->a.qo]ORFT["-CRBdXaajq;;5mt%B`Dg)%H&!-c>qPV)3C$+8K*D((JC[cVVp?p1`U,QB5O'U1J(l&%.,ph#QIkg0K[<?a3:/$[_1i`_DDk0lp=]k=M->T6T#k(Eosrf%_q)DWBqgot8HS-cH3m6q'NHf;YL+#E>1Q?\Cq:rm@?MAL+O0#"_%/k)f`XLuJAS=$@)&!R;$*'<qX#O)kcmKYrm6YSb;NQSS3NU`%Rj2f5-4I]:0VQ?<Ct=?AlDSFKaDSK,H<?/`h.I`9%VXULUhQL$?8DZ[-ojtrof>Xn"Y!Yn.+NY*=:2PMB9bdj_lcJK2@">t[k[:Q%ApH8SMe:omD(/%3.XU'7?Nrem^"Ln>(p/%Z29nhW:nj9bGM8.MWKm.8aLV*e\;u?Obg4@5q&GuY7?-ZB?35+olj!uoRS/BH<0)8<%]?IR*EdC/75Z]1g>X2i)$25BLJQO)%hA3C^AK6aea9%S:>ucV1%)XsD_GI+kL$U.J"f.D:6Pbb.dm=fmh&FE:I%AHB"_]mR*su-n%aXsT$+UaShW-0V"(+`b<0FPr;`*O<nThQ:ZbQ>KlL]RhE"piC/65Erg-$Kg(OOJ?n!n-C=a9"id65D*s&PX-T_%I@iZXETbL083=%&Il's2,f-u_jg]2[$V$RZ#ITH.82'sH;J;P;\'eRK9H&#K^k^;i-TK@J>RpbTH4g2b*.HUpmd$%5ma(Tlc+Q$@rDhaHFn>sOF5e(%'I_7jK2S'r_XsKD98qS^j%8e-2&jQ!Jj<%Hm/dXr+@MC1;@!9=%%kNN!0smkILH7]kHKpoBF"UP<ps!VXt]o9MMPSK%0@f8!JE05%!%^nb"K5E87TjH"Q"!<?7p\O$OuW+=/!e+r2df3:+Ym"JM.c:-X&tP+],%8G');*m7k'l0hF0gL$r+TA3PMb1'MX1dX.XGh6^%Xr%hReXlH1"e5k6`RC3WR`\$r4ZQOqCIK3cUi3S-4+(9c+);$-'tC?:eO:S<U9.`Hl.ZbpQ()I243U`$b@>W&q=Mr,MGjIr9Z[a3_(t%Ka7bW::hXB-=ferP:LSV,BDLM6ZO5)niP).B'Kb>/&?&j6#o<9'*c%AEJNk_0TUouWQkE+<U+S?$L=m'f-Is1r:F,#/;n_hgSW/,%iD+WkTb^hA'.Q(/IMV@)]NG_gK"j5&:@na)CZ/"gWNLq:Tn[aW@FfBFd0XI3e8Qe"J`*QkSQQ3^aR#8%BIE=?Ael0LKXeT/mED#u%=/2=jW$]nekYuN=[a@jg@j!?Sg'Ns9T`e*oq"8=`+DLj5i]1,0I#W@dl)BYe6Mnm=#!CQ]9?@7,6b4H!8\6YcGd<EJ".kVE_/u"R%a!S&ob?bB0h)X%HR.DJl3RdQIk8I$W!"T^*(cTR)==-`fArH^/CKXf7:.X1QF9J-IQjFoAHD/mD+bu^geeeOq]O5rV1+*)F99>@/%UUa-OTL&a%f'sa5/HR$;U%p:(N1kE>2b]>&<b=mI(urPE/''knk55o"NsHa71b0g"-7-e+BBEj!>8Y#<)%%F%?ssK#Sf"CC-Q%(h%koGGRQ.]7K!l$jiRTf5#fKTX:or4Q+i+n`)f2F&0du`rO8krRuIh0n-\m3G:%0Z:32X9H0OD\Wa>.6Bueo(GnfQS9mQ.]9ANTKtp%C\@-p(uims`"p=/70ZrY^j+'<e.+^@.rbW<LHDg]MiaZc'I@P34u\l$>,8BFD*^JTejfgh[p`rI*On;J1m'GWWad8h((:]+kkb^6%LVh*q:kcT8_iXRS_7dbZ%#fu#hW]*:*!O6n_n4\I%b9Lo3A38"ML0Qg]^GZSHfo%SDfP4H@HF1LiRu>Fqhfa@A/OjLKR7oFe36WH%mqAHAIDrmHf]AgDhDs:+b67O!r6#5ZVsni5=<E8)H\]ANpVSl@42cCnBaT3BP1G.P`TU#2p5Uu#5,ARCRc/'MY.448D(+hCoH[1i%BlNNlD9"WqhLQs1>:_>d::sU;6a\*m9Vaokn/_>0I`Nc)SJIP*Bh.7]F/\+2^``gA,u+P;%47-rP$AGp+aHUl00WG'4,_'$<pVmP%:i:ftKD^HQLbEbZ6)kbcp_BKf)MAXDE6Knams0TT9m2&PH`A9H1)7Poe+R>Sho!V2EbtdaILo9p;T6@[l-%Ld"mSO4!-pE*C]oDO%]6OejF%0.C&FNp?/n)&J2H*K]alXlB$HNE'0R?e$fq;ih4JDje,KHa=Ku>u-aOTuNH^l!H4GY%upAr?)r*aOX349S?MAf%qh([\%%JTRSfg]WKD#A7c/fa*[b=PT`.=8q!lUMH8_W3$AY=Bd^9%bl_IAN"dI@;.42_=8CtFUQ$gAI>&!asacr_5hPZOIH<UWPAf\E1*AH%?#?9aDLg,8<WUk,L4QD%QPP$ej019XVmW`kQS0\^&2Xg$@5YZY^"OZj(s\#bai0.N7as<kIKI2PGW(Hsin+8UjbWLFn/?.g\O`RV%Xoku;6=4`a:k8g]RL/=A_O21p"EhtVTc>TH)M.;4=3*73qodBjM!Mj#CCM"uc0@AFF[KCi@R(Qr-\uP=5^f%#Y(<)^"J%,iAjs@G%#.I'B5=FBag)Bt,:+e(OYVl&V,V1cRRP6M!^!\/s_Wq>=%::2u\#&snS8YSY+Wd1$f9>t@QEMZE#?c+2$"Hr'lUgTe1;XqJ49HfH%Liijc\Vh22%:!+&JsuhC&\7$,gN79q>(!_08E2Ab"Yk,,/]]]Wg1JrGX)30b-^1mU)G_]O\IW(*OYs)LJQ5p2ih6JP4t0LE1goHd%Ma2tqHT2*(Z&DtO@gi!MKK3h)+ee:KK1]nq/Y(Na@:_JjCLK8^0?0S#G@QGG%As3>e>9l'WPLC(^kN^u9qP^5_ZWPjpfrL6WCUb,%n.6m",W2KhaV>[.8IbDA1`o.aU\Q=;B8iVra9h=X"A)=!+a(IAW?L[;nBQoeAeP=HJHe^5q/VL#U"#TWe]!EA#/H#APYK".EcjrN%X>jt9VOl9G`DOMbLI9hUW',`R+]fY+"Mu\!$DU)5#m+9^MAdT\E&.Sn6cd/]0G$)UW7&5g"]9o#UXRf1)>IT?$oNtZ@,+rp2:@:i%+"E!`8NK:\<\&one$f-M1"8sjBee*kTt!buTZAK!i9F,IFoC*'W$,A*;dD--YdM+O'gk^]b\ad"l;2#=/V4m=N>BVIeB9B4gW*GW%r>ccu%>*:]Ylke-c/ra1'g[i/<CBMa"EeZmjpH\Y\[P#Uk8?RFe?.ZW"@3Jk_b6:;,H*cl_pVTh2'UL09d/#j+U?,(B*^@:+P0[#%27F1g"@DJe@Rq5"bpiLPWm6G\3(TV/Y9Bj<eg$Zs78S?HpWAkC!7rB.iY=aRM\)"T]o8W(+iPU?&_*KjV9BM#JMSB?78SUO,uHnp%*'k$m(0$b=5Rfpohj:+k'`\=A^fXF3$,K.s!ie7CMTZ8B0Hapt*p9K8ihq.F(N7^MCtP"N_:&ZE,>)e1C#kiEB#k`L%>g_<DBFnG%Z`>YRMO[/_,qDI=JC>oV>cQe\HRC8l!f=A-1oTZ',VWsjOHJ=bMOB4RN\?Z4+Oa;Fjc0D>l!luIPiAO+(O?"Vj=A(]:h3e;1pOe$%[F)e<QnYS)MNpr5hKEO.B`K0DQn=j'QOkVQYp-$,-OWSA"\L.up=NH:1_:/`XAYF-&#,5)%407j^7D;IBgdf(?QmiW`p>Qt&CP[%%3ehZ'5e>Rc+9P1/%/oo6Ho)I&OMGGskQI6]08>Jk@NjiR%31p`,(>-':7NpW.l9:1j^.@N@Z-?l'6&0&^utoRV_8]gF=`#!0N^/U%VWm:QM*\3pPmJj"l!5<aM8m=khQ</YTO\TRD'@:t(@?q;$kXNIrY5H%K=&1Y&J*,bMF5?M1EZ'P9iR0I_f:9_#"+)*VI4))>,f#h%KoQE[&(coiBrDl$$A:nJ)!%jYT[CBpI>'sc:Hd:776s:bKro)4B`:aA86?oFPO$*!5bK8)3_AM<#\Y_Ek]0(?5tMgF*!V7+[I@fW%afqnL%#bD9&o5BK[ufZSVRU2Q_gp"_:Q'\1Yuk-L^UCC0+0uY*(_7*GK7(*_"$XU'&H"3`RQ8(rq^LkLpp,HV@9U`tl2YZMm+HF]%;jot6Ob2a"nB*5I2.D)Jl`!<9gMj6q:-gV\b>Y^G+s%-_C(\bo,/+\8A!);kXBqW-*4b#B>.p*@/@*buPg8dDOk%G`mnCd6K9jr;%OHEmRP-8h;NY(HGbD9T$+3_%p44@:9emu.H;gXUaX(^\Xq0]^Y8sF:($[--;(kZ`1m-GVLOt,*%-C5CZTgo'5=T[#=_9PkBA*5>o%3O#_>'<j8I.l35'l^X\WoaL+*Oe)uG<J,DUUdWZ/.af1UVO2Bm3ePL]rj54/!1S!H.aT&A:k@KF1Z5!q1&N9?3?XH:GacI=4VEko%&hCC1G^#e>"Qg[cn_"5.(#0@4^)`R_#q6]#`]:8<jXS7fYr#RgL2d]"U)B=_`r'7,-OE=_a?Lku-A;eHVXM'fAV;k`)6fMEi!dde%ckI2ON2+Af)[^KfQ4tjRN,FC0M>0OJDXKf&P&\fNe$'Hne/5W^Z`FC]%GHc3JL#&oc&`W1nQ'%=`9EH^bLf0"!UT=S7rZ`Bos1";%^m[V&.&EW++V8/S("Bm4#*,GA5=?[g=Q'J4$sf,O\.V1c<+_p\)kslUb]0!MRZY=9FZ2E=9]E..;j;ZF!AHEFB)8\%YuEDuhoU<b%Q<A6__Z\,@<(ud<75DalJkBHJAhs]2.!'D1+>b?b!r4i`J]pZ"KTaabR0Rtd"F/'KB%Ud9.iO@,+U!G065gOo%c-%mL)G:ALUK%n%Lc^f'LM.7CRDXEg!6e!Z!j:2Fb6b^qY"[cs(a[u$L0b)QLFQ]qjTL6`M:]Pd5k"@h:9_nQ]<DhU\dXS?.qAcML5Zs;FfiGj"B?;p%XLR?tA<h?R[Z!,<Ksdjj5kFgb.qfe7c^trYbS^qjT0S^9o/b"PiklW=!RDWm)<t9N.:3go*"Xgi@Ke:b^rCRL-seoVOpBLRPuEnd%i=2oZOAMa'FiOb@ec_>eatU!qj<eR%i5JeWZnf-;YV1`3:)[\K"tQSspBS*.AU'-'THH8N/p1XT(fE@D'R^juN0HU$<DQNp,D,qi%8g%?=9hJfT2!IS(+;AA#E3=a@#7\9a9Gq0c:/"@dHICulYb`dBf`;-*]*V.KaW$`YTJ0q8fu<F"^_\95P'PoYPhdJI\Y56rn)1OG%PW<ed_1`W$$o'&WE/#ed.5&fGlO6\rfH8M9#,R7a#94tC;MIQUkJ![T@<TUB9i0!*<k7.V6-@R2OORncAPO9sE<9&3N$&rGUl6Q)%#2gq$)+t.[7fuY<cM&8s!)00986h/!<T3F1EIQFTQ%iQppBf#["Be`@6Re5?E%+LXb4(aKhpg^\U@DR,HYcYO:)r`+V.N&SEs>Qq%;FUimK%G`Tk$*dBW[ME`U@3jD8f<HillrmMYQBu18jt0jIWc&rjrRG).;+YZ<KJt&j_uBM+D#)J\-c)V+?LYq6lDRdN^GZ8je*2h%6h'$b9uL$^7%#tq>mKj-igjj.ap><sXkOu@S5/HDKd]<J+oU^F6lA&pr)a=XL@`ko=L%%S*"5l,jCmH6]7gt%L_n#SWj#rAM[>]'%_29C%:oB!^1G0AQ%BMOoKecV00k@PUXFZ6;JchnB_ZX#Q4GM`7gph0-WTqE1$3M#qWIqf$W#4/A^+*t+;iFkr+4`c9Tk2$I@YeJY%kTIn[:^m::Wk^B]\C]KF)E;`oaec(r-LPjYU%]9q%)iUbf#q0)3:1Yc@fn$3Q]a#E<?s<2ItgjP`&LOF`+q?l<5bqUEQ!A:i\a:3%,DLWbqLPAsP?p>bN$8Hja<E;gMO<:[7-tqNR*E"p<>;\`i7oo?)#'L#Ze^4hTieTaX<:tsTgZ/e(ui=2h,H,I6',b3KG_]O'M!ce%K-Lj\9H_8U&QXSh6B"#7!$N%CN9n55PR3![1(iP(#VhL*HI6o,>\F<8A"#Z=Qfn,i_#)1QN%K_8n]bs++D*-*m[[et,d,^Lg=da,%@F][lMSRmL$1Ada(mlHo+S5tlQj%b"Kb,&.fS<EL`*"nH$ppIEpmEH?@d$Xuc-[ZOI)0J6g<[,tmM^`q99,Jm-4jWI/^-fq6Hmj@%&OK1/+seL?K+LB_F@%5f64?Bu)h/2<k$&">7:ul\L]h/JAIL;u&_7p@#]W\>MF!%iDsQ<o2[D.,b(IG5+\#^!PmN$ZWle0._]H!X%EPCFf4^[%Y-MV$Eh2@YFOt)0IFr4d3mX]u'Yll02^8%=9LCp]pMT,)&nD-LKFu+U"o32FT2>f.57U?^%.XnmnBf(ka/`cmSg%6hh%n7DMO5U]bj.4T_T=3,l44USs,VnF,T#/RV5!<]m!RkNJG9j!F_=.8Wt'_P'3^^$4"_nEcgL>eDC0SHL:5tG:4^!3iC1-C\`#Y+FV%Mm0@XA_Cfi'=9;AQQX@R7`u!r^[r6m.u@O027+o-%0`@@=>oD<nqNE`VnjZ\TsE$6M?",:;AQ]il9YZs_M/qiq5H>Vo7FD)=]jF2%lnGa\=HU7k$Be,R6_,P@=ele3Vi((i&ZB]4:;k4<=K,kN'8.pZi,(9#Cp+Xk)Enp?#AgeZGc\#AMiY6Q0mKLrNM.S6D-CnSXc6a6%D/B\"Bku0A,Ah9+(hmbq\4Bhn()CV"A#Mq&)ad'Jg9dMD>FUM,[)FajUb0kI,19_N/KiJHL5LaCQ_D5=X35Gg%;@H4#oM*<L(t)1%Vo>m%jtp=t6>AhQMhD5bK<8WS85B-ECLAt&($n4?VA0GpXCmn3#)1!iZK\Dd8B;oeWXTRRWQ,#rY=M2l=bfn+ON=&;I^fT8`$d[u%:OnNlQ6N]73(Vua3oU\c#78.'9]?fm$/<3&\`+ajP88M+AIDc=-08\T,Rdod[e4o"ITu5DAVgE#.-Gn6Rip_]/MP88Z@p$2ou]@>%bi%k<n4+E+&gm]DVI^Ge-S%5:!C="\j+k`n@%`;;2R%_MP[uqg0E<\!+HUgQ!B[.^!f=9U/AFIn/IKok+>!k.&4d1\(^/9=+>!`E%JfkDOZlk/j+>!lI66Iic@L,L4Jf"L9JflZEd=NKqJ$^&Ki?'WUdc)?##%I'lMh)`Ad:+4MpsEOn#(EorLk-X"#1A)F/I%s%7uN!:%oWcD%)W[[45ns-.@1Ydi=r=&h5$AfAOH1.]1#Sg\6!E&R5[n+p(&!H,PJ!WPq&:O,8?#mL4`^C?.21>YoMU\l.I%L/8pKb4oGIDt%^N^4ZLo_E468k4OSoHL!667;#H>t!`RF`TUlE1./Vhae\>Pmt`k5FmQqEj>jHDbhMDg!ek^O'JXr8DSWk=90C=2YaO\4(QKrVQ-:%XnVI3o#g*a?eET+COT"o2i/=`&9rVeO#WBM6c*E)*9sNBLJ,VEl_/9;D;h@tqY9k%9N=hfml@K*&'<!J!A>^R$jsooECk\Uk7^H-%.9h1:!:^7k&'.L_RKc#'AfgFA7i=lX'Z2+=ks:"Dm\]/?EoB7#XVT7)Y_Wo+)TR"p%J9S<_/)ICe=6m)#3?QM>5&,b!Ke8NF.9at%.!qr]0;sd;=56p3NZgE2SSL=@G&_Y:o;u_4K]%\39j;c2QG_qmF=3*87Z1Ah:.mCl\f[5=@BA4bR+B7#g=<<8B_S3\G'V!f>HbO8%[UgiIDaN6$)CD8.)oZm_N/B!9^G=IQ#qo]3aIM]BnY8q[O8t1#b=uaAiNsHRjFXi^:)j""n^tp$7K;.(l+aaa$Fk$"^dMli"Wj6U%W<Gf)'LqlRVW1)P@#"BN`Be*k(-A^BM>JSJm#]eF;r?5$X:N1GK2rJ5OU*@)(s);`63APL$&'joUok6`)_N'N3c-j#V3d=<CBSCJ%(tjFC(Wrm;J>=Tma`b)9(S39t!'466AK:dWR`[b\#4PN5d.QCgM3;[h86M&;EE@52_7IR'EgPbdYlDi)i*'HZF`f]"/;:GNg281l%9%udSYQ][5086V6F:>tHBH_8BP7_>3F):pI-f*[I[4ZgH["6%3-n]9Y*CF+9T\)T/UCC@lQD&0($D]E\/TgJ&aCO8-ZNc#jARqA,%:l@=7P`*B):t?!\8l_3g`F2g"`#*A8bmnbE*>bUnoQcJ:9,VVVeA>\4C?>\I^Cboa!X/r(Xm!(P\aXW\:1pJYL#sQg+M^l&5RL'0%\u`cj@/FK\GP6DV_t\V001oreb?C6R)5Jq(^nd'?Zr5Ne]!*5oi3W]7A7eDA/A*d/;%oZ>k/]2E@r'SLg&N-I4*FoTZ89R9`N-PZ%R&Njg8J_gogRr,*r;fuA,qI4a]t_$$`i>Xg9:E'p+q1d;\9g(M+gM%bKgDqbg-Dt>#'MWbDuhmXe7--d7Rdt_e0`7CZmCXH$5q_E%%D^DuG5GutdOt*:R!mV]8R\PKOBK"-!c0;1Y`n8GqCA*TgBQ)-&ZXqQaN6g%1l`LmCq`_(D'(f,#Z4-'cgLlK@P"fF=j/%[D/]<P%JHZoBOR#dM5--7uaMC/N*pei^V?+[p86nW[:oK=D$HYE^6Il77.r;@F^`[W8`BgOO\-J=ln%H!*!O!KOkLm#'UGM+Z/8B4q\g66*%d)\<7M-$/ci9QeI\ZuPS'Lk0p5]b7d9cZN\GL]dt+]O#F\@E=IBc(Yp];1-,ee:rM"q#rX'/fl59/*'-]4</-dA6114'ihE,&:b%%\qn_F.]6gS.#!((U?=W6XT?__P.J`_BDR>t)QUerf"uqW%p<(<5Z6"g75HtZA"\)'q@Xj#&i^D4!kj['B0fVm?0)^^c1Z=JIB]<c%G\!'9_0ll8BuVD-+M26ij4Vt_51iaZ)W(MAWZ2.>;<*?9U86)X"S+6[+gGQ>EhTXDA?`AIX5gMOZPiiY=GGO$##hei9,HsEHS;G=%Dj%3%9Gk,j%"h=+qmt?MDGa:A'4_)^+8P"E6kVdDSd]Kb%;=J;aQfU`20KihO@`=e]2jO:o=_?M!SG\k(3At?'T&>s>QFn3<@m=8%fjWB59K>AMc:HM3IMf(#4Xrun^di!l.S+\r#BB=XE%sa0jR],d6C0T'r(L.'4Q(IXLi$9d^!jQ/K^$X8lGpD)e&@,I.?EM2`%'AX%^^mi?WCi&3T$V;rZI?u^Up*fa_fq_T]8ZM#;M_&a,DElkWb2lp'G<W0\]-+f1f36WMfE-&3(-sheqTtSGM**9P(Kb9%XsFi;$p=7%o+CLN/67jtqqC1#d$hFbdtuY+6?^FC".^2'4Oh7)eHV8VNV=H.E?*c\BOk#^Lr"'KV6K^&l("ngmAA1*l/nZ,@-W=7<Yfc%VG8u^%P?96:U8f#K"iA7!KaI??TtT>_$Bl)sFE2e[2B^-C$GGbB<$H*%^Mh@23gt5/+NC/:AZ@Ag'7qZT^!6TYEEd>;H?gQGZ*j_8pIcZ:%80F\%%C*e.XXEm4XT;Ta/`o,5;&Du++<mp[20,IdnMJOhP6UMC!0]9f3M+e:6OokkI?9Ynlm)SLC<mF(4jS^K$Xj*0UThh8:b<WX%_%:>`S9m7n87OKQRZe5Ef0XoqK!&m%CDc0?ag`HP[4p8/8?1XB<PJ9-G0?s^ggB/iD1L.h'W-UbP8Tt"E7B104rY@c;_BbU?:W?M%SZl=lo:dp,gm76-:r$ODlqPM?^q^Jg3!Nk5/B=QJ*LJT9>Q_0`]f!Sk6"tNsX-"c,HC_tcC`,Tg^+2ZBW>^bY',#,"9!JDm@OkC8%;q43QK\TYsM/cNj>A&Ig?uHLQ8rb#r8p4l?*,!&f[&cq<)b@C?6$*<[hFK7uoa'78cF0TJ,!m?ad=JQY_:3QR\`.?+fc*lXOn!F)%`PG:T6a9ITjX-X?&YuY3a(A:A;2f0X4\\gD>10(nTr(<?f43P865o.\;=n+'WJ=[4GEmIH^"4S8dE:3La:4p,Zt!lQ?[0jdhqK"C%0#M[MZuChD[R1rP!2[a^^rK8R&FQaofgRJ4cQ*[^1f2CQ_?cg0:a%S@UJ[a'>Y/l&eDhCQJ^g)6aUQ>E:BG%4cBr4*p=O^Rj1Q>k%..3&iA1'JSOJSu)fs*o<1I>X.Zo1`SX<\#(E1sJUNXZ+?%)jW,(lYLCc7-4skb9rM\DNF"9-J)f.]g9?i8sM8+o<et*=?)Z*Ch`p%('^h-_4.M,#--t!nQ&^SO2ucBU8d-u!Ui^fV-[:p6DCD9?s5-9RE83`EXomCU"!aOh,'^k?<nRMU>Vgi@/C7M-7&O,4!ATAC'0D\%)nF1d(3>YGat'#b'ISl6b_m@&oI^7]g"%]ZJOW.4`>+.INH_U%.YT;j7k8Ne8-?BS/G;^=5ZX0>8]SOQ.9!9q+tleul?'ArP5r6p%74,"Q#S^TPH"U4Do,JOmFW%jbeJgG=r=J8p9M&e#l8ScFM;Hte39s\m9P6.PQ-o3'>6F/NAYL!1/bPW1[^<HUY[!k2@suEEaeiG@%+Hi#K,b7NX?4:Ou]=mIn`RcD$RR!gL:/;,iJ$8sP4!G-rU1G5KW\NEYcsh%'i$B"k=raU.8Kp^F!:Z:7`d2dZUTbYrd5b:_NRc[;%G!HTfZFu+B7kG^dNF9,F&mmt@!o$k6K<nsOcWr:"*h$*8,&t1jDWo01?)i6b`Kc\@V_!Oq)##jgG=%tV>6DtU$ctoIZ_1b.A*Daq%86kP^H6(,kaL)$q!22)ks)\BD>%P+eGQd[rNbkT6SVRsP2&1Cld`Bk4YZ-08<#YsSIEn>ir?05g$:CnX:%fQ\fp'O/IB3lWq_5)<%h<XcqKI_`rWa$`;:>!kZ1"B<_3JFg)!I^j`2"cgX#$b6,'\]T@=kU(d>R\dpY9(Au%(A+7[Q,c5Y,^TfSV!.:?.Jj\g">nE'd:-6%2LrM6@2=jV;_[$kRAVp85!+iXm%HcsY'M-FRT_f\h/Ts8lMJgUNnsjb7I,sI[3dF=fY]1qftrq>FV(iJQ^)BL5<]?KE7K9tAC+Gh%V5TWl':hu,4M0;IlRPTek"P-B1U/5q08?//X;;V]fB^@c$;T+U/iEII<+F0fZjk"4dS`')BkAL\hL$&ShaH4k+Au2Y82`)DoPbtO%`_&toXfGQH66P2[78Qbo5dGj5]Lefb+f[i_j(0p1;O9;1],nN=?n#!p0*kf\LJV6@P[YknEhTF,<gP+4^"u>^;&VtL;at<uL&=t=%Q!$Dc[n-)6`bLo8ja#d+D7dcN`p^PoVatala#Tl+a@2:#GcOs1WZ2[9M8J*d;UEc,P%s;JRhJ91eX'?]]<08OQGRMr@X?KoHbPnK%8_sofK"3A]P<q'q>J7!@G%n1(#N]V:^a:XTC'sZ;EbD5Q#/h?I?&dfHQ1)L,O-^OjV)i0W7\/Z>_.-i->252DKYA-:8S1s;6"YkW%@f(#_TEl`DR`2\:F+)nXX)%(.LpKsX4'A>P)Jgs?m!8G?c)PIE9B@M'7ZiJ/=]k,Dc8Tis[2B/1Tbb[^K#LIdP/4dOHP_:ACYjuG%G"i"88O-QOTr[hMWb\25]2K_F:t)3@J<6="P&<9XT-YN`gghds3.uI`\6rO4%g(82EB1Gj#CuYeHTQ@1iUVoL,@W;gJoTPjg'*h5%>6F/RFb8#+_Vh.C,]s;$HqTs^>h(,S-ph2s%+/hq]k191<^TRYG.Z6_;m6I">K&(Fg46bXSD;F<Ka_$]c4fL7VJ\>nQn3E9!N<[e%UcJV07.]pm4u["VnR;s;'Z8?-;Y@]&GK^t=N\2;fLK^dqb3#(#[aelP<9)#4SV7)600Zrt_4:DU%Oo!TCT("=)VVTDOG9(kG].R<%L/?,Zr]&ba@HptATH`"SWf\7@@52'2'O8#Q9r[\?2(%jf`KKVAFiIFD\QK*:\`!"$RS'3;k&?_m<AT%?VbjCO0c>-+QC[&*%j,.n%R]>=^P*&6g<%D$aL/Y2@LoGq_oF4"j<L(B.ZQrn3\TMc)kg0B$W99\A:N'_$@ulsUX=Fajo.-iCB!V`U>lV^\VLK*f@bEVKPsXqU%=M9QF@Ajc7=+_?'1fn:`Sif-mXIpGZ_]\]"l$d9GgCIS$-DI9p0%_.[!$`'a<>,FM8O>Ec*)F(J7X2>+7"O`M=T_$6IrssY_Mc[/%.46+=f"u6([]=$'OQ@eskmTRYLK\N3WWrQZY=X*LVr;2qNQX$M[8kD_E&A_SJ@O,me1`&'U+r%<B(jl%\3^+!I;M`_^YqL$N@9&G%XQrd.H(QplgN7;XYG'JQ7N]n9EK2,6=2Z&#8'K#*6$]6j0qp?9n``YO0SVqH2QbfcYfKZ%c)sq]D-DATX2\mNl7CDh=#Up&UFf.#%6,d=+bhl,&*Ven[h3"CgcE&a<3C7mmMHkNXCS5S#g^,^9kVUfuC$pCf,,2C+XC6E\7WDOB7;,J]+LG?!?WWfm\GE#)Vaqf<\W[?a%En,0+@,!A7>m1cA8b'^:\mbd*h'i/p'q3=]2;nqM>HNGnRYd#9ML"HsZS9r)nBT^\Y@U0Efek7K,pHluFLL?PR'iAK2_qcMptd?`%e4H8e7$B?;Atdc?oArne%?*\f;7inKXc03f@AV*c7LDWfQ"J6M8VO$7]:*Q)]qf\K->Vl^^V7*Zn[N+*Q52DR<GONr]I(+uGG`HT%ALKAZr+s$;+_sus?K&H'lNVF%4*;7rF`K?^cYK7ap>X(-"ea:'g<Jc=aN7WgfpQkl;0]a(cDB<4UbiX_USukPd-*R8hPAN2D%ioe%^#r.l3@X<YnH9GQG^H!m9q:"PA<2d5(4$8gTrV_%4KJ+t6*_#3bH'BN)_d_cN0K:E8o/_;)%QciajnJ:"rLR=9$gt@m754#-4"'_%Z2,VYUc4(//;uape90o!2MX?)Wc!8<PQkUW?aW"_%"OC!2g_r';!?+SbTdi&NE,X2A\hKPcr^7)(uja/<BIea6Z!sWg-A^,;j/3W%(c':]nLO3his[arLeS+m1C2CHR&-QsTeY7U^5$<k8_`BX`GN=b5T*:rV4'3`/1"D:I5^K:U=);+F[d@]VMO;41W#]u!Y;]+f$8r,%g0//kI@d4RP,$fV,jSI:3r*os;d#+mpsLWHg4)"Hk\G\Y`SU5S9B+!be0F+o0qte9CAkpoB+=WF&tj8aF>d+]NG+;r<U*th9;sB)%<,@R9=&W5sp$=#ol<-[&W>SW912_092Pe_o?_-p@pSG)9CgBt^WhJ()6:e*dJg?i.+P_oeHg".Ak'(A!AR=9G^^?l3YU(9M#<Q7o%JZbA%4K1[r-c$)S_=)5Ha6:DX/A]3!Y!sM=YH)6>+]H$NQjpCLn=q7Q*)+eM0s#1<R2IZgY6%q%'fH4o$-1gT1b`N#"PX"';d3j(%]`<&KfQUA?9I$lcQ98,H9(NdnJH7D?X[rLIg*Ske[`tDZCYr&J'PdnQ*X!FbS"LB*3%8@DQ&`2`_+>pA.+N>_YLt=e_T&5*X'!ME%rj87o.NY@LQC+/J\4+DIX!<G_5)[riQ?,bQF#@?Z\sgMo>-KD+k2G8)^GV,Dk^68hb*C(+4?YXkEG"'M"N`c0>nTdZ[pDVK(I4\#%i%:$]g-?8MF)G8,3Eogh)m`OAZQ99O;^UudfIe`hib1`=8W'?[P'<pU^2T%P'Hmp7'IW[>M0`/E#:tpFFANe*`2\I4K]47M92<aa%^_"aV_l9'T5UeR)=oAnFTXV7@[Q/*R6fY2H?<Vai>Y;e?^<s,XB.CDPUZRQ:hl#D(+H'7+pm>h!A7&OnG=?_KFu0J*Z*j7ji/G7Y%NQ"s"ehs$@'N`(O;,0i>3E`@q<YZ'$UZI:BflWp>/8n/b:)^eo#eq3KLND(D:nuI-A1l15_aN0c&%-XU:\-kgXqKhk4fPJ?B#1=$%VGWC:&]MQdBC'7leDcT-fqVH'CZ_ogKr?]GRVK&%:5(FP2RQrLQbk\5(m:tthN]L8JYqOeU0"(#FYe\Ac7-d!%,N^<-lUh4L9Ih_%h%Irden!bUgjNLK-cM&S.*(HYn6rng%;5i2Q,Eh?(?<Ub2@23;q-jXG1ZG5"@f7YV$@0es.lAob/(K!!r^@6h.S*PIHWOu$(_@-U%cj@`MPWI6crO\`)"q/\NY_m'CmK\rY52',6ZTRiPWEDoe[]1Qc&&lYJS%_@*RA!Z#'KY"8AcR?R=_F%F;1+(kA_^@ONMYhCN.@e"%pBOBtndAbnAE9$j!<=2"%'_N6[\@XtbQ]_i(A8Ipi1(g-NOa%'2mPgn%.U3(\EGf919*&!a^jU%*jdf?3R-U0*bqsHP[?8p<G$0'%GpMcPQ:M@`hGcNL`)n],=2bgIVhMi%_0)O0UNfmHg7j?<_G*=ZGr/!sg`<GbRnXc?au6ORQ_r"alO]TN`*#ca/kaoP'W,>Tb?9k&%&b>8!a*+)5$0#\%=dWq6!Z':j>&XglB/8o<@$i$:_c9HAdk5!M:f44.g.`<iiG2V0D@`=-h/]HpS#[*PRmA;S7U)MZjug]U^3VFh%LkD_)A[r.\aeHCIIuiXtFo(5\o?4@a`l16=ZC/UY3\F(PJ;[3D#Ak4#_rb`YQ916E5G>!fqL;-n4un36L15B0Zn$G@Xr?h_DPLb`%_gguuRomppJdY\.5ZTFiL0)Q=?+(I<*Oja;)C$*!G][)mbg.S?'2rhM=DB6[*9&"%O,[R8d9f`coImr<@/25Kiq1M_W^ZK93X%#t%kD3r:YQC9dVO?IJ/(%TU#@Ct\S_9d*KdQ(.=I`m*7F7,pa7nV-]@E)l(]3GXE`i#q8#AeV0ia:<2mG.OC;?VuQJ7'a`84t`#/e\C%9SnjZhs5lRN1Da5]WG];Q:dg=?De)8cS]LSlXX;GTu?nFMQP,9dQH#gIP6p\3*AF5+0r=jecFJV2M*Y!KnKe5l>dVX\CdpTS>8Xk%GohQK_g9k##B"Q'N5SDNa8K;$XW#2)LFDt=100;En3qY+\'0H^I?aIb8tgRTq^AFQgo/>Bg^DVC]m.?pLRaQ,JruCEpi()DfES9W%`]P9L:=,3YI:GmrddpbGZt4'2o8ejobtED)X2nk</K?%.5T4SV]092+hn)@\<74%_S/j[m'4k(MOD[!Vr;]n-oelt0n<1LQ9a[rT%O=HV#m=N"mC2m4/p/$qTE6#IE7N!dL>2Kc:,8`3WUKOtJ&*2rPnIgL@N%$2t>qtUce*9:8d"A.h949ar)0$kdF&(t33`RXbO$2CX%B#g[Q,\(c'Ijh[GAhVhQH>^uY4m&bs\huCl2t%\Y1[7A;^*4c-fV?lF':Gj*J#J5".0hqV3\8l&V!,h2r%;-Y*.WI_a8uN,@/u03%!<s^7bT@KDE!oNU6kaoA10,cZd^!b-=)k4L0QG$#-ns3H`cH]o7$ERqI08QT33"I1n63DLm.pWsWG@=O>QG?82+^K%LM@^9N-2Gc%UnX.CIIoE"<HUg9'T;Yl>QNck=Bu#rU^AEdV;oi>)#'\4?ieK7kQD7slX-uN0rV7`kpk`T#e2u=/`d@_eJ8;k/=?pTN,W%nh:]BF%\Ru@n&mJ1d6%CmOMSN+p_KU58O4lk0CAYLcX>f6M4SM*_%c01>VYgK7>jQjD_r*NWWAQ*V%1QDi3.jinSLlTOgdrV;L/_h@4[3DI%#6BEq"*hA]hB%afH&8iP(6Quh;J7326/X-a4:U&TS.jUCiCJ`mlH1u240qq67_@YC`jdj(Q!]#TZt4C]$5E\+N7\PfULgVaahkIB%=l'FaW`S&$L:#sWHC%-'[G7J@2CMPfn#/d&Fi-u9(Vc=tfs%J^i\eDI`eCc]/,#NNK3dWUG:D1!CIY,g/;@OK(NFA<_.Ogrf[LaC%@d0Z0A^/uL*BKA9Kq9b*K-Pi=:-t0tf2^/H:`Zk._l+$[0@()H(T):W2FiO(ba<F8ll)Sf8g`X2dQk2#RDq_2IQc*9jkc_pjDAYB%RV-8:m'=/OllmL\H_LPkRJU[B?oLQ6#rF'uSJh:'hPeA..]que^-2V3;CTMtXdRXuDaDq5<'_h*+'OpDcD@Z2hH\OMb8>>TPG+l+%RWEdsif4=O.-qBd;23(R5/Q$u&!].>`NmY2lFJkWS(l;#[MPicDkV::QSKNOcm2:E9gD3.^fq9MC[Ud5Rm#9h;I'SV4S;C+LRRMO%q/'<&/=f=-$\sXfDe19m;&j@nd#S46Cb[J6J%ImpGo`:kAX93&,;],3Qluc35gAu`(GeTjXBBoq>#4-V(2U3gB!TTf3-D%'5h+3f%ChU>'daEPjBT6Y*ltg?,';71ckS?:_5sB39NYX`7]75cRehdghM),dF<A3n8&_PIa*#<_bT33o:+k:P4W0:@OS/R;WQCMH)3nFR!%J7^K=Mg?BLf<*.kWh/;A8cYY]q(XmBBjaPa$o9_I1NU/a/P`-o/r%(A$HJVQfN3$:EuWgmhFs%?PK*%E1G-$pnHes/[079X;K#ZV%k/+Llbdk.9>6@;obLe"D/\ZFW"M.NVI72'4Z%@F:`MMEK!T!"eMR.TuR("*mgrLXG+o&=#"4t7kdrk63Mnf;fi8g,kg%nYGFnXA:%T76_#n?3Y3(AN%@jS8$$ir&$2_l(6DHM3,DSt2J%=3kS_QR>#2^KS;Ij6V84rFtHcnn>#BnXG`k=-nhdI.(]tqTJ]bp`9@GqXAZZ%n,@:re,LtZYBDSUT>.,*mp>q`O0_(LmJQ%4lF`cbc@;ELpWLtKH[5*<c\/<)^&.FH\6BP@d-)h&r3*`(CA2Pp\_XOsc&DYtT]biR%j`u6`LO$CIopP`(o'5Mbb-TLL%sg]`(+2>]\QX8N<rL>,[.BWN4/[#S*5-HpcKsU,e\#HSW:Rc))"Bt%PCD'(T>*VfpA!q:Qc85p%Z$k]Y\+fg[`RW)\nL\BhSDQE2rPQbA)AAW'F8,$a9\!-UpX@O%`PLZqs1Vj1+0WsPQ_(e[).("kr9=//FhUt#T(;*&e$FMk@90GS%kAp+\rTWUke>f^hJNbi2pPGU$bl&I1C%4R&A"Oh/-eA6V2rs%Iea9kk]=9u7]!u!j6cKB!SBP;E]Y?R8r;#pIm@0="PssI[9@6AC%o*9_f:<mbiDNi3;HTX1WMmKl/mnU#d3Ab)P!,T@(g@q65(9_@XDlgX3[C<F72V-_p[J&VKg"KYUnf)B5iE:LXq^ESaZ1n+cLrecO%Y88ST2Wil9gtS3Clcj0SmVU1]hi52@gclN(BUtPRE'#I33BLo6)*K0*BQs!iiq13ZUK88Hrk;lL.pGC0Y$UKIIQ9F*JCZCjg5#*D%UOP=QIuE1S)lT>%U>rHus2?gbHdW6"I.[Eo]9B#]?.l[,U.\k+If4/([JL)@D4U:id+.?F);V@DQ).RVTe3B1Ok"TN=!-l#fRM*-%k7J_Zf<$S\h_'rHT,q;+s7>Wsq;Qep,Cf[.]@Zu3S`K_.r8#oNB2!>nnBNDlEq7;`pQr(ENYa@/O%rdN[S7jTo>tEh^O:UTIVbh.%I7g>7Qp=2%5/'"i\GYXD2rYEP;'Z+F%P:<?a(1Z%:L1FbX*rnY%bIg;Q\XthGja1ObJ.)LbJ3IB#PmfIjS\:>h&#hEO'K=o@<e^j%i=Y<A:G\C-7&B(8dsC3ZoX!<r:GGE2:mf)HjiQ&BZc1J[!P$1g'M_H,^,nBdc,P$V>iA7D:=j*#C\*78C6JTAX?7.q^&(3hPp^Uq%PhV&)#JD@_e(-bOK="\:O^%aEm6orDQ^s2X<aIurnQ;MPh^gC0?=5'$OV5%(Rd_$cil_d=P;;d@9]Gf!&:'k=4V?$!)@8A6gMc<2%-9:?g,Y-*4/l$UD(Q3dF*/\uuR8L._:6/Ed`]PRq`lamYa5t#0Z8kbmFcZ=]XZ2GEpVA)`=2&#$o'"WGqpcDiX+#QPnAXMD2]&A.%5C[oGVTI:uCL8,koO)s["(u5Hj&\._Cr=KJ+fpt-YE.ehY6"<Bi+IL%=N(A+oZoH6\+b<r=&.6"@.pd"n@gXS.uVU\B)fjWh@jN$%Vq"e<a!+_h(J,-C\?<J'CCAa@&kS/T(58<E*V8k]8*B&ndhdqk`UQ"Oo^rIXSCYD]3KE[@PJ$nQh&iS"&nX&GmN.ePb'Wa,/Vu@;%p4L[[>Bs0(XTt7LXOKDTTtQY6DblFS(MAZtX)F$T4sFEWG!o',*796M)X,=upS20>X0]*ecBQqm6gt+4j_e[[B@hTTP@%C^1&n\n%I;[U(0idf:ipn$u+-2-5Xc?2+N&R*)m.#BYXD`69n^(Frb'W^`N:2OBqHg@j+8#EjoQ6YB_:*b`f%&Hl33V'7?[;Ds:2oHsHN5dk%090)Y'.8M3pm[1CX&!Y]i#^\<k:>$BdIHc(ZhLpV6aRfa4EBV+]3MRKZL[Wo]fN\bq.5Q-eH[-JMWXTn`S'O(KIbr.f#HsX7iuWr%r[-Y%lKE7?q(;:.HsS<r]rR(A%Ej\,R)mF>oBJ4j9cMH-Iij-_DWSG,K_H4a*`S?WpLKF,SY)Dmh:pJaO7aR*j%V;Q6T#`^hjT>g%/U<pHaY<JVpfQ2][E406ag&0t?f<=Pjtg-7P=p[66RY*>n[_;IGmK"9P7I1`dUA0.>WU(B@WkNo*G,bhrSZ.5<]5jokqJTKR*RlI%:G*Z"%9E2LRI\g$LN/f*R)d#2Sod$;nWQV$=bC-FFOkZ.kqEW/rptB?H.LWcFfFo&p@'fn)Rr7Gfk)&7>lMb3Gn[pI!:HiXa+%g`%c<joGnXVfrf5pjPZ%UT(HZ.;q]R,'L#P(g--YL?E50_LO%7f/lZq&!\<i4CV8,GGi[/EWIpjK2V$S9,KT03g9[aEG[r9RI5p:FAP%2Z2nrn["4([c(kki+Hn'kN.$;qBs;6<hB5-&h/8L0tbc9=ln9E^ZT+5o&MaMk')8jIRgTp9&2&#S-UH/rI0`2Yi^d(T,KH!mnWkm%3;r:;kekU:n=*44o3Euo/oJ9lic3fIEcV.onbV>EA9IYDjl5[ek\>$q$NZ\DmN.%jg.?YX(YQHJMlUYpS`AiVS'=A[?TJL;k.^QF%bU*,#S'f!Sl$*""2174Viq_#lMf*tgI/W2ZQmZr@bX9dOmac]slbq=2?9A-g'(hgS4!iM3VVbU\rgauN:GK"oHu\lRiZ20%hnHke%KKhYLYh%cYi/HSMj*tiSYj[Drb`*#Q&OSOh4LocZ[^]Lh59;=bG]L:CI1FkU*#rE^mH:2#dBGCfrSs4!W+IBTHM9nbaqM<sb3_UP%KAMa@C$Ql86!C>Xa=Yg6Fs?I]bL"9CiqP&*[/g911Or1ZGnWreD5t@;E:S>L'lLn1RrIpFS@j,#asNX+1HTlfiFE^Z#UoT<la9.@%-A9#<+`B]gRh5-;KY.U7DaMN@1PEF3ARY&a?bRijl,@rb%o47XF#nYjo(r%VeR'Hh=?+/r$6l[a71]@RgQfId3q)m`3GFiCWtX<s%kO*_T*u:cP(Vd+6cdS)Mhd"S'c]<&fm`O!`IdH$2Ui:nXf](t[NRMb)FSh6XW7B5O`q-Y/]\WPAT!7BP7-3#b?S3,W?^''LpmTj[%aj1c1s)N."]"%V5Eq/G\Mp%meT3%W_`[,iT0"K5BIrCt(`[/+N54g@Pj;4`d@4d7>o>KH,QFue,NrF0ApAX?C=*D#Gh<Nme^M!"g%%Br4`=8.slZR<cNU$?l`LudCWI]'Z5@o?#Rp](&TPb9lbjm*H66NCcT=g%-&\GkDLaMb"C6aR$RJ5IAp+-BOe4*O85r&,M/c,O\.%n_7mX2G_P8UL"l/gSbd@h)?:fc*F(Mn_7mX2SW>.c)KFr:EjhmEC+N4:nKV"(MY'W68-j;]KbE_HRq?jC(K-?EAna1Hf@hj4#@us%F#Z=nqX3S.2@&j6is\`SAJFGW7m?^[1KM9Ki.9dVZ20_!&,bjSeTYPFGK**qDIb,*kEEN)C0d[oU!(^,1(t_?m+gAXp!@74k2*'b%/NY%MG^jSH[(16mSH7MEkF4Q2*mpNW4+DPOim#lOMdLtk0DScH8ug/'!Y7Zk^PghMmR_Xc;FLN'ldtS@<uCSkimh3Oo2o\o.HR,'%r#4'd[g9`,X5ol`H6OG3T?)e74T=7/3Vn.@!2%Rn*Xac2`tEVF]5fhbWCO09)q/V5RbaTMp=uKWX3PU*+akFfHC^J*/u:ef_b=>%%<h@F:-a2)lb1#'g5GPIZN8?+'cQ$f!AC^.rWU[U7C:`:^2'/*8\T)@H1f\e\e9FY^NVlbG)QQYEj4&<m@X$k^G_hl;j4)^@2)\3h%HZs5?1qPeP,LQ'2)J6&-YB0^Bm+^R$UL2Tf@(23Pq=^Ce]XU#53kiT#d9<-?rPQbA)AAW'F8%\-gFHVMo[D4"`PLZqs1Vj1+0ViF%/Nn7>'7>4R7-&Fcf8GjC&KLB2MA*@gmW`'Y/,Oo>Ms5E_jmqOTm,!,@f.&lsWN`r"kcnE:Zj)0?gi`82l##iLqEcapakh0IL*$'b%o&=J.<lpWqHob'r!i'X[jVN,H?*(1q?JNFt^?AQjpYn/9rT^+1i\^MjrT-iD:J#^n-9pM=]R+3!"oNq@&t=5>^>P.0\69u:X*+*J%Sqik"[e`*-Gj\].jDr;lR*d/$*?4[7Qa]6.T6?T2jXc'ZPiDNBmlO.h4n15F<GO]ZR32ZFou4f_pS>H>be8pi@d^?cAfHA@A+4=D%^5]u'&Eg;Qp`Aj^*iHi`ZI\pf%DJ+4oG`GOi>I"nDr0N]pRZ,'g;`.,=F:X<bVg6o`o>`TI#l,'Hg[J_c*ttl*k9aeSt+??`f(t$%eb>[P(U&;%4Bc%Is/o)1boIB,"8)+/?Pp-#,m:tG!p#7fEgn"$*p<oV8iL']fY%W!k3+p,@J%q8n(:l;HJ`OTXk1l`(='>=U`TA@%IsjrcpN)qS=$N5s*WP0cR1rr>4ZYd;qXE#R0(!ja+&5o3oP3c?4%omHjs)o[:X^QboG*qifYmsEFPcPANq90e!WS^KU7S)@qk<Mk%Q#cr^]t\rCFM)j<I'eq+R65TS7(;<j=W\$THV-c`]!'G.i,!;m>=s"oo8E3a=%Ba5eZlN@QCke\.K90UNB8afiUWl7T<BB0Roq@.%p2Kb'R)"#QEUq=`EhN$4I(AQYmeY)iQ#A!RSC32#JcX+0G>GhZAYFSFYEQ<eCII9!rHm"up.h"D*GX[&5-bB+%*X>7Pt=+_D/]*j%q!@[dqu;%jEP>OB5[Am/iA,<jle583qL`uUaX=4#J&][*2p2$d72:2\qU.i=g8IZZCN\lq1@n#700RQn^_<$:T/!a//n?mYi"(bq%**o.@]fB;uENf7L@Lf:`=5P$hgh$pW50iXCEs^IkT!-HVmMafgl;[b&bAB\m9MkE@qB5cW9?hW(mQp<_lEp5FLJ:s]UuJ`pM&Y-Y%Oe#9SG-3p1LFtJLb=[$CU2tI6o>!fXlAYRjMpBjsA0X,WU$-kdId#$\)BY\+oYmZl,M7o-2h4Cd#b+oV4l3f,T)@EN:\??7+4e/)%pT[h9T+s&)*2;Ol?F"Zr6qse21!=&d4+F+thqal"o_=HlqFokA]/n`Ke%[j?<_HJa0)rAkCprX'B]u!n>^g/fn?Hqk-[ek6;aqoo%@F=sCYP@ndaWk0]`3"+42l&U)gG,;'C`[Jsa7qu*n2-@(i53L]s5>Tue:$QS`C&g$T.bmVWI/(&3a2L$b)]EMDL'1CYg(5*,X-ta%DNsNA^*Q"X?<ePA>Wt1"d$L(jO!gNHFnF/JlgP`2RXV\c#`e*Ip\!<LP@s=P.^&O/a59**DXukeCjVOlZel"YrHUbCpIJrbpVP4!%mjlA1N?)8BnAFA8q7G6/]LCi=d/2;bLPYj+.;GKIUKKg'VoWKpZ8V]D0=N6t3Oa'UqSeNAj0<_jO0:Y]8&M+Debg&NYP%aiB01T_%h95cg=7nFI-qYn5q:CPrn#-Q,VW>9%mk0&Q3H)[bqWh@',Ka(@5+MRnEQZ\@`Jh8#in$D4^#/*ehemSk\bDd*ZYk*q\K<$oda=]F%RU>8[Qa73:k%6h!D2gOr5CT79s$=Et%i,%(MmI>6s7P:*lkPfbq#-NQgH"uFloA6i-&(%*(B*Yo$*Kncm9p8Tc47>=G4s&(iqC_(%Wd_JNS=^d=/:*>^e;*S)VIXNAq:PW<@2s0uhKnmYB`2[dUn>?u_fM5ff/4MT]=W-3r;Q'[MlZ,GIJ/i4kiLCQDJmG7K[rA88*=[X%s1!F%`FO:j61iq4pAi4#%%Wm-#*Zk]No5F$-J?CH^k?pGfcPS.VkhU4-c55?4o=Y0+7<028YsR-8b:%EbedgL`rMP@`rt,GH:)e9%eU4>S+hYq6F?8!^R37j+\f192Tp9pKGXGp.e"_YA`*(uPEDkecS+-jb]uJZQGs_?+Zodamk,ZJ1pTcU>Hk#5plZjS^gA[XEHs,fp%a29RX!)"o50XRXBp!/j0Dgq77*qYXoA"`,["NL<J+`&,8=4=hWh3n#7Sah#)D6%7R]Yd%m$aVh3+@^uofUEEW#Lq*0D9jK5(b(P5%44Gt<0?(eX4G!JrMuUQahuB[IRaDWA-'L<IP#Y*Br<+RJ^=3@U-b])#/CFta:U0["7C&G6J$=k3DoKgC5rk#59&0ke2nI6qX.AM&%^sHYM;#?.>6_A=Agi[4=;@DJ'k\1,>Ktm+&0.,.t:%06t)aY!]ei"qC/*J"^\"Gb\)9D91fSs*0qT@?<BI\`MYLoKlfau[%UsoNO%V2+#=#V#iU>_g[.G']nm+;?kp@8Hb\,-1V0.K!Y&4dS?kkoD,gqK.!AkY4?'o[-=:R7%(Z>MFa6oKAqZoQn.n%2dc]!`h"OhW.CD%^,-^0EB<?fL.aI8dR)W8M@BGKeCrhr>@JdY.OgL*?Sgh[5K*R[Yj86YNqNf\7!Za\h(JuoIg2,&Ic'7?Lf.QJ:M4!::.T.eKMY%@%?(s-FJP:pK$`sYsFG4h@P0Mt6R=nN@]SGS(TE?G6T$IA&f'hpb-[72$gd!u.:]Jg,K=Mi*YKmBu&elNP`sZ.0`]j`d!l^N<#a/\.%ipSQ7Mr#:pLe'5$g`^e*LGT?X@V21i>ad*(XPRD=2BW;$Rso!6ZC!N@T>nDmN!GRG^:5'`gJgP=6r?1X*0M[PrguJpKt;eA8=-RG%Q1kYKm6F5<VU=:\iU:TakjL)km`mt&jB_?\.IdSEpsTWW>:;1>WdSnEE]9QZ!5)(.E,W=j3u`Ln]"Dri4Ddmob@>qf\`ms#Z-X^Z%##bBE[6Oa'J.XVIK2=j)V7\iGncsBhK(fa8C#UK[.ASA/^BBQCR?YF<lBeWhG`75*r%U_3*$a[/W1fLMX6P'4JYr2S9C`//CGCE>%714_H>>k:*q!X7@BduPm*:h-p:*;PqZAR*SI>Xacku3HQ"9OQ="m!QuiVGrU5J71iJ$SE3?^$u[F@*q);Z`#o(+>b`:fdo./b'@C%j\d(E7C&/ni,Jd?GR7o8'PMDB6OVa;L1-ACJknBh?R.un(d:[ASCf9A_64D(e8^W_;?U`%1*f,N^f!G?C5,=]=IM%O!=rPaQta&E%02E92Z4XtU4SV2m^"%[f8(EP`(r-4KTd<>C*/Am1@QBb'1Cln0BQ@6qli7f"5llmi9>\FDQVcX=,Q^Il.40baV0J.M=<6026fU'E%n@sM-:c*F[Zj`9ih*p-QA6;-PbHN7omi;kb5,3mkUOVnCrBJMbR,0T'$;m/0jJ?F"8>T^]+r"5=0bfMrYuF=>DMgs_?@tl03J.Xi%5\17h@$)K"^^sEUF@mo/&:7e+k%3NR4UG/N3K,*m&HpTd:'Slt*6IIk71a]1VLa8j;&&!j"BOY=8gL\JQGldg+os1>aF_L\.2Krk%4:=Lj"ePuK#WSa!ni0;E5gV[@6R!Z.3sJCk-Vk<_#E'<k1H^TK1<!bKU,[`lOVdq+#Xh)QN'n;U"\'UAZEc=W+JPr<NPOI<??HoK%b1!GN<KmRt.*X/-,tS8VMIE`@'SmIk,K'('/'SI@Mk/pZl`h5`eiLnrOXF:<esQT#V&=M`2n*N<3Ab,@jWib.[DsFQ,"tJeFOWg<%P!q1GZS\Nu95tAUTbnFOK4G06`,Jt^kp/iq:8Uq[]EfX1U>fPu;.=3.?pmnEpu@_YF:74Q;Lk1oeS1BHaT5WNO.?lp.G>#a"(B.M%bche98>9O%$HpjaM\%1K_8:d\&\)ff=0iV/"DAoUP!qZIC5PV,*ahtG$QTngOsD@WP%g:7e2)B5)1c@=+(4.`Fp&+B-.rS99L5T)%A<k8o;^I>D0.V:1Oi7i1)?P[!`DZnO&X#\I=DIuQE^U71%EokhaD=5L.=d(@/1<Q7">1Apa9\$/)H/bP\V$4?Kh=P6J$QARAGQVN%R\.A?K7G;$?js?9g)X%A"(E=VQIbELGZH4j[]rd=B1kK(-u:<IW\Z]nJsUb;6^A&;;oT4k7XUcD_P3,&oKIo('L:+kK>ZV$9J/bA%A&4!tZ+aWX-Rf_G,)]+B$l3J^dBfRN_#i;o0*+uoMBo,d!S[[p1s3ghes](T%*19"GtoeRGujR33.`;.:mdC[L';`BHW.;G&uAa*%6u=OX9qe_!U#oI2RN*t1`tU,`$/iVsMX$-g8kNRu37L0ONm^T61'KoCQG^!QlWflh;5tHf&t'C*4q35Yo9>=L#WsUM"W1,.T\e]3%QiraCZ;"g*Q(hfn*(>cP_(u2uRplX=Vqkc,,bAi*IaPGYQV<IkIUViEBM09A4?Qmh"54gN=rINpa'?o!,"Qd8XHpe'UjfldVddt;%nRQ$fB`'Ht(.emc+M)VZ'UH_`Lgjj?.0]NF8LknjLkM&Xb4*'B+aGbRS1'dfM.MqSJ]D;sjM$e_F:k6B(853KdT@6B10*Oa-uZ%J%S.%H"E2#Gm+he:MY!83M?1Hgh(W8(_JnM4!"A-nT(;:C-4*V&4Z"p#Pp1j=OSc6FZS9i0L`<hR=[;"52hjsSeMZXpe_shGn_DFcm%VB6uNTuLn.mu/&kh=ooY0,e5:hO3(uZrc7)<KsSqq:[5F'<Nb4Nf(fM=A_CFNl)bOU+Cj0FWuJoU)aA3,>EVX.MjfEKih))qjbHX%=pOt/oRB+sYoL(]-XlF@s!RV_aE_0URUKd(c*9*dbm+X(!]HTW/U=G&TW>S4[+lb`%hU4N"Uqs6]V5p&ULL]`-'<kU*sBo"?kaGY%Cpt8CIp0ICr^GO5<\%S7)6BBk`Xl8>%t\F?o.G71pd5*V@5WjN,ktFV<smG+*[\e&6lcLZJJCm0\.uYe=u`XH&hOG`l\uU3J66#R%&ArL^CBJX[M_fUgB>u#+?s^3hfQlCdN<5u0_d+OMbJiK`/?Ou(;p,+c/g2'JmZDCAIq=8)@TXU-6+B^#XonEekOcTQgb[t$g#<Z)%'LGJfWNdC%8Rc(!Z(a6ZIjfgnXfqc>E^5Go'*_/lr%#rr@lEa+^(nHd>-g2O!tU^7rW#>.![YDn..5*t(7[k\$Rj!upm4pl8.tgn%fHK?S.ds.:*18a:[rBA&HOU*'YZqIf=H:Gi3/dZ0bNoaOQ(l2g:6?6+$C;Gi5%K^#s%3V6-2/;),pdm5nglPh.52XTck)`3Jp)a4%SS:^g"9:"FQB^&)S9C\/;AcQ-L7<dX/!En@S#cbCLPqueK;^=)Xl\V_bH2QW$121d!qZHU=8WL8_dX!h9[X2=e)'@+9Ne@$m%F#h%q/<pqSMVmG)uiqS"$5J9ZrYGm=m)cOWXcC]GoaO^)^`Kn[$"1VFi<qT]W<a&>0Nj:_s7#8B/,R8_U28l2nrNk]m$$dE\JU7YP"`6%_)k#BL>Ko=G;[sQlDlH0K"!OCG,LmVhlBucK0b=,.Z=UbIXU^rI#p:3i0X6!id<f1cNbJ1Bhs,Sm&LH"6^iW]Us0*MH.RU+`K1Cj%2Z[9Q,R*NAV?h-`iA7<m\hublYC[>EO9WRQ40/i[T!Dg<nkWoG:acs&\K(6sX'b>O?ni\*UeInrnH%9roIA>G(bA`EDe4n$+A@</%2tOjpYk26n>?:lC%^[j(8O-*M>qN%?>n*U=0;B@YVS1B![IepmVlQ5&diihCZQ&th_5':`f6lLbZcW]M*aB0jh[11XC"A5BquVIc%Y]uJ)VP#GlJ_RX)J]+QFU$KblC,poDg%U0J5[L15^9c*)S\bOn)"rMZj[jO[Kh>st):8l<Z)oc@;E#hf%Hd\@ZT@lRV755%/j%nJ%GdrtUO\tk_X>*Ye1\k3s^'<G`ktI[ec%`iQF^hn"9daBLBb5WADm@,PjT;b?Ag"<JP=>A@c?sVJZ'"Ap<?:&]$\o1(8l$56^]#m_%:3VM:!U51q5XaNr;0b0#8DAGd9Y0U.-e!oPQaPimK-j"glT@)9jdr?!a3iXYYme!Fc0Gr.NcW,5N\gK<(A-HuZ(1gmVaUL`-7tP_%a7\@e;tmBkTB!i]U4[Un+KlY^LKes"O39u0nM$7.P?n"aK9RuPs7QD#C]%NTK>i)fqnHDQ`u0aI2ak_N^#^6GRc".RqMfP9/YMc?%b%X!<Fu,_>s0p#nckN$9bAn)fq:Dj3DpreJOjrm84":lFjIjIka'&6[\@?GjpHrio?QPUT5?\Mp4'dHqK<d#ZoALK<DK6`NqD\Er%E!!9;'?donBZomph$X3ep##2SmpOi5K2]-m5D1'SiKmJ7DR`?g(k547#pQ(F&K9cW.]`)Ac>PfRjpM_JGe9P&+hXF>%]qZ2cFgh>%EYSPo4!/jd2\LK.C+`!M`>n'&ir9F5bN[g:m>O.%pgE_#@=_t#>)nB%JTj-L+0#:!-I3n_o[#"(<umO8n^[sF%*%u]T?16.ks'gr%%&Jq"p)hAH=Q"&m;Ia9rEcjKuU"g)hX78MJM!:,*c07ooCXp)06Y]?eG0P6Xaa.GNY'$$a<V:(01Ia\/6BaF;BFFGNbg/o8QJ0qb%jNo*PB&+tFh5';m0m]s<D`77>\GKE1:I]ZR2\#5`%FHVCrX:(m0sqs(C(jXMRL3OaF@=Dn-WO`Hr0_^A^$-@[@u[3qCc4X\@@bNl%5d*c1R\>jd`aemHMpZLp"n!IdD7_\2?CieS;d>4B$E]inPc,@$0<I*\.=\$/gTcn^72rJWVqn]$kL?OfLh98uWA)Pp53n3kHu6/[%m<Zc_Wf!Np35J3UWX$S>E6Rt7DV/Lof6FBQFB;>f?$B>\$TAe6hoQ+#Bbe!I9:)n">K_@@]U_W$9&U^ejgt)qp^u6(JI9?b7lV6#%r5d,l#9pNJ)MjBTM6Pjf<%,/]&t@Pc90[=!\b!W0,Sn.8VXYG%?oFK%`13+#UnK\pE=l0U!J4baN9rHN\0b<4[aI4EU!hj4kgB-J%s6VD_L]7cV%MLRGY8V`($q8Lh'C/-ANgPq62o7(,Xu2-?DsIDDo>L+)Dqk/75;A^Y-#>Xr[?2)7ROTFi.srP3%*Pp35;k[FNFq5-%^TBLbCt"k)lpqJ#QG]u5rb'B=?b`AS6E^<mC"#MZg7_5Z5+Pi#q/`i8oZ+Nl0l=7!FlcKJAsa?jZ-EM/CXF.HdBr0++u's_Fjq^N%MakDEA;QWeCtah>A552/2(`?P\+oBAR2r4Ed'OO.$7CI[;#tE9rQd$gF)B08!,[hpCu')E0V.m6%Lj136cTZ4.pMmZ,Jil[]`<].%!9@6VHEIq`DV^^SjNS4tNYZNoUkO01)T<<":G`^@a$CLM)0g.Lmq\llG^]0%pASQBqMbO"Cd.e;b+_=mUB6cm0N;L/D&&T^D"&kY%fE1=(mi),CE\&.Dm/4qBSc^^pB2X)!Nnf"<lQaQ3-a#Nglam?R:7LeXRBj,D_d@AZ5tQGVh6gM1>)VKfqj)<RL8>/s$!,c;3>Y3?%3L,VDGHdZnAu7b<J$9c=9f*f4bW&@;k.=O:`==)0W*s,hG+D'G\GYaHkT&)OCbn$F;cX)BoIm3]7XLS?\r'Z@rd>U715b,TXj#dH%Nr6ML6O0:C-R_j&cl%W"VQFekYo]@;@>-n*4#:N!6Y^8o,@Gj[^djs*P9A7<@hDW%e'0g*BhMDD0(gMVR<ta..0qg%iV!2CH.Pp#%4+sQYU"N[L%dW2'TUe'uc?s%f>h,#=H.$@3(QB.UiM,^EkNY+9eg_$PZMAEO5$I/sm@pl6CDUhF]lqe,gM9_89K0uA@SiNeE5'@^%N^XIu2ZK:Bm)0qAA\Uck/F;$kI'1:`mndHebfl??)c[L\%*_t)\PZ\Srt9J+;O`iRBd`'B*8D^.`1%Yfd;+o>oYnZc1NlR44D"!U%h_p<89uH5d>P9333Lmb;>ar^cFE<ppJ#T.;X>>u%ra]FcLY_bqna%gGQ3Km2TpO!fp!HG)j=q<1mQAJ6l(dQh+ZHV(I]'q-^@R48%(((h4S]'NL]<@J[Il_d\c!E0'l2#2b1,iS5pe$sc9EdtAnIrj8oMbUD&VmpWpI$9N&t:InM[M$!$07-4^:E%_Hs-6Eh:?Wpbb.fQ%B!T*J+qa`V6WNTa!$>RJ"Od3hF]nQd.ko<>=T3MJ?f]NObO9,1o<0Vik4#YF1CcTp!i8]P]P@l@O;C+VLYJ0II']2bYXYX0Q[[,K%N%/bVoHNfE/]@dl8uUJDoE6kQ.Ne'D<U',BOY;Z7j/;N^iHn`*k+>3c3BiHq4gP'R4#ma6MK#63MrOWcq\4K"rKY\)B>-\polHL=%`;L@S%o8bqaqG>86IB,Ma52Q.hb<qB,Ti\?U4oZ#7l49UhH,Se<@%H\mf,K=of=>iCD\XQf"XYt,a%H_oASXuHMDsG08p"2_>$.h%]#rVD7t7K;iS<u!2sgoj`t*+!r1k/,NFjf(PPjlbB#sSc`@%4KpWgkD-qu0&H_p>Q"-AKQ%erP_kbj3TA-_7`]Zc&gYsDgBhu&?V%B[m3qin91gYoFG0"jG0C$g5k,`T_aAjIuU:VRlac$oU0R^jr^q`/geVKmVlu-\tON_C3XI-.[J-f*V#mIp#Be:6$g<kjod&iR!L,%$jAT["GlK^)2!E/Z]u3gf?%Ou6>TtePs7ZE</Wd>epSa:fk`Z<Pto(L&tI"da`7@Dl5e3HdU@ZM?!ns0d&:odFPom\!#`r7Tgf+g%5@]+q;B(h21g$8'gb\]Rb;W'YdF)[uiih/%":klFp\sl^<bc:=c0sLEIrj8SbVpshAj=VV[J]Mgs1/("EOo%=,]^#I:#AGjYgbWe%YK7I/R[-,VjZ]OhJF/#b=o\#e3(!tW-W"]Ed>%epFC*)6kMQ#-qXX.jcVTK>c8h9)81[r3$L^G^l3FJg]1aSl@M("ai&I0.KdroR%=Wl#C2#L8uL*E-=f:D&aS'-G3o6e)P-`(5u20>04rb:dfc^LNIrY!,]O\Vr=@8I7Nc,.G<md@X@,u,Y\_0d:K"uhr[V'@0E'OoRm%q=Zh*\a:[A;*g@kOXQe!n/YC"`<f6rrdHNkfC+F:9(DKm6CWmN^JaFu[]o<ZR=f6_b[hhqf\Ed(GqRU8rf!N]ScJClE*]K(!Wt]1%H\+'_9mif[VsD#R[d1c5fWmP"kR'ZKR(4tKjS0-GOlC=7jH-g/^YDXos&i&:eaXc1oF$h0(Imb6)9n[9T?Bd??9sY"n2=+(<1!"O%Dnba]?:k\`To'-61K`].c-,?Qm\+pWWK^>j:S,?nPUO9rjHu3BdjqG=`20)6c<!?C2u5V!&RYVWG=9DtoFe6XHHZN`GN2gog[;LK%"8*I@pq,uc,(J!T9KW?8$CBYZF%uYt\leuJOued=3@]I>KC:i?E*'$G_nL%O%+)PK!JhHE28#2d+2&c\/</fX#T1tSZlElT1-ih5%7hG$b_e:sGdJ.Rm&^*n+_r5GS%F'Zs1eSW$[<Uf/b_GXl1mY>d6u:_mbQS@6F!?1tl:$t65'8oF0Y)sVP/!u%hN?Xgq`K;f4"O=h%_tP?X/_5",<u+o.bRfDEqNQqmMPnV'X='\@7VmpRTg&oU.2MH/peS%iVf'o:%/sEr:diV:,,kE2]Y_#FdN-keSs<0:'@=k"3I4M"%:_cg%.i")#"l[p_a=3\+.UO1U-E&j^\4a=B0G]2&(V>9R.1R2;$;m^XSfM<K.M`H080ZPp1SjeAM.-a"6VgDRbqXO&LN0>W;J_:Q%-W4sTFaU6OTRl@,?ocVn7@h)mmF8_=#fAKD!euOC^Hoe9@H1d(3pFbK_4sp.`1Rgg<OE@/J:9,WAh7RV-"<5204e*,;Y<hJa%RAg%"^@Y>F_+N%Wu-+_*/c,J1?(j0jN-E'W+/;VYK_l<OAo"@+^rAE9SFg-4c!$bDi3hhpoORr1bYlaBfJR@X'(^'EFVCn]SWR,.m:OB%P_[>Ui`I[tNYnj%;JZ,:b:f7D0`-Zd$LFj^!lRH)6ut.B`"O=mlpO-iqfp/XaRD(d-'DUQ.F1.&5!ac"d$!2unrs"-kLTmIPnu6/%_8nPW/gci'8WGoaC7s8bR]mr1j.!,f""0B-Z5Lb)'0!X=q;J;"S$Mg_`gtJ$"i_r^gC?1\"U:^u![]n,$-c!A!g\`G(Bi>Cr*gO<%n]/uK8tI(ET&Vdq5G0D7&3PNnoUOj_n^o3f\iBXuZrd\&62kcM\Bd+"B><PA4W2\_*ER8J?mZ*nG@<B(&eUYI2#m-u`PN)T@3k=,%=%=*`5`lk[+0!95i/`6ZGBs2\r2t-*O*m;qaKr:`Zi%f&/bmFccgCn1lJd+DQX%9d<rfT*RS[IKKRN2p+#tJ46B3&t0V6%/)dJUk%D\nDonE'o0k42kVoXAQ"i5IksZ4)FL!GsNdE[Vip(h#YjY:HHAa*)It_^1@.Ifj'9haU/08bRf"n+ou4\[^oH8T&?Sr2,&I:6pG/%s!b83,"b$A>Pa54:IPDqFS5eV[Hh5j45)/2LY5@)RO^OlFKrmmfKN/0"(BPdg,Z[B@IaLug5hC%Fcki5k1"Lk.]>>LML;Q6^eJYS%ObN*#lb.dB7to@KU'Lkd7k5\KXAGq*peM19b7m6BR7edW>@70U&>Y+E<gM-^gm1.mUK,[iPnFi"QUM5!OXdX;JuH39:Q@nFElD,:%h]i%lH*[:>!lAkJRf/H&@Ib_`pZgpqgRB1AV=f0]"o,-!+FeagGc6kDIJJT>m*d22+0E+57/`iA;e'?Jc@L9__7UJs?[_0P[b>WB%SFr1u),+9L7[Htkm;G0gR8'GMbBmYcAUNbN,nWD<qnHVB)3HF;m:S<2!>1q1mX8R\4f'[2kfsgMdF3lrT8]GbkDh3!#7s(Jqt.+r%o8RMb#Nd<gVfMMq!RCe<JP9`G%1p^2iYS9.:;7Sq4NYGl-rn(Rh>n247CbQ+]=Hu!?p^&&UY,+Qn`T3"-f;T*ZiEC<9N5>>2"[X\%=1#:gJ`-n@j3%#CMIT2RAQ+n$/MNO>95?>@p@:jQ>lL\OAHiT6l.'kY8adI7E[?)h5-C.&B.B?e]g^Kq\qoo7@-\`q/_&P4R%>ub%=mgZ;9&0+"\b+Fu823t9m[u<a8uY*a^A.&53\2SLNcQs=K7i7Zi;Ec*F!5\/>09ASoJ+6-1J\a7YHqWUFH4BV;n-/]cTpd-76):F%4uF*KjZCCQgnFa$PtO@@%?E_hh61)[WM0PBC2>VJ(V61<[b)t4(0ADX27?_(8VA3]?hRn,SrZNsfl\=I':ch_psCmtFO@``:snkF%j*D@Ih<A@Y9haD9T?Yf^-W#gt03<EWQ[^IYDT6+;]-Lr7^B,WVW58SM87"I?S+Ra66Qs2#q3+Wm*Z%lQS%I`cHMF*.KGf8u^q=@9%)poX:P/&gF#WO69pQbIBGLD;3b5V@V,_,W1J#Bu2q?"pl.\H"O^(OuD+XT@).0b:'H2&2ZKVh)gn;?S`cR9N]@UE!!YMt9+0C]AH%14&)gl0DC<GUAO<6^-5tH%D9/l?4)NCkS:Rqu,s?HB[N:M%H82Q/[<5jdW(V=W"(7.>!HU%<Le"gG,9RNJ:Tr,.p+%krl_1d$-0S%GKnq#3cFd0`F7nLO\8aW*U]/=WYVdq&#Y;/a@Z)Z58j0$8nYiLRf`1P/_;?Kh<tI+6/5L-kGNHrp0(Tk:9ZR3$"1+JmeGcqs&o3h%^G1+^Q7.>H1lSB+Yh+Y\I1E-1l!@-%LOhACmZVZMq)m,QhI=f/c(i0GV<pK^_"aY-jnGBY&*G(ekuh;X]7ies'1cJ"l'He(H0!F/%bNYDr[Ou-j,dsY08m))aeUg)%r^npF"tjBQlj<;d.Fr$pS>"S>@?`E(o=T&:,qpEp?Pm=)Y\\n"5mN*9iV4\L<899c_O;"5UYJFa%p'A*I4<]_Y5R\!pi:=OrZjuM>R9(a!C8@#^Vh5US]HSo%ZRZ;Gb#>FtEOdO(L?Bu:$,^=g5D0<gJdN\rVL2I1E9h,(^M&aX%FWJ>%<PR&`'k5lS$g:_![/BU\9@^eO&tXQ"ZPlD8<\Hjp)nh^>PWjfmEN'lp#))inr1oJt:C_>)eA*^kqe.E3I8rtTQ7adbP+o!Hh)=8X%1AMffV"8d8nq92]5k?pu>c*\1(:_/=/Y.%(JMmB^^'OmYhX6IX9p@9U%Z6o2o`B4J>MZY93F^Zr3M1CD^.=39&G@/n,>]LCoEU32%BhAJnNeG8YE61'7GBrR*(XTA"8OPP@K[,&<_Y<A]^J_YRCfCHl#*d<ki%%;6Sf(ND,rZ*YW=B\M_oqW\Ik_K6X6!+9M6JEEeEEig%P/XWOW(aD<R"(?56A>;WB[M5qMM*f!McdohnI0s+``na2)YF.HrbS$T+G8j*'Ja%VVr-)<D<,4TWL3)7LsMCWQ/qfM?3NT87?oon%l>&7RI7jUUN)lCebBi7ZAj:Kq>nO_=M>Um:G?IOCJ"LDa2Ts(:Pt3mSJK)N1+I's,nRCPK5j1@%95r\^]lp4*'Z;G#3K>,Y!W3js%C!H@Qs&fY6<!DY7@pZisoqN>`I%re#'Ve*S48:<'*i+6ASl2^LqidjS[4`B?,CS#!O)M4?nr;0_[;JgnH0O[>\,`j8pk9cL\]Vs(%5d9q^Y1"bB5dAL]h/>L5Z;6SqVTE/T40?IBg,4p4ho_LNZ\-,5oLNJbAKK<F+/`190[iD6]"J-37dehsM@@X?)^_g*q#cu\lq4_-%=FL1mK27c-eSJ&i<X";$+O\iZjLE<M-j:MG;'$O&IVs2&Zi9?tF<1chcnagQ\8INQGCHf4<*gW:q.._4/+CR1S_(H@#:m?iF+5;%%>qCIEBnM-+rK:?,I(ibsB.qdKK02\7!=,IQ9OGJW=-\hjl5/t-XXp>6CKW)B-tq*pP&l`q!Fk[&`o/@GqE15B\`Ldc;e_:+8KF,U%HgD,P@hI\Kn'M>C%uM:gKapmlE!Vh+Sd>V!!r7)'bbqJ!-/(6W%c(:N.CTRI*L&2%hu66#PP50%_Q_Ad_17CAS:UN]9lfLdoo\"4%dC0/[=1)5.]mP`>Ekt%?^DP""5nPu5*#RI]C!O]4;h-N%XZiYOYN9XXs&f,,O+ml+V'ms!B.6kbe5Oe[Pjr"'!dG$Wq#,7(=39@\%B'ILXC8t&=Enh`cgm*3)cDVEp-@>Xs>oo6&5L7JEH4i/NJAaAra>S23WHdD&j[,tLD./=X4S-gY>-_%0jmfY;/U/8OGc<I??\85m%L'sd:PIT\H(a+9YJnqHVI<FS)W!t&G[g*'p>Y0Mgl_dB_)Jpq:Du(b09=2=WhbEDY>kTg5dY>u%`eE>B]c;AL5ePE?^M7d)'+8XF%lOYJ1rJR24\kdr?OLAu-g1nqtY`;]$a+Em)j@FR5$n1Ui`QueICT$+eS:ZX4pab8Tak9PV2RGmMFMckkoTLDspT[>@$piZrHP\3'%q`Y>R#fO_=P'd!$b[Zi5$.SdX!OgDnGcYrXr&#pO:>_d*F_$rUQ;i8UKsJV@l7+N8cX/ei;sN_E/HEV-DftQ@\usFTJW?9C=5'p7%ZsbKmS7[%]0\^n5+2tGP8eA+NVfZ3F!6hrfIepNEU>6jAV70mVY?e82'gVW.o5L[h?Pc2hK)^1#$!%.ng92,)6%JTPQmeLqrN$e+%G^3EZF^oj,Mr9^YQ(Isr*2/4-,Cf)KQg&tZF3!b><PDVsgCSN$+i7!o48ET>:f0;%6D6dBj4s1ZI=\#\29F;$f,Fn`IUem@b.p8L%h"3o3L*nZ_SL[mH**);\FZWL<G9f:ih"gGtCW9T)<7r'@,ek`*cCsb#3/>6!:oS5]/.R(]6'.FHV"[q7%c\4=hH=2?6:+B8HN<L5%ICG(hVZDt[hcXNW*JJ5R^"5'Ij`'01iVIN+I94&plD@OCWq"GJh5T&N=MLegE2B\KOR)BSSUUj1X7:3i)\;N9.SlWP#^%em*gV+Y%U-hYFl(1e[2%[@V^;ep^/+`!YT`3Pb4t:6SQ^[BrPWujO:8Y^Cpi93"rbE^L.qC3_1G,AA?TW/6I1d+npDff3L^Ke&b8[_A"-N=i%3ZcH:>FUVbY1>2/VRqUhT&")3kp"h3?,ZV8d2#o&B/_L)O[l.sb)=KBEZ&AuPu]ttlI;Auie`&,qN!f,h454pfq=UDT^3o;(f&lR%Ut<pT\gJ$WrBKTM#7NhP8gUn4T[BIkf)3)sa5!X5[jfIOe(#U[9PRL@8Z*`A_5\UB-:m7I1\8<U[+ea749$AGh3EaV8>jClY-a'8%Mek:;9tR]%\Z8X&c6g6pas`K,KY[3c#s7.@BsF+'HepWaO\Peb;/Nj)lIE&dB$+F)\1_K)+<IO!!>W?+8ie1mC+u>k>leiJ1D::C%*QmH@=@WPEKILhQ%q2nY/'VcGesl=Q:H*8B379s3s)oXpDV\E<^tY:3e-F0LB[2CJQ`,YW]"hCD&#uWMlH[S\o`Q26/s<j2A9iqi%b:Q<Og+jeo+ZAMSfhAQ]Yb,#C=_mVDcNXPih3)>Jahfqnk8ucAXE&Q?o,-p4"'j.!e.dmtRbtpM?GP]/ILj(hh51toNHfp2rR^dO%ia$[*6(HGmGdRU/e=!eP5`\o8<B_o]i<=$',lF\Jp@%7g3s4rp$bBahMAAZ5K)7mDaUWHL@U;<sHocg-oe*-J6uV!(iq#>phJq`9%kiciM6dVj-hH?q+hl(m7P7fL<<5FCC-GVJhkhYl076b%%=-F6-pG1]&NW=0>5+K14DH.sgS`QO?^&%+k3lA4./XqcU?!/$.$P3s^%?>Ee^3=[n=j.Q9'*;mus=#Acih,m+n)p0PX36@A`'t3Eg-npXPEHH'Ab_]?%UJ[@@3ZN"1Qk&V5cBOd<mCZ,:G26skp*:3KS"FV2%,r?TaAR!?]>#/C&Ni:OY*dMDl!J<*t<J*ok)*AVNMkX[j?%nn_]`RU@0:%IOF<t]m\Z5%51@h.Y+>i1ra6PG0.qA8(5TgWtoap?.%)>Tg.;aL<!["^0$AO#tRksIC$,bp^Rkiqi)7_^A6j>K^_05d%^pr+t9g0>CcT0d["oA=+?V,*hN<SgX$bT6HF$e)MB0:iU/Glk]n%G')^O?Tee2f_5q`I=*Ahd8dd:Md8N3Hu\//,*J?p#bu$\`UGIcTGEm@\^H9o^&H+$KbU*;T"3`k>ZZM9:TA>i>'j*<"Qo;lVONXk%Y0M))_BPJLSNJ5Kdq@g:4F_c+9$`c'Z]`FCH=S;I:F%L`iGGq=O5'cM3bL<TEBjiA/f^T#%V):1@Qm"_1]^27N(>]5E>WH:(9,II%JU3rKNemZHM(rA<@-;IHiWNYe<mba6GD$3]kG:"-,T!F0PPRB?JNp2FppsJR,CQ,t?,#0a,H^P*D#3K]@>a^Un>bm_(so9R\`#t7%@#jlt(Rd"u^t]po%Je-d;!Edne.Y[+/qU@O\-5e(44FSFb2u6_n8%ZLqD'/W604[-"T8##ESYH47&=jbZTu\/%k$sf`WBl?SZ$pB%2,pB]k#4QMopm(bkO#,qdV=bV>*>4uc8Im@;W,N3=[/gF^r`d\C`T2YYKps^7DFf'0Har(CTLJ_$51dV@*jFgAUiGj'rf?t,22bg%m<d9g5aq"XI-$GH7J_K0EG(!4jp<$UU#T5GZ(CaI(B3d=SN5-Q@Q=7/pff[E)Ef.>ZRSk?(Hj9;:7lUZk"(n@Ml6p"Ppt.6aqoPP%pIee]+nYtob1g.>@]Z(a0Uc5^XcR^^C@'us*,1\Z#6uEdKopZ_7KP7AYu:sC.ipGWq"0Hc8E;A;N[d)ccR2,OO-9i``.6>N=<,fp%;spe%VZ8;51\,J_jgelPPk4LAIc]AmBo0?Y]EoE(?4YVJp$=?&qjCgIR3HJf#AHi,(P;odQm"neT6Z8,NHY*4CoiPIMq[+SjZ+;9%7J[RcHs%Y1I,BBp0iCeTIB5)%io+?i@ZIfj#OX+QPDhNMg%g1:;UEMkm6eL3Yd>PBb;Jg7H;QFfHC6@ohf%E/9Td%pO3TFWA7*p.%qU8pN'aph@.H52!Ngh9,qO.:g$Rse['X1uPmBcT+P/-ZS,O2U#g:AZS_r#N6UoCEiJM6a5#<`9)dsji\=ge(6KX=C-%71_WY'2',%.2C']CAO(DM2t1gO-%@\UjrWB"gC4@ZI7(CNCXl7UPskJGoAQ!eG%[B$&_=^/b2T=#\3JFIF\X*!,Z1N/"OZL=93,U\Y]^L#FpVB%Pe;ek'Obgt>`"c$5"lbG0N*Qm6@1\aGIeH@PV=5NcgudgbeN=)"4@AMPEmcEC&0_r+Rd-gnBpl!rkkDXk4G4Eh&j=+e!=oV\)d"1%e_>#:p(:E+Dq?g1W8>sb`RcdK8("'dYFbi6Gfur)G#N_!(o>fZP+-h@4INl!Q/^%kqUP.RMMg2;=MOh&]E]1/XhW1\8'a?A\+StG%Pd5bm^&C,ph\mo_q6(<Th3u=7WS15:jF/8dr=&Z3L2ZOU6eOKu,S/=='YEh*2^W/*74hSuNolXG*s:>pchd$E.@lSMB(GpGnBN+Z%^AV3kb\EG^7h8SX<dhSLZ/8D)qel'aFQrLd[=!<r1"dpiM?S<iDPM+Boo\_,lnr8J[[b,!%P6M/;l9kr29#,Ml7ea:Gg"ZoE[Duk%3?:.=]T"gf(T5^9@cG<SQ*oaE23M%u1CGOQViSWN6pLHEPk<9l@#WsfUi<]hAjt6KQnGP[?TL>>/It^3=nK\ZKbd(D5>CcG!^3UZ%@\p[\qWAI2DbBXKl3I]'kH5qC^A.dEbhU,_I1C7Wc6(7+kob@urek=i762?D87&/?6&9$C<hNV,NW@u"M1X'G*+lcjcqXi-q<B1:%f;[O#JL@+b`K?/a;U1?_S/67B9^C@E.2\0hdbp1#a,2)^9;KYiorO8K[7H\i`5ik(WN/?QK=$,MjB%IQmpA@Q)p!rMIq>G+YmtKX%Kqh^$=ri/MPU05orECCuGS%OfG82Qc75rdV9;Fi2"_3N+H2j1$4TXXDJ")Ml`0[\q=q=d\`BK!5'Zn'!/b1?Z\lg$Z14&jkRYYqQ%\c:umh>?J]U6U.bQCS!D^&3!>fT,orpeK6Q"W6iH?IG-TUAGQ!7F\ls,\XKKeQc!)7ua$)ifc`Z3i;n?SV?o7.9K)$8W<DMZgc(1%JJc6HZ9msJ#PTDm<*r7j\2n2SR9!=OKK`TM8H6U\V\0't!m:i`h\,bfK?MKW7Y^7CW4bOgHVb%ts4h<OAgqA9XY_XR/62(V5L*'$%S.]r>rWXD`+bt4UOf9T%m?0N]N8Whh:I$5d"s#&9fg#Q;K,F/V+!m=tC*];e3i24AHPH\7]o5h);aQ[<1Sb+-a['.FXU5k>6q@8J%SJQp(POSg)QK.Q>e.L\i/8%eN^W(irr:uWJ73ip1)^06.mqmmBIf?435K1^\-*_9:OcdLV`=eEU%D0g%3f\-s=XmeC/@*?"e^qR\%.;qh&E,M6n:>VE0<8gt>\#6jYRTOmd'4+a'mq'2tTe09*a,+r^Y@ho.!L5;'#^@Vp*cp&KUU*g.!aG:E<fW%:8@0Thk-SpCI?nX&%8h+gEc?*a%K?]1K[:4B"o]\a7dYZK(M^)pn_6bG`W*rY//#F37i$NFhc2O.M/H_;oksbb1dkJR!&C*FQBWHr_QHqe48'nfEP/T8s%An:'Y=MoOuoDDf*L9S,7hpZ7.jr=gXj.q\q0[_O,1JjJ,RT5s#]%hEXDWT/MlG-GD%\?_0F6P&^pLF^2o+KS);QR,,BZ<mE_JD8a%@bM,Ws1j;fM<K*=JFP'lE1JqjDj;qhqLutqXIAi6>O=&E#+6\?bPU@h(UcLRC;b<6?([:/e]A2?X*R77KdU8BQsBEFC1HaF?C$mh%aV3<;I]J8O[EZB41YM4uom5>F=I2t:nChtuH$X@B/$JE;rjZt4TM*iGSNM%dJ@c\P.,WU\E:WgI1H5]n3Yi[Y?hNP_"XS3[%_rtr%(]=E7F9P?V:c@^-]YZ0"CY8qIRg`3\ea6&8p3_o8dqc<"q_cjc@6XJ^>2[!90"1D4FmC^-T:/n:B][U0)JH/?o^-_H@i>U,>Ul)<%#CDZW_UIE$Aq@7t*kO=o27-ml=)!:2n]e&^3]M.!Hml_*OZM0L@[8%`#j..Uc(GbEji)M6Z4$O@cd38\PLmG+TESSC`8Fj;7hZ-4%f5sE>OeW[=lDoY;f.S)]jPlo0IZoo"[tf96F;(*r2Z,U'4C?qFJONH=4@,U!%qDV'/-P%XhX0e82X-HU9*M!?Q:U)nQ2u?=lrF.W%W=$FX]PfsITF6p0g_!iT.lc]JN1R\Nlh`\0MgCH]@&hY</AEd:Wb0WFKej0c/7NYXrGUCAInD4lG/SDSig+!`Nfnop)iD.c=Ghpp%0Bbc3Pgg*93?!f^`(d"EkNih#m=DkXM-VamgmF6^p;S^2CWMV8T'JOaMkJ]_,n!)h#a.%A)lH9QdCt9,\*4>J8htSOI&/dF>GO3.%&,mt>+M:WaD786GQ,0>$jF',k].De,3Ek3Tm?I?2A9#of),u/U^'7GiF2c6>]rB13b]L"0DImpdJIeiGM3:VWiCkIG?Pm)59kYpN%A%4`(qu4+M0@6WkI*fY@RTOAN6[3&/KX[/3oPN60B[2!STc-/7^2/pkSm<3#T%/?R!?4c=hU*:UD%seMI=UuMbdfgPZlP>%*eUGu%nn!A5#".QaLU=ds3#7LQ6]4r1mJ[PO.X:*1)(_UZ_oY@2:L^Z#p\L8L)J7Pq^FJMp#nhbkj]g!8X^YgLQ#B+,2@r(DGR9&C'A.Sm%!md=Kan*#sUCSV/l]&7u0#H:A!_"M01oWg(Fn-ku2Re$*]PdjF[mITm&_4&q#-i@a$gBh",2T3.QPG6!hL+Sp3/aI<F+]!?M2g-^%/=[!QQS[WYPT'9PrMQu27ZFhnL"A08@Ur`ZF.puT1F,C39^Zh#NHVL?1c]m<`.KuMF4P"GQRbT4f_-4XOilt,F:T9!B$F#ED(PPa%B60'@QFd^em&n_IPhjqt0cZ\5TNEA5XPtKg!AeXZB7q>'FqM*)l-S3U@:FHWrK\#dXQ@ILZX"ATAc)$9r3KEk/j6NbaSGMW9UNd-%r+9[ZJ3EZc;R2mEV4-4\pOce>+)id5Mo<)E:ghi_S!pE8N&)GtY.Z+qS;.,)]5N89:b2Z__ofSI*;uVDbOi*^C'"UJO'K)+$XnE[%jB^uO+ZtbQinnO=Zu^2qfK%r<H?>Y$dc<#3Xl8;0rk3^i('31G^OQ2<Z\=lP0f3[8VmP$W(kT)PJ$4EtfY[$X(kuP[hjZo/U/q^^%DQTVG/]8Riol"JYW3_1pj#Sp7!`/Qr*=:sPdsY>]Xjh3Z;R^(:q?$&pc'2m5)0<(Zp@P^bY1f!##@P/9\#*LZZ>IA.g4j(>gg,1P%&JhF'#j*o$9$V9S:Q%KaLSRZ,b/JNb6^K>a!q5Mr'JH4i.OO.jAuV.g\r&"D(ac9Pe@45)B>&B2,2S*H;=7!>6FaUbrU%#s@$YRe%9")e-L3`hh+!+e=pQ6U"MXd1H(`%H0d7gt^Y&^`j0FM<-fl"M=3Pm$(mp1(Y,tG$CQXl4Id8fR:QG&fU7MaDli+fgAQS1P5D>RcQ%mq#ig:VW[9\[#?ASTo1umPT)i/%/bMB;c[$\q\MEJe%,-4k.h],/k:=QIUR+f$N)OctTNaGH%:BYFs?iI65s*fiQPbWWdUFTsLqq%Z`+_qW.rU3Jdtiim\,B\^7A5-]lOY=Rc*H\k`j.t`u7#9$9IO73S2XB2C.$VR,%lqB&9uh*dI!C+N%e-(L8f@oTl"+DF`L492uBT%o%':=91JC%,WXd@e,*%k>Pl[B::%rA12basRSLm8*P:TP726a`E`3B)p_c1R,uO;MI!3<lpL1TO+3sO><R/,rT-89`/hcXLT%ptO%(6spjR4Gm%R?c!iZ#!Ark=X?j%9l-J]fhi":b=W[$6nm[1YiJFH.pn#BoGglgGrWkMYldrk&FPjVV_]jBjqWp1<fQs).Tr(c"bp$%+!io^]331Pp'V?KD-=='%&+,(S\gJoTpe8K.I7P3IL?q%^1,QfrgYG[h<D"9AYYn79;PY@gSM$]:i96AMJM*%>uht,a7_bLZaFVg%+'VO33@,/*WL4o(!oMk(DOTBj`N!\;G$.jsBfm\O*LNVVjgpIjjg58AK0$`L;uMV]QaF%N9sZI(Z$3%rpV7"ihgVV$jig=RXln#M%&%q46"T>>aK5!ArDX7'qF/PHD4(ck.:.N+n<ZsM*=$E]8;`4[=bjk*MVGFGa828.?;>5]B2;2(FdjKUD_G_tfhrn#qCofRpjDsG,%Y2t&__^n7+n'(Bhp@WG1&/G78#C;;E!oeiY-db.#[aJH&&aUqYT0ojW<HB2I=TL5E;;;5+e'TQtccW4*mRlTLR\;XuCgU_>``t&k%M48RL_./st7TF.<6/3C5gXXAj*6OdW/:$4UfcPM!=UVELr5eM>D(C+7ZueTSc,thW-i]]RQJO>&PseEiTg3KilW@4V/PWAC(B2sS%>DZGCh9mDB3SQ*u@pN\Zgd/;)S\?+"%3@kb@EeimAn6!hda]R0Vl3><+#[EQ$a[/SZ_8&m[S->+e")EVm(-^i]-Cb*s,&*oqoHjK%j,D3B]@=V05'2pLOk0:Ib&\'AM5+?317EIfI.rR.!!q9Emb"0@D4?L.>.*;V)&ZD.B#r%q<MV\+k:moeA5)Umk:Xnug_K"F&j6dc%B23WZI1KW660Om$$e8CghDalB=f,!`UOF$'?sf*W]@bG)"uJ!tgYdOD3\[p_aC.lJRkh?&2m@)b$S!:*c7Ws15.7nB_6dCmWNL.!%9sa.I<,l37bPcaqF`j/$;4C0dk9T8Fm3,IJl.,Qp[TiEBf$>O/cWhAL\`V^_A(#hki=M<'m&@=pLYMb)Z#/dbb]Z;0r9h0<DML92%%I2p=G,Xi4*Y)b`GEb?/ol)6*Jm&q0D-mgOgC5HY'ARdpSFPB3Yp+)Col,qh"RMs+::F]o@]SU6ol.oQb\C8c<O2!u=cX!HhY'>=%./f`./)Se"T#c\dX$)S?ZG.7(]=J#3]Kp$$C30k3jturfiOGj3Z%O=t@i3K4._4,R1>(rEGLgH+\B[,Y[_CX%F-hm*Np#>-A8TA.%nBYMe$pnWqm<O$171@`+,>D3I="shc[`?OXkqPgcCsCamToD!kke1-3BZb#c3=QhCfh?cElB)+m?4%iK8U"4Z&WZOH^_Wh^=`(KO%58)W=1c0V]g2L5*34>Er6H*U2#<OpMe4N.ZH*HZ?&^?]F%Mmp$,.2L=G#:ZmZ6H\tcukO-E%(D691A.3hgR%Q&Y+8KUnW1?h()A8%P^QN,+uo"NJMr2"B)DG/J63n^](%,BE*Si[]bis#/;AmW3-.6kmnu-XTAOf^cTXt[9]p!UV/Y2P/bKgaO52aN.sECqe"/jYMrFX[%V/RbaL&XCeS9]S-AUN(7Et#IV5^Rsc?/a8Aj^(qG-c53JZ!tQn/98AM$\;bmAJADqO:a24PO1:#@Fbo+hK3a';iTXS\V+I:3\RFP%1R"_GE@u,ef%%H;*f"5^%WZaB`&t!hMf+N4RGj@l!+0`6^&G0p+$/eP^V;7"KYuSlV4#"GkE="2B`:WqP],Mr_b8>;GqNIaRchXV%U/rl]Or*<pK#UJB7tIqZb>Q>O?]/JrFbZV9WCH-k]'_+lS%d:UQbM,>\9EA#9g3?SZJUe[M/R-/@E5aHm#'Wq8P>jIV-1%'YR=\H%00<3*5AZE^j+7K7Ynei1?"gN_`aUmhl+=+R9P>gT3saLS]9*C%;Z2#ka1kXiG+@Iia/r[MMVVV*Wm6(\/*s.XVBsZcqV\u(Klg^P%+5cIL2:D'G9@]3<LD0NoD2%U_?X\_&'a.PU2?"olH.liAA$^>f<^G?#H*+]1aFnKMG*;*kF!cq2PoM)]/$#r&T\ALf?#7(%Ha(nS%3#:<gdEU'\5G^Ng4&h2B'C1"Hr`jP:ZS#k=.AtFi:A[/lk]NLVadHEr@WJ?'MsQV_9l_1aiEf-Z[n&PZ6fKmF2qZaFFGZOT^-;;h%jD]sGjnR'fI<2u9`9m>imi$.>FJjIT$tlR,E.=C)H)V:T0-[^WmcsKI3r;V>2Uup(j^C'LVDF,4jL[DG=&%lKI$bqTl-+1"7X<\#%Ra/"#DVN<(lY8Je>eKl-qd$5dFC^MEf(AmFSZ:qu5WP>GZ:-Y,Q54b`C-&\D)T>bFXd[P:Q;/Cfn#)W"XHq/nhOY1Vl-+28ndXs_%X/7\B?(C08CGhZNF/.PQ\t<^uZW]DJe)kkQVH`N;\)5n<g:!HqbW5>!p0CC*2Ld'cTm!N71P0Y[;g>?X3\0*.^X[Go.CMl,SH4sp%9mfaeFB_UYj(^X0)QUPOe!\fgn%5%6$ij\gF#BNAC5H@0r#Vm&bg_8/HJM(KS\rUkSuV%FmE7\nl-+sWHK4n&VK8cug.sSs=Y63+%I=/X3J8mFHeD2dddEt\>[s5#^;JEe5_e%fUT7aB6LsJbsm]tOF^:L^)/^Z&o^@/,/p+G.JBc.@t6mn6l\t+q]-I^AIE6/0m!X4L^%B<+cF]&Zm,\@>g>^G*&qQOq-/;]B#SCtC!)N>.Zs`eI5Hf.L:+9Ou-7&^`%Q^+_rCoV!s[\CfS#1T0#oATuPXcI^iccFIu[P&GEd%S`T6Z(TqM<>[DJa<QX@*ONuA\$2a\Cl:#p/buM//F*#N`D3i>p20Y&u77<N6YITjE)#K6ZG/!*6XF50"kg&#DdHk<Qk?QE4pS@a5%]!&HMf\71<fnJ^3DdCNg6d(/=nu(S!&%\FZEUTS7J"e\Z'Kk,^i*@)G\_5BsENV"&hSeBa^(@O$CcgE[',dO)Aa3(;amO'!!mLY:%Z(;4ARVFipZa6@,epFDU^KVIsl#oDp;`X1LGJ+q&5WS6SF1iM"J@XF^D83=nlb:&3546-!Jo2:03=];_I@"nXh<eq]7C0>$Yn%/Z%:t@,L9e1pgCY:Er=,"%_G<cuQCE&K1_V3"?J#<>l@!fH*)"SU:er;H6g+H#r2U+eWGi,RX*pUiCOtNcQ>Mh_`)i7edTcPaSH`9\9%:-ROiP?8&i?g[.`6[3T\]gV3jp?srOW7l"Z%:-WTZTB<sZ.mg>!Lu<C&g5'EosSTIMCaEm-QI$4=7tE=+i?c"]]#fG(d>GXA8mfb%ht`!g\\?MWNk6m]ct%4:[eEg@G/KkVjl6h[-o7<6_qeX:b&aX3Ed(I=Y4Y3*9mO@/U!4$jqRRq2oc`)FE+aCP/%XbYo,I,QSna:c%T6;lhIJm+#*38;RF^Zj%F*;UeDB'\eDS#3BCQ4U?m&p./<*sla=q87!3EI'C(4(&hN!KQ!0D1j%KY(@1&WUucXJ(Hlj)iKJ^+O>f%qKB1h-LIf];@p)j0hd?B-Gi2X9>:/FAJp]$,,Sc1h&(u`XI,J4-N,&-Ei1B8AR6q2R*m-Z($`59]-<O)O;k0@;oBBo9T79k[W1EX%7R^!O4,D8>M)LZC1WSuVWo;dm<.9I0BQ@57;bOb*@NRJ1`J!o`@OQ]YoL?EOY'\*_[._ODq`C7HKid1*<9)]<4IU#++/Z[&kdj9>%S+;_Hf!oJU;qZoaU?^FB`YH)G]'@tO``:.]To#`>k4iK=%op9m1<n7'//FE3O!Xha]\s0]:8<e\B)3,$i)fRU=8,^d?7UFRQoujS%L'OW"27[5]Q`^V_lL[i0<*'Un#qYubXW),W8q.@U](j^ZW.tab(ZEV?+)+WVP7;)J7)Z,!O7OIaGMtK],.puMUbJ*eb)EbK.oGt(%hch96Sok]R<qihP<MW55QV-0TQI6o+Q_l?dr/l;d+Dn&t%#7Sb`b%b)!CU>USTD@t]T08j:J9Q&P8an*S3OeoPs3\;XK`tPD1f3A%aB9aihYNkhOQ(WE;Dh`oV%Ms_h*$?+&(X:pjnjpQB,@4(7.4X.0<#4u(!.`oZZ"6O/eXK;[.T^&7jOXL!AU%70$C8_KJBqQUXQ1n%ek"I8^%!Z-jG=U=kAo<&&=!^beKE["B$M>C?.`b>SM:m<3G(g`99Rl8<`sSPEO'_bMJc%US-tf%qmr1!-ZgAHAoX;3.bSaBZCJM6%Roo_WA!8KXG#`a@P:(RQ8orXY.8n:JNh6`<?CQsNa]bIN]8^`3[-5rl/hNj2\0h&A]<j[$]1uMlM)X`5BM7Z>>#Kk$p;S$#<V\Kk%d4\gmfC)Dd/sH@gB.f4YG0%M6QhPWI@k6tgGJ^&3C*_R+ZJ/BNp[TpadAf'\CIcB]<U=>3AA-C$f'h]P1X#Vn1f5"GY(tAmSJ>d?%0BNtVXIg5?'*+H`a7Pij9U8dBQ&Y2nYgtLn]uA'`MG_9-]BUs`gf_`R?EnOb^/!99A"MR<AV]a7ZcoF'Iqou/7]H4GreSPL:Vk8=%p#=nAKk+un=mU)ZRscU37Q"5`7ctb)\n%ahku[7ma,]#dY"P4cqU0,d7VXk5"WSPo.-8sMF(J8Wk]EZ+_u-Jan,98-ToNo#0\gG[%HHXM:^mo;i#o]j[D1EM*b&.o7XQ=Fd8H$]mNYHQI:M1o0eX9JH?u+l@B&94LYq<!Vh:;S;5)7(V5g34;TZunH(KH!'CB2uXadZ61%\uc"_SoD2b'qj;"5b,7=\dD9S.Q.m9E?FOZ<Iet&!"m2YY6%\fBs0Jf2--2I!P5B6<+=pjWW4W^ZrR:-?*=t>ZTbDF0BI8),MOi;%nnH,7+2!hV/Z\@_\WkG)7^i8#asYc!fK1Ln?cqO<R!==3^Q`[8IcUOIV0pkg,Ob5%5$.J[mW'bK2QM?h`E@@V,*>f<Yk>,I]:TOT%^5oUo>i+f0l>3Din+G-<D%C8H=l&DQffl6Ln+F$%eShLpThOnIZd/uH8)g#qlY"Lj[V%sEENbuj-h$)%5Ppup9'0m/Hi9Ha\b;97%[Ct,:'A+_,CO*+UrQkt`MllI@drf3g<kg5(!&;1=c[J,k4&i]"f?^fDdI'tTpOmNl.;O5FoG72tfq82=XGQCjYFhqj.q1$;LO9!d%e&!&p5\5#?T7*YR\dNhBHi;12,ZW7Hm686Ie@]^AYFdrlPiprE]mfY_.N[2\Ft%et<hsV[YFgZPWO^PTHTM>7_nCL'0dQD#qWZ;l%g:08!;""!tXF&dH]mf[aqC.rIj1Tp8)m2%5WB8r%Vq,dSnY5!4X0(j`ZR6mh@/"WDT8fp(7eE;?j,;PWEIAq$_f^"&n)N0e?9\UN%WVC:5c*;GqT2"-oj)3VfVYBr?Hh-C=K72P@B4\t&elNKnX5@sVcH@_p:1EF/YFkc>Z[N_,p@nFJWGRS0\%Ri@ZV;@hp[RW:I$@k6%G/'*a9bET<kmcs*2)`((cWH=@gV&'I`:hoeIU^:Cme?Q,V,DL2MXGkqT=p_(_.+GAlXt^Jhp/,X8b`)KR-Sg=YFg`af0.pTB7Hu>%`qT"?<J>58QL";AD-m^T\^aK.AZ'nRel0]E>Q(Wu3SX145PshR"tR.T]mfYoSI@NTXmbp=R2=,MIeMsA\\Ha7qn/bs@[kt3=i?Re%h!:jf0!ed\[ba/\\C]&m,;_?0luoS)]jiH[YIi]XB3u3#=lc.Bp!XH"GcT_j5N_ef/,d/1ekV=j_`4/sjml_B=$FjRp\JT:Ed[u/%VRk>F50`QhZSrB&<LeCdL_]<+d_n71g\GO7pZ=P$N9<f]M^KtmCaD3O:@6bR]Jl',lF9FJ0m3.9S!e!Vi5OK9KIWe(OGTr/(a=5g%i"UKDkp"OO!nG"^Mf0])Q#g=)jm%pu5)jfl&ZVc"*F<@(&k$Em9D2\($pFVSY@P[l_X2as'`SUI$\&>Sp2uYps/cWun$UWBiR^RP%^o!--8!hhWGO44cp#6;ICkCoJ/h9_SMo=DkeuR"biGNaeg2C5:O5J3u(&R_:)LNSik/0mWkFd*E0hRL&Su..hd,_CTrrqPq$$YKX%]K-KCd\/-,pj>(`$a7;C0?j'2OHsE!f61cpRuIY[,5Ro&;."e`d1\R.,:\D*!`Ad[SJ,#kk\`Ta&45tWlLA]LJ*4BN[ek*?<*D2T%R:Q4M6.^em\a8]23FBEod:IBN?`^A9f-.a%dc9M:>KHPVB.0ERY(/q78Zk7u5U;u&T:6E#'*F!$4@8X++8RP/MCTT4S`&GGs7"gf%*_tk>aq;U?Xo.4nYE(/)cfO._h^UNoY0_X*b6b=Co]7UJAq2i\oPqNn1Y',(1P>J<cu+`0U,b*gWYl_R2)@:(\Nk/r$'_#3K-u%t%B(<!LpV^>PqZj[mo&Mp">kF(-Jq%l@Ia$4.5dj7m3du="c.=p^(Z7FRa^E*R1IG\p`1p5MepHhpm[N66jaX1aPOfTOO6pWViMhQ\%_16ID#un8N'>sYtgR@0DM+B6dBK&8).;IifRg@0Oa:QW;"%Dtkr5hHJeLr>@ZPi\/M.$kR%tYOCRDXYd6N43PXH]^-'S*:td8DO"%We>,"B4NRgrEJ]LrWFF5jhnU'W,llfUduOCLRf[s0/?DLMp>`cisEf1MK/;(<Hu5BQ!^%-eJIl:nQ0%GED7o9hBfI-1D0;JMAb+G%C,)T2KlB\(WZ^t"M$T(422]BnVVW(QTE)$:,X)NiXI\4q0\kE=B"6[#.&-&[O?><>OhF+GXfRG3.R`W'+FEVeM&I[;h9mt04$>rA%]-X:lDXT;^<7H6R8!p'M[MYL16Rj'gOS@XkX%95ZC$o*AEf:dHmgA*n=!W:EqlH,:c?p(d-'`%mU-<N*kQB*3's:P3bhrLLD[Z*D%Sl$UGf]CB:T_eAPqT:`tLVr\(s+We6+u/hLSGY[dXkn-ICp`&5RD#&JB'?'i^*h+?@iQ/D.btl&"aj"dD#XdF]5QnN[RX59GM,L.%]9o>M[.9+e6'RF[3V`2KK%TKkd$-X?jfb9_jVOo\bm3o*P^E!qitn;;oVs`/PiQ6E_hqsO>?^uol&e`c-sFDQc%)oaMT2<$dVmad%;#.A8H!Uc;kGY8MWticFU:IF=N48E`0t2]L8Dt4f_ofP-BM1qVT12\?,n!N;$Q.D[+uqcq3MI%<h^(RA&drE`TNq!#Bq1cJ5FF4.%$7<s"3V6r&"R5D'MtBJ41]+BFblcs^=ou<%BW"H(#OZ-q4b3\+>1+Su;^3!24OU$(ZKt!cD&*!oA&RHG'9FU,+sP08X;L.NcQr;i%*tF/!"\_&Y:b.!RnpR&AWY5Ni]g*6NU#?*Z>51H+a4E2GfG,NB9sH$76\!?RD@*6_nX6=\Ohq\^NNF4!PI%,JmH&$jl.=kZ$fpI2%^jr=`U0hu[:+I7G%R3$'jq$CV]-V4iTKE$9p6<Et&@#Zs!$YT/4=r&f\jhC,(9P/apt<JLp9[Ha"-_/\Ss`'T/d1qSpfrMF5QsF^%%bRQX`7*10?3)bhksV@/7RR]Bo2gB(NmgM=0-noS'LSB8a-HEKij"13oPMuF,6#08eP(=hUV&f>?#r\fh(##ES*D9X$`9&eH%95.%0^U]GE_pm^,.Y`b8+oY4PjF]lk;.Ya4(,).bEgOE\FR;6HjH]IS,m6lEeLMrV<sJma:S8IJ&_4a>3ER6Rn+5DKMg/b4;=O`Q8nZM%#<G:(J2@kY!ks+e"NnSIc`0j!#c0sW+i::G#cj;-Ka<DH4/*W+]ZfWCk3NS3"J.lgptU@cM#dM%&qQZZ&j[j1jA83qe)K7a6\<c`%BoYabS1LA!n,LC+i_0JO6DL?4Pif/>&dbKOBuUD;W>[?O&X"VR5P_1uZ:KXoU%P,m+k/ZfHaVc6kr;l.eoK,IAuoMN,.]cfl?<`]%lMtZQ2XWrf$ilk8f,t]1MNk\:3DAd!)_l-"`gU9&Kaghu@MU(kd/e%^=Mi$2khL#',_>0L?L.JRg@mml.rFrXN06JGIW[Oa#M"a,%Y$EfW[R4,mhcS\*%[.R[Q,gbRo2p%V5%o2"gm,ps]CT.C&qgVm,*0]KYc/+cE>T1]P^(E<'#]eMOc4Sf/gt-9_N!^L"DgA+Oj_cr%+92^b[V%+f9"JVND"gXi&A&E>,8m)gG/Kt2l3!?#@kVM.q5c<=b@4H;_`Z--%fQ6sN&Er/aDNFm`A[1;6!I7!1)6'.j+r]%-0<.W%0sa6I[\S']EJi9G8K%.;78(H`W8E8Y1q+#P1,pa^4oK3i0dK4#C.q]X:S10dht:A$`O8R;37Y2)@mmWo(WXoW3[8,(*CjHaE"#(*%hB1\.0.8J$qLa%A%h=<4m$\OoMn-6'k3`cZbf.Och\H;6-jJqRPEV&"48a^!IsK@g.H,#4ani[_rD4moa/A0X-F'Ec5rKP.Ut('p%orS(cP#,NDo.H7A$j=22N8*U7X<;/udWcU;/`pe#W_'7*0NTc>6LPrP$&u91oq[gPW*U,c4V/>Y;]p=^`(7'.*pC\_]o@o+ZgNc?%Ck!C*h!7<WQjoa``nQ02>N:TsF)D<SG.BWdX'O`j'%l(4$Rt1*>ErmmZ8"]BTIGWq<1$>QAYdS(LkQ*VV?gql#aAgcpcWgp4<1AP%2s)hToG4c/C\tK'ke3C+!RV=I`tBSiJOh-dMj*B'nXReZ1KSl$XWN^(ER,)d`4rDj8stYLQ+a-cW]sB;,`aZs`iYOmWo>`V-/5$;%821QQl<UaEYOOb%rE?nIj(1KU*:C21?domM!3d:?n6#QJLEJc.d((Q'W]dKuin*SJSHSg7r:I*:egPCTmC<1k]O2F&kUL(f`_/sn%8Gl$&&W#5.BnaJn=8=_7,sEO9oboWc#mb]Rb+(72205oG]7W)@KQ\AohF0#T3=ft>6'e2[<K]QhfK%h.-88UFNT&pp5f-:AP/F2/%6;1AgA*GDm:A!Lbq:r&d`tJI3]=JQa<r!!6\sHl:6_YT6ndRU&S8l[eZ%`R9L?X^*j+BpWN4nfb9M[d:$UW*b)'g7Xk9ZuW.'o-t%9k<o\Peq]!,e-_ZXnp!ZMHqO(jZDDMs./iPXMB*[*(_JTW>+eqhQ=eMq=T.124So$SmtPOIn#UqPQ%pE*t4Tjs&kYb^")RZZLk$-%aaBk.G*ZT1KANt"nD]EUlj'^c1l1rbBoe6s3E!?^7SH7;5)&:#k.f)]8tSL%X4`qoj8@i:q<*Zas+$$eMtRba?``(5n\qG!_\]=)%@d).(R#=dq\%X9a!M%"qr2%6BYUW-rl]6cO3]<DC8$eZS"NldZ_-J\(pc;!to$8,KkK6.:QWt/%S?=PX#fVoU/!_LiSF\bK4S"2%%Xr(M.)14[WSL#,r@4@K6`PT/*H@#";hB#pqnQhh)VnRDIme^I[:GlM?cTaodOHS$_Pni")7n'9PYe#WhBt%Y>]U<6nn;)*Q`kK/`%HM?Ao;R@iNN4r=J`C]tTg5Zr3If0[!Osg>=Bgi@.R1:C&XMlIhJkl'%5^_FdQZCgU9Ok5]>%];*G0Kn?Pe%.^$2itPU!uLZ1%jp_%)%-<Kre1m^]ZI.WgJY'MVLnc$#\^\5!AbWtMGN1_<V7%SJSUY,S*M=T\1p8<G6i]TA$?PbEfr@7Zsj`ERK]\i;$*gsX0*B4%iGae%p1L%#.G6^A8q0QepQ^pto4,jqU.ks'g)X5b2Ci?+J,ha&'NKs$nAGA5f+@&]N%r9?H0SF$<@bW<TNO>AB7,k![@Tp#XbkIXie5?h%^MGnlN&($cQG'l]=K0:c^"^4r8o3C5,04[#/.B;/k7EVGpRTG6B,&Qi[t?S$8AG$1"sH_.kRKt=j'>LNkEG6_NEundf=T1B?*-=M%lI21<mln;lA&0Mkj74jRa.hIU;:KKZ!j:(R)+=omWu7]b6.$flE['nQaGs"a>nd+)?(7l47?:k;miNj:Ug1WIP:n<3E3BKYg"?jI%)A-\C)cRLE]b*=>P4/?OmYD&`PRB66[?,'m#E'0$\nVgKV2tpRWYBr>i\bVm[`>42@(ajGp;oEg:0@05//=naQ)+4^6-qhO6__i&%nr?Yq$qpr/LF!@h]""sc13i&XI22ndco&s\;aS+74t@8Bo91W.Y'%Oo88Cqf#[V*V(SmdMhSdd=qMl6G=)l>ecdGD:$^2e$[IOgh%!"a,g<IR:35N\BpNuBC7XmVi,UMo8ESU&_h5W#+*S2R_\&E<%6QI(9ZcJH#TAS!1RhQW/sT)#e[=O5L-@3(7ST3R9S`+?.,FV$&D%LtY^#.k44;.,/OEGT+2gd+P.LT5%6q/"o'uib/#d_^obDXRV(9bdjZa^c4Ls4P/t1j3TI9k_Nmr/RA1JjdbAg4(Sl#A[@,E,fb0>%8QmH!><ic2=EV0)@^:BU8S!,K>NIm7abCuGhR+WEbBad-SlHE==AXLS6pTVC!tdRA="4O?QSFn+8V!>uKOHH04b2>t&_s2Zm?>un%An:dm1u#E+FBb8/`E*-d\Qk._QW*:eMfS'5<A3/#Tfoji+O5lsM!e_2OfEl6'WKl.2Jui6/pJ;AV$;U(Vf19)@c<W;2hQga/[noS%c/)-Bc@'BJ>7f&+0pf@&0We[s"AudIolP!.Y6t<<1_WYahJ.6=*lDV.m)!7laj*",=ROgsZ#=7rH^O0DA$+ubWcoIKGHUG&%?!@'%%HH2#.4og][+]@T>&B8/MA.kAKIr#JAss650dDLjI(.dBI4l![,uMlL;mf)!0XgCGVJL%Rg2RsNT:'4Tr8N/BX+N#$T_QXTI_V(o%;N"TkKJ3,ih9bkhgU4Hj)N/E%M=0;?QTcO/g&9ciWOekDY1g0C=ZWQD><C@5>A=#rX[Kh6nnJ-jq%%Rs*r0fS+Jt(ET#B)+b"co1%$jeXjk#0jJ<+@s`f[i.]I2,-F@&Coc>;=klA;n]9?XFUY>cI'p7JU]_=%LQt5q!`#LVc#+N_+^9'0'l).%_fN/GlK:'1N[g^fHY=%gYXcN\d4"pr.gT3e3tdHIMiKh_5d5DcAH<L4ZC>.:7On4St!'r*2K_];A=@S:PcP=FPo1WGt0"GT7h^jBO6i\:Eip;ZoL]Kqn!@P%@<k0(%*rKaRji/Z-SQ=IOJ5[oKD4kJnXHRa(WInR8s?h%e$K[29?$%/lNh7thRZ?t"ORXL7h>-]:a'lRR<105IrtTcr8oYEq.>*H%.&Pu209LHm[AinrCn#=jC&rs1G.[F7-3r:f&s1p2Z+pC*\VJ.2SV%/%!N2fLW5:>r6OP.k]\7se8JBkW@`@,kR%YPV-cD")UpBYR%Y,i)O[<^G&LXII!1`>9"(F/+(SlobY:P9gFAnkLD/3,QCAKBUa*c%9G0]-HTa$&"FJE8EL4moQj(Sj`K=\#sSA%hZp=jJh,e/:id%bEKY`NQDh>^lucG\XK2rCqDCr)G]RgIh1Z_dOY;e^jkQT?LX+Wb"Jujr5#,*or]ZqgNpuG[m'<bg<'8?=W7""_s*sQs0jqH*^*f[%n'=V_Zr_(uL:5.Z&G1]j6Ygo]7LNF;k[E45Gk:F>VglNIG9.qo_#L/1G<ujS+dGCMOIqC.H:#lqTCBn9iK&'TnH8ggQ^@5KH=,M7%D]_9Xo8kf$?j3-RXtpBQVnKhdMG,<o*).rElCNb++@8bR-Rh)&KY>LIE^$"@Gsd9P^'@WMRk?e$WFcho.[!QR'VWPn5MI,4.RCtB%0S5BW#q6'tOZ]&iGW)B^gG:IJJAEojYJm>#gG^aJ:[eFf6R=nL(FG_H#S\Fq8P!i+Jma93!"!4I)B(*Hp.dsYR6j:Vf7&QI;+uQe%3%`>&,bX.ReD=>7_50].MJBnh9N*cAL`iH:8\i:VCk?,17X_^hA1A$gAG`5I#SRBjYMjaF<"qiaS<i>4T<WbF[.4-,6gg.-1_fj+%d4ftqpM&M/V"@6@+;MR65q;U,$5Lh5$&TmOm49tK@Wd7?cNJjR5;E]D'kI1gX,9TEX,:]=l<U[7'F"2_:?ejbr+t7kMrGBqUUS7c%Zb:-u'q))YpP_en\LJ1kV7U@aWesVAVCKGG,?"_M-))mJ.M5Ymh_S\@8PhLAMSbsI0an@h6rG(h6=C01W1DYW6;`hY'T.KYh[2e@%VC3,nf7"HlMFsEo("^0Rgmaq8>(pBN\l2-@8;7/I`_l$-](R#0+Aro"`"In@dW6a2eF-KX+tS=$J&YBBnS.BgArf1niRq0l@J37j%:`beraGO;O,/lnD8%G?19CN7Je;b'X8RMQ87;Bl@GpZIE8I;'L=OSY_G:>En0I10-9HB)_WS&Ma0PVuZ*[r22A(i`Dj@Q!J/jYU$%YN7:r=^Co`![Xr0,-rZ^G;9\s4_)9S-<V?^RQa=i8;\4j]eFr5IOYT@lD$L^(5Orjo3,l`!X"`T9>S45R7nQ-'BkUpQp4K`"?qEE%.FVpui@*TP5?"MUoYgZqnuX[QI?P'WEeY3W!I+[c/RYbJH'Y0;/@)@M0c>QWbT<Pm4P31%9_lilR6Z?YA+6rQRp].$@/`jk/P.9k%P3"6d8KCYm1d7#A@ne?PqSr$;9.']AL*<lP,/LRD)#D>"31*m4@^TJuIn#"@^em]on[BjkfMk0["[O:Tnr:ncBtfk1`;H%W(\M!r%BCa]VM$@dg!q2%gB87qss+6Ih%#$Hi'_6`>^hDY;oiYSl/;7>!%]aF->I.u-[gS+SdU;--<hN`@PX%,H$(1br##]t,(N:]%E&/3\%%HSILJkpr#@A"W]65^gI'hFaeB]p3<brMR,@'W<=.&oDoJPuVf,R^J8D+0Wp&uZ,`5tOs*UNo06$!I=W!8f6O==-=RJ6)aST`e)@%;,Yf`:Z+$h:Ja0kBNjq6\:>CS#tQ*DX^SeLE"%IP+@[e(9;_]&bm#+aQN@KU5d?4E-&,[_XRe8#.$*Zg&IDm5Qc4i5iir*+.H(gC%l^uQQoME:*HNMS*C%b)m#=o%I_XO)c=UO;X7aa`a+bP)8@,7]0`26Z(LK"TbO:lX@BEhGYs4c>`mT?q;B4=rHn"KauO:S#0i]!;'%o!BcpK0>E+'Hn@tJYBFSB7eU$^s8(8]:XD@.^HR1n+T6m@<lg"9BuJg>V(=<MoB.*Z-#(I__B)ALrt1`A4EVi?8`F!3[d<GIE"_l%G2L$Qr-\A*]uC;tBP0m88g3RHLc-RE3?-PhCD5"K5"u4"l97]K1O7CEqhb?NFoYCeV=LCBP8Raphe#HBYt^6h?^"/YC:kUeKbGnf%XsQ#F50\@#25.'B"c0IKl:u,'QP5R"X7p+oLe[4k@]D2@#cjZ;A[E&W?pYZ.l6;ClCl]O3$!g5=Ut9XKgD?[m>tc[eZLa<c;ju(`%PXOWT7nk@/'>']64Rg+`WERqS[&,.q)/pJaY%GI@auOF'\s`^K.;-Icl=q*)UmqZ+WN1;`O`Ddj>$!N=,3E.o`%L2hC#[qoY&*L/%&bg!@9ADtZ[h>T]nQ%DZq$sr+?+`O"9"s[G8f)FCMpg$bSC4gVbd<GCBN"GH/6@b,8]`:-U3*YNRZq&2/P6feVFenkd\:ig>[!@s%/30\f`R:LB;TWWY/<t[2)_\u&gR$gr+/6WUM]qY9)uI=qKJ"J7Ut/^m;V/)57EPe`,'C/@>,5-;L:Yi;f]C&UH,t"!6u6=6&c4,D%55`Rk@QARs8k7Q+:$?=iS"uLK/s]HIEbQb@Z)Du590986A^r0EPYT]8YcET)b?X5I>iKOUfC,#`P]Pe-FYst1;U0uSeC@e`8N@S>%;HIqu,3<(n['&Q.7Ei<hM-\>Z3?0e'H0g-l*3s.2E4t1P@_SZuZ&?)U7Ei6`7I/s8EfkAG@$/$&!H:q0X`77jW\kZ[nL".:$`J4F%GHl[%Ug-/:;AT_>7EPe`,'C/@>,5Cg/Q*Am-n"*Xb%Y-4TU_AW-ms2CJD,/BAa#+B<n1$%k\96df[X$a=E2T/Em10&jeQ;%))7^r%:$cn0E(*?nS;9o+Eag8/;R;qH`%Esc`fa\E4B[%ZF>YAtW_;/Q2aM1f=4:n]n*YC''>']6(Pu#TkpBeH=48).CCW@pBMIi6>2qKj%E+Y)d?#>@>2I'kHX4_HSE^"SK=7bApk)ANBY%GU@bW4(-?-S4aR'WM#]:'J*f]'l0fX8@O9u!1i?+/XkV=1/?gPXIkG["=XI(sc,%([m]KekuU?e?s&,U?($fPIal.R:]S<;TmF,Z&i.R>Xg`QMe1D4jW_i]>qD]c/XK:/lXC1.BXrY6>/]ECf0tVKP#!%!CZX#DKDigh%b632Mq`D'jWh%_KX4g-B0HK[OCLWVDF"-Io/sa@LN*Ak:ce-1=[Yh&/ddYCn'jK>P`*?t9Z&==%'6C/7`%I?Z:5gAHT+&(7]:@N<%;*2%@jjln;$*K9?[=W1^iAT7oG.=SUhhh0'G%)7@C+&0'b)'CTY+4,W_bTN$1$k]`HZ<4*D_K:#[L'!G+hLo[3AD=N:@)FujhtD+%3O+KrPnS4Ijhrbe<_gkmPnUc3=Dc!BYhFp3>A76!&Bon8aq2Td86t7^5'F$@VM*<h+C_/M!T\'#H55Lc9eAHrILBF"RcUKPYTF%$%4*ldEKjJ?P[D(q_!,DS71+XJHUIK^fZ1_@b#h2k"4:m,ho<FagOS@LGl%4AsXmR`VolsKN+kD>@-Y)i0m9aeB_snhuRo$,b4t`pk%f2`Krd)KibjFA7]_7(T&&,_Le6<lp+%>[cNs'Ei`5k.jj"==lZAjOiS3;@hH$nOO3+u=_`hn1,5N-A[\o?a=XFECJjdfN0lHTfm+%C;]UXDB7tP7%cEe*t^Z"OmO<L49]4gjIIHRj[`l3eI`OLBjESV@eB0G_T$B9)5Uq>8Ob0S5]G,?aSX4djeZ#$B2&p847tYs-3s+(%pKg@C&]U-Lf.k=tS='&f>-X0kf3W4ca(o_6k\\"n=kYp@,$.K-qU8[$kY5URoi>h8I+Ir:5P,k&PXeNg`e'Or)ho61ZC!G.Jn*)B%'ZS<b>$<gP<jQnVa)ELS>`&LRMC)`\nC<1G4V;7;24-]uhDqit]\g@nX->Pif(@>";jVVL>2HlmdfXSIlfSs+k\IS8+^:;B;VI\D%U'VYomkX('M\bL+E;iJbLeVFGZBt,oc^Gn9Vd8_ol%n^QM(h++"5t4e$kiQdE28Y+I#cHimn`6GFs,)VgEB(3XhlGi3u?sP63'l$%jXK7"HDp/(2W=_lA-!!^R<+$LIdG^<PS`R1`?9"J(q0D^d#9+<\0*'@JG37TNM\on,0/n7`3IqRLs^O`D4'Z4'`hmPSm8,4;TNQH%6p=fa>,AmZZ_E5X.JJWt6Gtm/ZBSbeF+d.SSD0!\WsJ$<!mM8EO*+aJ3&:N>J@p^Pn`G?l%Tt7,+E,QgR]bck`iZF0B0s/DB%X9<%'Zmj"piNT_S:L3i(GTf0PtYQug,PrTd3D%ObXt:,3(E+,B*'$aX>6gYZ]`Wt!jDNtZ)iQL<,6ak6!&j*2D8:;^A/#_#6+&ZBE>;2%<!,.eY6ur86<Y-S0cdGbk5e\9qa;-\cZmtgN>t<##;Y6(!$l]$mR#cKMMVCV/d3&h:Ir[ln"fX)I)@^3*Nq2SP\1BP#Xj]o15B1$%]^`#6jc"\*o9:;-`,e)MEf,GBZng=A@ur9'Ue)+L(*p]WAoAHi]o,:=;g4&Ic_&T^kZ$bZfQE!<6V<5rTJm$_a[IqOTo%iHhaLC0%,D/3aF9LJIjA["Wh2-t`f(Uh]Zq?+E=U0,#3r&Ts+^lm338:ILnNO['ZkNLcfmaqFeK@\L%(9GXV@_dfJK7S1J2$a8>Y3J*e2#`-%LpT0FP=jeX);,h59qm5.7?Gd9)`<b%[S#3I<(cUb8.I(8!!jh7B3c8`4!W3WfE>Wb=K?F;lWL:R\M_;$+f?u$8.S*2's3G[0Tg,;%PhIoteZa<7`>T5]5^LgiiC\a<8D<$+EjF"Z12,c,1p*8[_a$gYZiTe%!J%+kqeTf\YVBY(*(NqB-+'[CZm&#fcNG^d)kL8M=pUj:%)`u_Ddp\H<k<`Y2lH3AN5`/9L_XWXWec%?:J:8h]X_jeJ'9RH?WL1*L.5n:h,6+Tja!c/N+;p!f*:Ssl5dkh\9osd'JkfS;PQcY4%`c+<mhiNrd4'FiLeYH]<X0HTm7[Kkh/Nk<jUWaoLB,rprX@*QqXr8+r89G)<NO&Y:>g[\H=6.`R16.jF0dj-+7]nMgbPYofR<t>2%Qt=G'1?Gc7rEQ3_!;07mq_?:<?M%F]\Yg\7rcpUqL,ilg[BW2NNpQNtqSOT'S=os4h"NfK,2ajA3RNG\\]60"OBUH8@j&&+jKgPT%.Of59#GAJq3sDVR'+YW<F\b)s$e"%e=2U,L9's9'L3'pX//W-'/%53U.K.^.A[[GD*K*+E9\O#SZ4oUQMN^FFaB,Z?%08pY8JW;<%XX>FHq,ouf#@ah$aHbJV+LBHI_h@=gGB1\a;V>U?d&]m0fGlU9f!B<1XMhi2?l[aX\4PrTg5]EDPeZ#gZX'4\h5hY@W%DhKmgIL4%6JV8F`Hn)\P9VX$>HFZ=)j)7"'^XQhmeVt6WRO1**T-YQ&"2(lo=@(_r0MgFARi7;'PIHPf(UNfit"B1BWR+b<MC.g6UC[&jbGNF%<a(Bd/KC>&BTO&E_:ZXT<qfK8J:-6hE^\#XlmF&Q$V`VP`uW@#19AVQ'\JII$Oi+$XCeUjZR;dl7uZ*tit1,[Z?7jZ8t7_PKIAbg%'/VGP;jFq1)Q+ed\X<d0B#?$M<^";_aR*sc:*SD]`(BT!+t+Cq9!)b+4_Zo7>NGJ$<^66DmIm%(&&5g"),r"u8b6L;FNh$e;LreL%.T-^A9[?&^j?)$5(Cg%r#'S4Fk_Gm4eZ;;-PjA]"a1pLi/?&fi.hZEuZ_Bn5&8a^-,rp/+YW;Y09L]HTgsD[gQok_O#8tt5M:W4C%laH?;i>XGNfaoD%G&n(?JQd*OZ)l7@XLoOqBG;a'1\8WH?VFIa_S^?+B)pMB8I6!m<8`>3g8`#)+`I3[%,E9L8E2TbkDMl)@@ubN%$A<WX-Q3h_^tY4/<89L_-cBVC_ec3ZRVWTqH>BO3;+>J&m?g]BL<V`A*lV/<Og.C*V]$&rq,Bh*lC(N!/B"I?Z)T`4pDk2/?(kaI%9/nj(f%#S)>0h7#P<bp`Zfr@.Vh9"?+2[".5_CSl43NIG<2#ZO&f=_c6a6u>-4o.W7&7fSFp.&b#$%uMX,48cQjTKXXK<Ti/R"%0%%7@?R32`gA873<8f$ptF_g$MB[5l_fVZmP\7%B9G%7)@G'^.sPA>lVP6_H<Go(&^5$016iKH-*/dMm;$qXU93Waj]TD/$e9`F@RS%oe6"dR][<?@#f'9AW2gmhEC^9-Md)3qiN,?3$iS[lkj#/0rLcsd&?e)bVJ7qFpU0do:p+11dMeMWe*TPUM9OW+TX/,WZK$.Z#g)H%/iC$G^"p>_N$A`e)a0uT%%e*"(>cK#V5.;DIE/"S._W-/FVpj^Fk^Eh<Mj.ofnEZr?kL`!X.BJ30f39IBR&T)fW_CB'S[%aO]?ak%IBj1m7$29,&N%<:4*[_WCAXZoQo-m5o\OJGD1gc6YSU4fFkh])2VpgG6t1![Z]Y+eF^]*'&7fY9\*7UJL[Eo$\S]U4@<pA)'O$#D%\@M'8AnGB@Xa($2cFfg\0mbd!B6Iau1\YX!mC"f(D">aU.s_[lGA852J7u:HVT'0@%@$G3pJNctG'ZK@A+1"/(]g":na3bP*N-.=%$)1`8T\%*43"@1kelYWG-aL)S`)'I!*n:/+MDXClau=u*Ge\)tdA*sJA./9SWP;;YX`@f,X!'>+kk,K7_kHr3+bNuNT-3Pk!04&O%`WOeH"6Z-$*J$C"`K=bM/!]b<H`LjJJdHM=[T8qQQ12R]4[W(mSq^`?C=Y_A\F"Jg]Vp$F2O6\MLK07KKWlO[.0E>I1i.*,/GB7U%`[@i=_t/nB7%^jrj%uTh+$]6Gm&t2d%=#Y`9WU!-='j&QN7?U!LK9<[<7M2Ycha>Za7l-Y:09"m3sO;sK837d$tfQs%sb3u_O,_#%X2q1:O^lMR"W"OU.Y:u-P_N5Z"\H$-1oq`6"CQ4GUR;A=:t70O6q*fC\%p@+#@1=gMeoW"mi"d6!bXl+DZN>^_Pn7D@j'8PJ:r2Y%#4fe&E:^$#i=>p^R[R4?ALg\a>BU.AV,oO`)g!H<g>Mf=;%2/cRcOBjZBO687)e/rd-E[`#2]_)!8;KO:[Gf(RqD'?</JdtEMi<5%7a`"sJ`QU2Q`3MV)>7e\igR8bY$!jKRe;\PNI(p)82kW1,!7^M4-OLuWc80Vb@09_mU/B`]dVcV-V/+HZ^T"&T@fPoNa7_naf8t;%Nt!#5f?8X>UI,?M`cf,Jqq,ee;#5Pq-"@[Zg!P*.PMf^M6J_(#9&K`XC?fEf"4:c,O[Br3qsB%_*Zm-9LGk@NkXOr9R>;Ue1Oe;h%aJ]oTl.,3d2Ji"F*(-V7g[?LZL?>"8As+/Leh#FO8$<*([AiL0VX)8C1-qiD+.`]EN[mh,-hla/"p4M5Ft/4#MJgQZ&'p88^&?IL%%$N$^mmIT<_"D-,8@7>6cM'C*6.>ph9%L/gktH4GMV(/Xkg>)1_S0oO'$,\JJiho*O;l>^W!SZ*UhF(J@8g#^"D?bWD!DJQ\9$*,%/;5Ec:J+2r%s_fOC3?9X#<29h(G.\93L_mDMCDr`m*k:af;:Q5.uJcf1=,0@:4$:maY;EX68i\-!<[nQqN51i]!X#n]'a)jXM)A2%XA)g>i9`l:7goG.cQA&/+\A+LIq7??iCjX_hLe4r0d%'!Z==6W2P3hI2KBYhQU"#r>O<a#_/$FYFWkmLfs!OmiMm>#AJLe/G2hiC%#8Ue;X?_kA%-rpKeia!$>Fopal3V#`ckl3.ks-m?G=]]t%$'g>WQLuG\8CE>\0,5WIWWSXgpU5Hi2slscN*]f&@2*?#dS=NFD2*!%/Bs^HAil,_j\SWnaatbPaTc'D3B:h(S3OI)j@*k<"E/!oCC?^WaUZ8u=aFamH?\\2:MGP"_4dUP9&V]"k`3a4cXSFmWtYuT7AYhZ%MkolYP0N("0r/73:u21H#_4d*\>/1^#a<EGhbMfi\KV=PP1\:=M$rD&AI/.a\2g+b0Ser+\F)1jKGQa<H+a(CT5N2\*'`Udb!4bj%0,<`k$TCq[a`C.9N&<=f(XIGaEgCua'[?<ino1M,,2phN7.t25G2r;U(_Vn-q+ulmbu&b8r;#(*S<]Io>i#Fa,CuI^fZ\7$h]`..%_d><:Nd7]'>AlZ<<90,7r\:*;(hk&ra6%@.TCssW]0%0^Kg@H^/J7YNUKeUeAZbD>XRC2\]8KVVAaSWi#3cC@a>3Lnn(--<m0d)l%R%JX[IA4D6O%aRY):j8RS_;?\[q\q#$d^C`%C6j%G<>.+MROpa+kTM]BShPA`<GCC5ZSb35MD7n69*Ueh6?+0]-0oIL>Hj/M1?.7%2AelWf7DRY#=FX7i/qJi"Q'r8E:HiVmX2!.>'N$)61rYqE@t@eo*C%6/WIP&F::KnQXT)u*d/1R)o1@07LmPB(,$9e#'uZj\c=)I%0/c5ON-QVAdCs..JVk&4K?M&jDYK,Y[&5LDJ@8?U4V-$JgGEnD)<SUX-V93BLWN!O_@OECc"`$qcGZbs!h=MUYeNK%&O)CmlJ%hP%pgQrfLH4s9lK)gD7BVLPVleq'mRWg:9#n/s1OKH\!^1?ug2X*_:@m>+:>8f_[Mue+:YH>mU\!cohm9Ei050LTI-d4S:uZ"PgE3Fs%8,B.UFnRKl/W%r%AsGu3r8MFD,Iii<.3>PqMU@]`E1D:&J^@&5o_YjuPDB]i;^9+0jUE:K_"%!J^%XDG#J/gYe6`dqE)8Q"(`!6b%5*9:^8IYkhoK!49*NGcUO\f$L-`1fZ<'$Vp\dW(:_N)GjD[)8QEtV0hoOqF7$55<#i'-m[<MGq]`_&ZugJQA6*t.$nkb&"==Oqc.%Z`\E2Dddm&UOL(!b8JqdBr]HG_ok\n2Sp20Eo`cSCjena/_/g]WMKY,gq?jgkPXSCnid)e5mPaOncZ(M56!^mE-QfGD4((;-i4cn%%'[hV]HdY<&a'M&a,_833?HurLRqt1A*_ks(_5`ob3KW,5FJ=Fl9c_ZGEe9n<j`bb_43iI1MO6haUqgTU+V5+Nf?J/p,ea)h10P2%g8agSp8W/7]AOXY4WLBXK=Q>SMeT-l^J`PWl(l6:US,55%mc[]7,^np:n?[0V^(7@KS@4#;<](.Y^JnQUE,pmg\e-+T4(S7li+s,%4*Q4sS#uiR]?h1t0NnLmIR'VZ%ah%%&bE_BU*ILRJGYZlLKHM*Ap5fA3^"m8%/PRDK4I^.(EfL@qEd6;4rCiP%Ue<rL9AHU9W]PV%!jR2ERW_j%;&a[Df^gs=Hs,jn=lu`HSjjOaLtYTNo$3Qq1_38`9"NBTY4dlc)1"EpDlp'[9h/tuZ_!6nM!uH`ON^dYG(b4"I92G)%&oPtR1X'I^B0CqNQCGVS#odK&698LF1mO126'd3U%9l`=>gcKHAT!dMj\(N7-Z$lP'-&ek!>VRQ[SJ7$C]?6MY]n*(Zg`]F7H(Lu%;c*OS0TNdr$6*T76:.KHHFK:L^lDJp`(X$!a7>O%V;PsQ>Yf<HW<j'&Q@N^`P?8.lM%/3W9hdktAJt0Se7uF/1QS(gWsNfc(=Kis%&A:$pq;alo5RG?r)s5r:h`es?[l]@R#krX0(tldhi_Hj-[b!UUI>0nYKk"W$o1'ag\/Lb%8/qti]AtE!PtU$kWU<`?]PGG\[C]0a%2)c$s$_Eo7=5#U0*8_K0CLBGeJIdo25<l$k4(@GNq:O"pBEBDZp[o5]fB#*>6LZ)b,Q!%-6X[Es<*0\?[:&ef!c+>pS5W0uM12>6%16uU,1ds`k`HauM4D^RmJ?q>";M-%lM5W;V-KXX:7/]*s-(Rc47ah5XAqq"%1:Xr*At"lWUW+D>dlOZEdD2V(*GI0\q\*.SLMfe%%$/QJ&o\Q1HiQ(Q\_7REOW;BW[f\@s-=;6d4PsfZJG&FZa#&]eBRp.1LI'L;f\Ldk%]mn%:Zq)P".XBX12DmQ^VM8BQ(7J4PO*3.p%k88WRKYG:GdVZ=4bVr2mRJ387a6m)D,-q'R1?^W$V2ftb7;$WHgKk1Me&h0o&t!t_cb0r^khB.K!HY/DOGa^C_e7VIUO6eV4=..A%,TJCf5JoMa_]YQFk.R(ZM&MNGEQdi5.niPXkL>/Y!?(;dn.*]/%r*&HjOhit&arh!a$&+ooPPS@]bslKbe%q@b=q!aQ=VrDWE1a,%GVr_THVKM[4i[UFYJc'ZEqBt&W\%lQ-\qFm,Y"ft^R;?ZhO"XWT#UC)$S.._Ij8XTP@5kn%jX=lLrV;_alQM2h`dUETDm!t>)#VY%/#nA7L<+;8ZAZ"31IrC'%LnI;,m<r^hp9Um.lPE-Mn)#(ljR,T@la2c:9%"Z]_)HbL+Tn75(2s4Q$K!RC]@bn;Cht=j7]PRppVn@%I"OOl;9H:oM>XP569=Ag-Aj531Wl!UT>\TJ0+-pb=bNjQJ]nIXksK"`3qVBc3;9'^FYMXYe;3dB9ItAa[Z"_-eXl+(G*FdXU:KIW%[I,=Q"9fhmEmBH<W'7'jOdi/gC`Q$sV`g/,5id:0j\Fs$`9X8JEF;Z2ZM,`SI4#pP;0Ho4qdOI$X?(aHS%`iVd[/4($jS+`ZTca)%p%k@*"LB/^l@AUG[!c>]B"\iQ>i0`pZr:.]n?pK!#;5I59p,Gupm?-[U0c8+1s[/%)_T(j^^."E30Z:&MF;Embj4O\6tCkuQ*;nW%2)KMZ^P.a4fT)."N9lYa%Cb$lf9.iZk>6sk3dRN'N/)+$)C0`qp;e.1!";MPY&"NSPi7kX1!L2?GG$ERFIE.JA&L(k['d`L%*C&G%/<XMU4H@84GPP6<\+DOA5\POqIsAk*cXBCV/*tU?K7W3_71E\$?bl"p\O*<MLuUKgE1K:cM!?OCRLVgY-bRbf3#XXp=]Oh4,";N'%ePU`+7X!lsn]EM:.^_hV,m=A=>p?#$7&FinLi4=mD5%L_n/oAB1$FRh;3.8ps7W\U;A?ro?d*0<E*-e9GObP%AJ;3[V4uqqd[=%4%W:&7#=q1f$Q4TEc'Zj%AdLNs,+N2Uk^cc1<7<4Ur,,5ZY;PTu3W&eDc/p*)-7nl-S\?SpD?3bME-=*ODT`ierInV^.T()(R(2RKZ%E\V+jgiir3%Ud0Om7W**_dAZK!Hp(T]=1*56a,1Ab,MIc$NZ$&$9%rMj=D"iGnV]?,4Ad.*Oucj;FT'pU%1I\lAgg&M`H&$<\27]%DP(;fgg.pq*id*UR>>OUI6+fWr#tk<oQh@l11(Z.Wi0ilW:PjiK+"]7ANDlH`WV,TZQMB?U*@s-+kfVY0t1%L6^(>Fa,pf`SIoLF%+O[Xm*?Br>O[EtA8I!XCmDLsm5XMGRQZ,sT2BX&L+mO-=&@/[.MX'6Lk_Y'&4\&o6ah`^H@="\7Ip>_km*tOG4=h6U8/`pZgH.p/%>/7FcOC=,6iW4\9,D`upF@I(4ChH"gTqfdC"2Usr%;>8$>)5&BP4M_RW:q5r1h?-,6g[]VA..68RJ=g@/h)&2a4.jNL?'%l74fF!%HGF?QH#$.3LP5a^:%%7;@j6%j.[-#p`_AqTEu(LTQ0j5JVh?&".ZlKd-EP:@MN.+,mMZq&aRWYn@AcM*#gp<+'4bDS?o$*bgT^ej%_!nX06QrKZ27V=L7d-!/cGUMCn5L/+qH;jlR**J=U':Q;6R-Oc@KEUX^:-uG@63a:#-P)E'Vo7=IX<ic(U3u/GA2o:.M-=kps<-n%?nAIp<<k.kE`/\<NSrpGIN^a+%*7'n,u%Zr!S*J!L^CM6b6Ys&7BXJH8J`hQbT`PN:hH\:6ZbF.5NS`gn0p]R[siH1#ZgHLP:lm`%Q5"8/Bu#Zg^dlaqmU;<[*8lY"8f6&g_3DT*'kgYm_+q9@.0sD>0]rE!3l;k?^&SGF1_XXQKP3D>,`pqMJpD*G!tKY3Z]KCNeZ0&D%V4p#q!`?ZskGV(lKfWD[TVtqJTZ8Q;%DEABCuM6mB]+S.c6mZFj$pN6eHSCJ_nD0oB.7G2i%?1.N$G/>.2im`P<KOFXp2HB*pNes%Skcpr73k8QNbG%hXf#(E'IYXQT1qWOWi7'<d$TNB8cGQkUAB#t!fi&MoW]Oljc76]SpJPnD<\0]mVJ2B"/ad,=]\C)oU?=;/i'!4%E2d7#HbudX$>puu?7-a!fA*mm%U_BM,H`AZI:&:MKrQ/l>q`T%K$+GEr8Cc*6P\F.3-,gl])#Qf19RWD3GLLVl@mbj<d,6FpZWAh%<UU&GWk$=f(l!j^`eM&mhj@<)R"eE?h8&k!AiO&F[8EZqomdoEl*_Cl3ibaA`oZ2QH)?]0ARD*!mA$Rjgbd^H<bfpld;o:_nYK?<%_MMR$go>$/3,H?aZe5Qg9%=#O_pZNV5S_U4@Yjgs-uTq\[5`Jq2dP"F%/%SK^>t"3,Vr2(/&`o_jk,^?$+Q%h)B2V[(ir)[S"b`T%o0KkBOLt'$Bsfa+kFp5:1]a:seX5@/WbD:^1"a8Po:VdC"7ECq)?SAHOK(5.W:qCQZ+FK$eG!3@2lt$q)<sbY5k`M[F>09Z+ulSH%n^5YII-`>KF/b\0+`n\?KQ_\d\3&1.$u;jThMLcCN``abL.%NpNWbUpL01*:*,R?OW&lku0TPC%g%=KqL'HZ=91]YTYtP[%lHf\p%l>kVk`3X-k+idh/Y8MZgfu3m<fFM*bG\M_m.jG'Z2@MpCH/ggh2oWF4n+.AN2_?9hLkk`^P"##lL]C;48t'tTYi>anVFR3i\@QZ5%Kj/TTNSju2bGMmccAZm8YYn&F03hLuUo]2.YgdeUn?s0b]B.!+`E1r+r2O0h>:G4`"C4>Cn?NdH"NJg\PL*`@bY%69@<3X\:F>8I%mD'ZLSH!TK&lVO*$.X4aC)onPQ/Oni9^(EoXm#7gMCf\a44M.[J5/Z)2!Z*Tdq*j_.[BZbO*]q^I:.l!J8CYhb@]Em9ujD:P+F+&%;pE7.WGGgn(8#.qrGCAs)]5%t*<`]BD$'r_'YV@B7*Z.iP+J2!p_U@9Z1WM3+t1jj*\*roWZ2c<"ORcs$cNBspFH#=cJ,YKTeU/H%T]"'km=M8k:)R@gYV=-)<dFOLN_/$S0G(GHEWOdgH7+p8s4CLVIsp,>j5+(e*[6/G[R6ep"%2T>/LD^26^K@'Nalh!('+5JPp;/r%\6Z@I_bR\C6Z[H-9mdn8hSB>>_",QD]@tu8/mP)D6VQ(c(5-F!'<fJFE_q>kDCdR;'c.JdYA5AB%3,s0/qm.AOq^iqWUp]OChqF3%rQ:+#j',p'LA,.G1)=Cie7?Q2MHe%uIY$rNj+U'2Y1Jt^T<bO18B"pJ_:9u8O?P+%1TJMu@<*5=P9=\AG%S@U=U&R1Y=KMH@-*#)%%7:[McNoM\X*SkdOAIf.\k=IhaQod.WOfaNd5%tk&/l7YK1KNQa3`Ds@RHS06C/JDXH#<HjT_Z=#CKn3eqD^9\m"iRaqP6gGNb<N%blf,qX;P70:1V""1@a+sBGOp8$5884&:Q6AW13&WZ'JsM.MAp"7LnCR#16`q0rh%,0khfF'iB[V5M#S"lT$uk*`\6P?b;mC5%TE_%JWjhplGuLL8l*G)<UD<h"N%_?*>fi4\u=a&NYSE5A1bJZf(P[3:3cBPqYStuU+@ok&78X=$cN?X.A1\c9S<\Toq_['lCtk*[X^HS%AaD=Zj.M;)=Pn<,'Xo>^"N2*pj9DADC($IZ"W)2bn$-CpW1+lH[cB8.L`d'C0#)XcX^JB-.BHt*lqONinhPH=p4rlQ],J/`!"Lt?%@0sEA*_gm.O`Q6RIiJGSY2_t_L]U:\N'spU%\L,[BMDXZB.bL1eeM7i`U[i;qY$J\,sE+j#E1=N//&V6+P[/A9&JE=lMi.;K6mK/%K`5I&&VJ!17V^:5Pt7_H3nL/>-c#A\=u9D%'c$'n6kJB+Ru'Z?)GZ.*\d<p'[J#9D_3KBmE[m7o%B&9iaO;OU'kB$4WW<-G:%r@e%N7F"gn%LSq-kZ=G20T5\`sGa'rR?^Xh"D@s<2V+fAqC9&/5EDO%.R?s&MYWB(*AWQ=Qn_b)DW(jX[@;h6urDJ%@+TC%r\BlmR8.1%._QZV@>4'G2.5#rOCIAik"dSpZ9\-DJ4+%^N6L[FPT7nZONE^6+f)M!lK)B733"\NI"BbNZonOtlThE4@rLFcH"06O_F5E45BKmA%g]Q*0<tu.-".%L1)ga>YIIOg=7p)OVn$P'dA^[>):$<6\k:M4?43a>Jg;.m>dT!Fn[Lm6uN=_I3;5Hj<-7EhrN$.QCf0MF7FenQg%&_*`Y:.HU(&?g+/H[#=BV1I);'76'6/=9QG$4@IZAF*FfB5G6CP9l[V&<,4TJ4(kX#^rjP3fk0?:^%.Dp40^UTC>h1D-/C#\>;Vm%+\ilN,C6rdo5A^\QP3-Q:428u7P#[X:)<eS7bWGO7Clk9@gUhXQjk)J'PdK3j_+;c[WBBjES2S:_UnK>hj+Ws!).p2VbuF5<oIZm%>MR*0m/cpe<+74%,F:I/&"M:jXs+'3%Q8hGblChf+#d&ni/uG-]:)iQ=8t#7:2F@*'B<\)o82,</g=?\>_ZhY_cTFU=M1\iE=pr[%E=og/(nI$)UD(7c(c,D.3+n0Bl+I82E&HrC0jiF*m,CIiKGY.s>&f:DI"uhUG/f5A:<\L@M-W9'#SKP:[Z0t=K1@llNV/oQZ6<8e%[9^L7Atud\Z5Tr!Of-iJeE'>;29M8K2o(cC2rN]W,mSK2AA^T2*=qV`8L^!G`?M]aJ<@Eh=IkZelQgWC!;b9*/FtR(mT];$0&OI+%MCP.*k(R(nk+.ltq5]?(am6k.P5!sEFCFCO>Spd@ba5gMUG$U/7UP-k&$7JhDnoTd(R+-rLA5a-\4OTWqUM=9n&jTYkA!$*GJ.sn%F0Q;@qsrS->Wb6X,e=Q')'.#h,"*=hZ"eFJ^12sPiN]^3^C!jC50(*MLIQSR`Sg6ZQ:_,M.G!!BYd`^Ck23>U3VKS;UV1F7pna)l%Gg-7!*o!?I8/#mo41Sd8J-Oo7ida82r*(!^nE3`o4659_`RY$7>Fo='mHWHFK=5A:_;a>IGibC%L#$q]Qg2f^\[^QX[XDproaK#6%<bKqLgZM[G$)_B>Sn%ce3[Hk2&Z8&lJA2QI^ajbK+3=>>XT8J>0Tu/jk24&@$T%]:D!TIEp,TPcBXQq^k24Iu>s2lRd0!9P,s9p%%P:H;?6\;%)V_e1<2+/HL`O\)Lh=ki[?m@A3rgas"OB(ldg:lWjY+-K(A)7jup'EX(p?a"Bn53oeX%H2b]3a`fo(-A/.`.,/hTi#q%Hk".KJ)A"gK#%Jtdr,\JGRSD*c`lfk3@W:ZeJ/&U&Xr[pp4/;$V(5p-UuAq:(N^3Qbgaup@!mQ%kUu59@6NoI<ql"9B:+2G/M#r/%1/cPRO/9iTD):dG7^R=Yp<^UlA4aY*NSHT5cbL^.\rWr]VIlX)5Q[\:P8^S?nh)Cb=*qHDJhn"eY@bLke]3CuZAhZ'3<h,XR7sdi%pBl^NEH2_TcN[:On\W5K_%\VV2^h5g1DngY4"FnaS2VGkg`%g2gV!$^L:E'OA6p'-=_:'F@7I\g*0XY0)9kQ2HRTX?F@Rb#l\E*a%:Dd#fn))R8=gWlqfHq's/Q4Eq0FMhj>\:QoidcU7WtP\eU2p+=+ZQ3fOCjpG2f'US#aq2I@ISp%#Ro+F&,7>s_O.WDs)cQ91Me"\%JHoV!YFdOtbh!(6gb@Xmq?c3ZHJ>pmg;&^3N]g)(718]7rnk!u8F7+PS&&K!hhrKS),DeF.GMFW;?gE$$@0T%aLRG%d++ondtKQ3%@aSB3ji$:#^H8]W>t&QZQ*"`&^s0MJTrUcX9S_A^Os*m?_AbZjSM#.6F>^#tdhPV<)m+g":+TL&oUXXQ/gmO<N_Y>DKj@)_)?--6%Qeh+>/mP1f(G8>3EoA5'>du1fb_:u)`eB?%eQh=VS-tn?`E_WFS-tn?eQb'c_OKIPr;XR-P#i#t-g"Wj'>&K^=i>]g>dQ-?.MjO8%!#DPl'`]Vhe/B]WX]i&)l7SaZU7Ur;!c!m%!btTD=?oSI/t`uVWs-uu[0`d#lZ*$6Lq/%V@TNr97Ebq"'>%@3m4Q!97Z!Y\a%"X6%dY'4sl_N*pG#HpEks`_ueKT.@TN\-jfTrbj>1hrT\;eGUF=li7@\4ppLL9^[/?I-k.IWMtoWc,rcmGh@V2L&XUL;eh>qN-!"k-65%@U\q$0V)nqF;:d#"meA(&\g*(h_5kG`Ij)s`B6*d3=d`7=7b>q[IN1LFZBsb@a9U$ltRSH`"ikEX_W3d1Z)@"]?hRSWUA_kU$KXE%4)n^GD^UI1Dj-+1`S9GtjdZ8oFn+V_Um=X5Uom^3@.;L1M']$D=uV-OMl0!YM5Nf,>4Js*\Th;B/f%6@e0^b&XfKF)'6E^)`%Dg$%:2Gb7Vff+dg9p`fo0m<n+'I64^'hR,^b#M>=1IjYfYfBieo39@g54J#/gnXe\Tk\!=P2`Rn=Bk_.dt;&G-s>r&*W_51,LZNEagn?%@Xt$%`%EFWYga7[`$TXfZ&XJYN,3TF'>'de3&D)t:2FCk'-!B"j@%4rX3Iph2_MH'e_KB,S/\$O`SB[qS/\$O`SB[qS/\$O`SB[q%S/\$O`S@s8>MQ_#]9jP8*I&79b7K'/+Eh5.`Ak,\[hpLTS#6q3Gk6#dXqj"%Mq%kVjpI._]3+#p7bURA/]5WjibB'HETP-A(0?E]%M^p/u[CBDY>[0:oX2WU5k2OO?&M)I?Kl#a`,Bg3!H>:FVQGKj7?bHl<QnND+G4>WX@a4hUG%),sS<s[q-[)akG%061Nq8c8ltUU0%MCB"fSG'7B>u&U4QP6u5F?)&l>u'`qdH/:hVNC=h-T86QM+o_4'>%@gD8_b(g5'#b\sA%fA,Tu5]:/D`QnN2%G4D;M@P4gRfYujm%M7FaP@M]D]-g"Wl'>&LI=m!%b>V5j+e`+`.\[ZZh(Q0dkk2OO?>qE.KR#<IBG-SPt@P4gRfYuib,IYP@7dT#)dpa/'kA,4>o=:s=%kCtmnkrWMuJI5M.!UBsC_`O#L,@T"ehJY7c9b4S7*sG#\],Vfk!VolFo@c,kRt.LI_LiDY48Em:R\n)2Pp>l?'3hXe/EHc<R_#^F%DlZ55>Ff*.Dhtg[rGf3+Z>h!e(NSX\P@0DuWnK2G73LjLi6rrr2$Vb1OeSle]RK7_V0\pa_UDXoVB6`9]'=9G;T!\d)m?OJ+BE%(%`'"-m;atX'I_U/d-FWTcl?V_810b:&(K>Atd$QHM@u'Vj6%A]DVMn^:^VHg$+M/Hb@j9>*A;`ebqQ1IKMssEtXN1DgL9D@<-g%2=%GVr'Il&]2mM,!(0k"T$U][^'1kFS6U)fsK`_B1jopQ#$JeW*/D1+kId)]#`%GUm?rnX:FPH<Z^\N!,tpIE'0G*EhHnhF+e9HRWn/%XQcF.k]LT.?NnfM@$Vjh0K1Y@DlFI))U00-'?J]5H+tLNN0-e?W\VP6?M4)3-&%Bq2"X3XYD2LrNkQ*paSX5OjJ>nPB2,"FG3Z4?%_D1c`Eb^[cCfR[fLFB[cLkTY.p/84Y?BZU'DsOc*9cW#(:*8?aFa=_S3k^e^/Y=m`oT-\OX[c`F9hc;9I;E#'qKS&j1,4..;f$o0%Io>0J&k2eiD%"#$-eGe]3p)Dgn.YCW5K194O7cf.:n31PeB!<R7qh#)NZk/E1>_$X;X?Kd>0DSOGX3t??0qs2htZUZ@uJ#3Z>ZVR%Sd?5gHo7V!cddA"\QV&c8S\D&C,X-@X[]LO5'LkL&45FIp8U<D4V?a4etfSWNai^s-d_eZr_V'TXAcO7hSKGAH\T89Q(C:uTSL+]%k*g>S""G8=jK<D2Y:7V=Z6T-$cJKS]GS+KkY=!e81<qLCeBV,FAeh.U`:Kc[IrE!Z7:tje-(haN7eph+R7"Pg^3[^fbO(lOj&qj=%+,RH#fR_"<o`8_q^"/-T$h]Km4p;"<Di659oLr_fIk$."mlqt4SA2,)XXMa]1Mno+-sst`4>@CZ5\Dl-pi!eP7uD:MiM%^mMAM/6%28QFJO=>L/@F&a3b^13brNm2*Jm"o2kr#!#'f<2bep)Nbqi!@Y4FR74o_tgh?8WlZ23;L4FVB&\G74p,#(&1h;!^:+\A`g-Lr3PT%I)eM5fpg8<5JS+:mU)i/3u1;Z@SV-#=Uh1oNnJ2]>><.RWQ:"_oF+%?nacJ[h,tK1FVhA5`^d_)(\R!.!kj?`a9hJt<$%,BQ&ia$%bj\j4I.Yd@:RH2=8BP4FnE*B;hPc:pGK`bHV9hm]:BeVU%Y:Re`^a$r<#^J6=D^5Y51qD%HXDPeBiq]BnV)62bYCh7)DR@2oK/*!%429hT8W9'&JJ9`[4B"j"c':O>n/W?Th4BVbHOE(UF%di("YUEX.O%C/p)O8=]?Ffm!-n-G9Y5D$aGB[qWB,9K:`R#tM';%2&Lt^_%Gf_'&aa-2t(9Hb'(NZ%_.7c09fa)-@oB`f$@uu>OEb+JCo;NA-r[/tbIA[4pB:Z?B:9B%@6,Fe*8?c-m_M:=37=.U].AM_F@mihm%Z&3AOD1:*+@<aa?#]j%M[u6'L@J'2j7#\tjN&]O!.@%,*Os,5QO,/4lQo.4s!9#P+Uh/p6_nQqCZZhi2g5.8A2rlW]n2qF8O(IV>%1A.nGqcp!_!99c4XaTI@?Rn/0[L?Z&2'R/MLG`ghNrL$N[03r.YB0Wn/@@V'Hd8E<MXYo*7H^%#d$6+Bne[qnUuPJM:]*ZQ_MJYI%1dS?*'mTsHEAJ[?g/pOS8>*/DXDYbMV,NoIFa_)D;sV.#MrqK//_$NZ)7JWho34`V0dDjYW0i11W2&]+50E1:B+h)/EJ\T8+5&i9%;cJIn16foWA6INf,-j"sKO.OLfL05s`(lfs'P,.gN%LK;@?\VukA-:4L"TIl8:T+7g<fY-_X%(X0YDC#!OanBY1Z:r2PM#lk;L-3%hDFa3C#EjuFP=1m*(N4WQ(m9t)^#Wb_7$td9o=*1bN&bCVWF3"ceNI]1dGT6ro#6X/+'$E.Sd3FI@N%%&HcEMI6J%X,j'L6\eIZ=%m8i>[X]0H)9e4ot;L?#9(+n5=O#rXb\VjN1+]GY-<YHhNIe/;?WS&)kBd#";s5PNc7'^s`(=i^pVN5R3"Mf+AW?^Q<,Dg>mlHh(Q%"js=tg7&9CL_=uG!tNVOQ\)2l3p*GU6RK2EXX:0-<jP$bmHsTd4F0rrU`?\sj5]BN)R1'86<%FqE,-g&<>U:E!2,%eb[M3LL1.AI%@T#kAp>pZr5!ae\rIc17gV;W(/?)'IWsO[6kV!l<6aR:rZG3X@L.r.;@@#jnaAR\UQdG%RnqlDrGfg`E<iZ!SCc*f_kb28q95,`U%hls3IETJ^6_+$,%*U!%d]^\gS7gntF;W9gt!MZ5GL]B%H'bJ'/8G:qZr.qd>T5,S)Mq3gnP,M`+F'\=G9rY&$Y'MMQ5!2Nt>uSE]%F/g7M;nXZL1[W\>VQ4!/m5)G[D5J>Co7IbSo.6PU\41P/BfK["e]g]4I;E>mBd#[hNn)aQX,bE@`lsJ,fZ"M`bq4+H@\;.uiaF+2%1jH$Vj%0O3JB**-e/iL7@'`5n9qQRDnVtuic;47X)db8:YnTaUGMWfm/8n)+-Y2+Q-]Ia?eBZ9l^)p<">N6q$?)-CnM72k)Js6l7%>al7PF!]Mu[jdYUI;+A<s0\p;a*XBb-0:R%FM<n6Vq[5NeG06+WYp$^;X48-C_.[^><BiqQoa2"oo!)nA)D"#]s)b@)*.H>Pi/CL%DrA2K3<DoHDshdB?]q?n'eqm"8eq-m*1rj,W\HI`Q9g.o@anGI-mXQTj;gUj>9\HqRZHSt%j=h2DDW*Ah6oXh.Y,,!"M;tM$)+'O%D/30EC-fE!Qp#^%KNBR[b7Pj!C$/_R:"?_\<uF+Dc)?J!N?^pZmH,6HdrcZj<gB4jkc-<-*FISEf?j0SUkS#</RR5b8jUtW^=T`R%4s*C:C`<MtZ9Gf%7&M#.%9-20eW/.]bE0ha]Gp;;Ql@NuR'&?D/m]r7.lVI-8%)UYAFl?olD<lT*d1Lbnp3g']QS,6CThFZCo?Ft%4%.P82hAZHaYG6Fk[>ml=c06e]Xpmu+_Xp.pP$%RU0qX2/gIbZfI@(eC,:Je3-<&!:1O#SVCFK2IgWVs[&PZ<U)aDnm+acZe7EPr%D-oa?VXW:uKPbtKD-4&qZI`V[r,L-!;3/[bD)%Mse0ISLgh%NPG2G#j17o0H8X0h!g>e_`ZiLH+7RthTTaT4?`M!ehGsse]2.f4g%8S:^#4g6n_Y7nh.K[U\D$qL^WS+RS1nK$S)^>Cj8YkO<n-CJ:EQT'5FSD%`1hH!1"g@>>XG%o"d,5;br(s\(b0PcXk[9?[df18[?%WrB9[s0b78``>Ng(qI+m?FOP6(el6Qq8\]>L);Qq,c\L4"M]4*Y4),EaY65:^A7_V4(8!FOk4*ls2_\1k)SP.m#>IK=,E9]7[f3g%AiTu`F6eMS]\);A:>6<92q,6*K4qWC)d<iq#V8DY-A^k(]8"`E:%Pp]0u1XtgOVT2B_.0&%I(,Zo#C-sNY-nD(C8oc<2;"*H<PiH%KriWTYY=7Ua>?9]XEApkO?Gl>a:ja0XLLV&c\c&TTf;oh0gi;KI!TU;pC5laD9&N6g^h(+Ql=?jbY<#-,?bOf0,6;Kk#Tep>h=/C%F`#0(fA<d6iUaH)]u!7";IXO7NRpoBF3?2;p7d//.fe_?%12<?M*>dDg@;kR`M/uMRiIKErHd(\RFO^cck&pEdqH$@bV!hCnBu=p%o<nre3aUT)h.4X#Q"UqWh@MPF'ih:(+qQC]!XZG@#JK]cO@,A`qsB($b@Z@%2B0e_bab3f%;<V)o[bo)).u)/bCJ2#7Qk9jBPTJB%?t)BCG4F_\-t>W=4dPkdgT\,pRiUP%rO?>a(P.rn;Kg__V!-N<a?0:;2u0m[akg6Vd=>kF8*j5II(->Wc:Y$,-"Cb;%fgoIc-]70%M0Fu>\nfbH05IPQ\N=nu]74:h6H9l^"(?a[QKVM0#G8c8%J4N=7ebA(T:!-fYo=nIJj7V:Kp`;lC3"0H/%Hd.HEO1=NrI7l+Y*^$%Jh`7`fZ3L>-'n"!"7[8#!]U!)1[+t_dr91>Fh^"@jLW'h]p0M*q'U3=2aeanh]O`l(3!W87:3ZU=K=-Vi>L*2MaLE9o`q1Z%R"?B%P)/T-%4(IPe"jG@Kg>(W.2glfg'(U/O]c#u;Ie?pYHKO&$a_7l4"^q![B4VddYZQoS$eeWNXb6c@!o^LKI'0-e5iK(B^UW'R8Nj,%cYRi[0spoG%k3XI>9k3IiD]DBa6J$T<HbQkB;@?;oI\YuBTLcUT`dOXqC#nG30;Fe3s8icJjd9P/S`tj/i2`Vf.n)d"rfkTR90@B%kuGD%6lX_MU)_qZ6035H[4KK0?KhrCM,"K#Tk<V*QbJJrP8[+X5A$Ujmq+66:S_XWdOMY@ksNeFn8m&M*n*6aZ(k`O@]?co(a&:u%<f&emjFn%o)<^sAK'5?*KVBBUTq<#89q,CIUS]rcZ,s>E(>#+#ORVi()kU12Vcu$BaRShn^A&QB+Wh5$6g"(TTL]R(X"F[=<?F=I%n\Gg=\UXogRm'NO&qHm[@c>UN&%kN7Y&`e4[BSHY2J<%*Y'97=ho(Zb.O67:/#-]U-Za^Q1s<I[>B3_^P)ZVShELtjqZ/6:j=Kj#%if09Zi%F<Tig:24r[IO.GTm06YHt]AK$@W>B,?g";=3a<gl0r;-EHkr9<G<^3m%btD[FYVegu(-$h>XGn%>>Xp"l;GY.9%.!<%\F%I\-!D+.A`:%")pNK:$#b@\..;7JE3Oa:U)u*_7_9L*O"jL?JZJ3aET>;shH'W2&g9FF=YsrT4q2We?9m4Ed4]BZ@.go_=mK6JcWo%Q+G+_WMin<<&M"rUWY/;.]n[7-")+oS!u[<S46MYh*>Qu^<%=qK?ui&'t-!9&2\f/^GEdSF;ql$\ud4(D<=A,<7T@t'ksGIq84]n%j>;g>,1^7k2muW#:4Y7`i`0Q3Y8rMi;=_1DZ](9-++=T@OX%`M"JAVO*8h[$[a)pRCYUqC>3LZ]J..K#(0IPH(J<([Rl@-=9;c9e%'%kS#E&):HgY=[rJ2hNK]ZBrh(#Eup$@"\nZ%':##VU\Rei$k+fYi1(&DfJUCkpk&@)S+0fl-2O+_XB<SiEd8S-EQjdM^UJ>R7J;%e?@?+Tc,Cq.ao<cRgq6F[3pL.MS?7YAQGj?JqQe]kH;M%q**/HK^#FI$d\F_>S%:\0f.b$m%>_SShcu>!][de:TAV"?GM@Z";mqq%@O/Ofb_cg=KYn[Co9KX-P2J'OP4oi3Y^iX;:32G./P[-hO\o[2"sCP[mg-9'\95IA2D"0Qgf`6BFp\&%$-SY[T<TQ_*7&j7\>sBe%q*$a+9#%$Q]^p7SNIC@qBf^_bEWd"t%Z#:ScCGFp[gHNJ@>7ht'bhfNaDOOM+!CH`jA0'?IY`9fD#-)1&;-SL@6!@Hr7J83aYB4H%d50ugd/*5DJdj$qjn0'5qE@R46g/.JTn!9_9lM9EU_q.O:u\K$^i^4IJnU&Ws.UU?c[,5Af(*8[O/nj^['n)](u7o,9"SaH[9KUa%SPulKn(YEgJuP;1eJ8\_3%[dn>sZu,Eclj5\1AWkX(lF!Y-VOXT?eXPQ205\P*D7":F:L&Lh-u3lE0of@?@dZGNd5s7<u]+Ndt9V%9iU$nY6IX<M?l_YJ(\s<UYq-(Tq2`uhmoKP2QubM%"KX4DZ*L3Dui`BjXdfeP8SZOUmocG8)9+>FQetH$$"^qH4WR(G8d!],KinX%"B@<j/2%.D@9.q4$=5$Qf>1aj5R2%0Ci]B/`1W$Z2q'.-4,85#_g2(Tloi7&7^q'*.aAU69cJ%fC'+d>`NX'+:%[$l^!#R7!&*D]%FUX8ME*^6kf*)quF91eoH'e;6h(d3]SR;FlI4mJ4]l\g\hCW"5>A4O\f**-L>l]8QSoAb;7m$95'1g<YG*OLk*HOrj&_@.*S!j=0%7AH9d\]]V-[=-R^!SC23D'rM![<ZKgT0)a<'7fCrJo_8=[Ie%B2"\M(6MCrC\7g<d%'r_g`a\_[<\&c7dYn3/KGLpp]"WQH4X!cn%F%g?4lL:_J:eWh$b!A:79JD=(S:Po"eW:5cB5ips=fYMa'3#gGD,Wq;,hq]&Q#6>u*2]Aog$XRmJeR6f37T5g.Ymi?QNs$D6cl5P%KSK680/PX!X&FNhWA^QoIag5)D.:jJ_!!rbCO+ud#h]t*>W^t;\LM%:'k#GAOM9">43!8L88Nb#"(4#DS!UT3F7nQuO*RZa6%*0g%[pU^JE=@h'd#9kOV(eP#akb9Q6dJG^Prh=fb#H'YB9/(H6c7/adX$7,s2X`B.>Ycsjg6NjD!d*FB$?9QMa0W"*Vu=F2:>I<m>E[H%cbPmX$Ne52apBluFPdtZFLLlLZtJ,gdqjU7>H'Xo`H,\1`CIApXLU2Lk'J>ejBf&K3C/ZSG7?"mY1!&6>fsEf3n.&HUCUqj*(ul%%jgubA,F31j/9rk2\NB6#g`7DV1#fP7$p3p<:Q9h8m=i(he-bt,/2/a^p1bCJ!AR0-'6n_+[Yr3`"u7)a[/+*a>%'aP0girn6^!t5%.((t7W)K>\Mc\FPj1\9Q%m2B\@$k6@gT>*M7X1mPFjdoH8"?)ZVYbNchW'_$J[@i%#)H"KM6hQ!rSPgi6Z5WBqXEUeL6]aC^CdiR%>R`BVjds4aZ5<-,=lo/Ge(OW_YFMb,I*C`QMO)?8bdATaqPp`b+qt)Sh]ZM>1\n`N+N!P$*ad,$Ea`%&b@haM])idLk)J6o;Oa9L%s1<Bm=&fP3hMmb@hleO3ms(6"\Gb\Wrp@l>h]NFg&J7q&9B:RS9bkYYGXrBA$+I_YnB:)]8VOA)%FE]?@@[:(1'Vm1Q=YpM.;@aV%'`hn?ah3')eiVdaidERu!;O!geBJU">i3"8U2f1W2)Dtt4^g+Ph%[@u:oeA;f5ZGZ]J>MD1#i6l7,/CXI4-tR/K_7AktitrF)Be@%gkK)&ouLLa0l0uLE$.6&_<f;2:eMbRA-Wc5!on@!0^m)S^mg&[h3UZm4W8@Dm5r5=BaY=-CZufPY3M\X,<Y1GqF"W@92k%rk)<!7%042</I/j\K0_j$?!h++194Cpt$7P"pf22>qI9CgMJEIn(b"s:-#DB-<)"Fl%"5uELJ$,U;1,smH,AARqU!X"](`q']*YX;[*WdfS%+2A1B5"'P;i\`5H+fZ915%[VkdH>mZ:sF8"hS.19U;*M-nH%\6@ALfW8MkdB@4TJGg0lgLWleHt]QqTe\4/`^5-E@3L'nH:AQNLV%*cnUV0q]SBcc5KIWfHZ2MXcu7F#JGG+.,X0:<,n<$Rs"f-"`6p)N;]!_Ztf.d<+4XUFMBJNMFWHAWTPue7870^HHPGon7)P`O*]X%cO)?IV4hhY!pdPH2C;@&?Ri48TYNDhhr/uri?il!2[80e4[N*S]h0E%mmQ\IB6D_RAN_LE#:7_IOjSBkpmiu8TXEfJN<.(?c-gUY%KAi'1U##lAcmRIsKa'111ji=L1N1@6Hf#]#RMhpJQNll5^FGoYbZiKE?WD3XDTG^8/S#!(;Z5\h1dQVok0jW+S;;K1(>=[J.9KNQ%dTLom-UaLhr?joTRk@Qq%B*J>',nmf"i1n[@*mMjO!MQF#dKLGI_h*JKSoV\a>=?sSqU17</\?=WkbYp0a@:XAiTELZsu31Co)`p%US0"pRg^M$^krmq)N_%EH?KuO/rM'Ef;Y\L/4X1A2oA.J%U&9HKDrIomHm.]PF%/mF9!$lm!C,@#jRl:=P(.lp!#'LE.&]uO0L<&%A:;Zn.6,sh`'kk,3j_BO9CMr$AhF'AOm*'cON#5GX&.)ebfL.=!nZXg=,+AW^GEE;Q"kVb!JJ`QQ/5u*nmBnVREp9Xj#:$OUk*3A%?^!Zopq!2cT6)<1NK>]SBH+g+UO.Fn7l?8ieJSC'+_2nXpkk(LJ<<90]FA=V$E^+iTt)G#nI.QkB&\W/aUb@)?Mq#J6b#E_g'N=g%@+VXCKu)hkPaAL!oC4*:!om`E8#UX/`CR].g5c9[Ok<Hk,nI?7TlcuDMum.<Kt6cogIpXBeVQ>)5*FiZ6QMg@7e`YQLI%jcMr(<R%)a#JLU[KH_aq!ZrCj]*B9_G-Y)RBtq(f`o8eBm,%%&bbpKpXuL[u;K[:V0fB;%ks\dVD71Kk46:68[%I_[Cc@Q!JcnJe28$IpeYH%j8$7/^U3Y:9,M0gQ!9D.S.BH;4&T(-)/sI`CjV1RQRL4[E\/ZLK2`$D]%K^7[LTkkpc=,?,6b7/RMfOB#dhdDG@@kP;^L.G-Tt`#%/E!'"pJcUT9\73L5a4"M4)3/FU"qKoFM/[t[Fu#+!H>9Z<>MEUkZN7kRk,Za#9n);!Lcjcq%L4m(1L$!O+=>A5rb8",*'K`(QhYL%>_t.09Q*43g2]Q^_l92!2-$"N]^M4eW*@h.C`,s"(*9@JQc=jN"."p?/Un@boW_n^:eU(*>Y@h-b5sqE/EL&6?39Fm1YrbV'2o&L%2&tmK#qXheDckG5TgG_rb]SlSEHF2tADtK$6\AQ$^)s4n@&=hD&ffj^Fg^ZH.s@@j-3c9`QEHhPb[j><*Qbn&YhEa5%;NC,B`*tS%:N/L]fUsl;>9]26"fu#[,o$Im9%<g?6P;2QKIW#l2WJW@B'K_<5sr[FS(B5GHIJQ?jq%%U.4q4_Bj\dqC*$-`e=(WW\05m%89AEk%i0Z#R/+?"6\mtK1)Ec_['rb<?5#R1tYl5PMh?,gSL.r*eUN1H^Z3=!%W0q'7$W0uN-?\'8_8)D^>^g2mPpeL>OpCG/M2eZ!*0Z%m%I6k"ML)"Mqf>s>7%fas&"Lfl#!>s]m[XIKZmG:^8+)&_Df\@!s^S'm([fs0df6Qbg0X\SKC6`q\1$ruAn5#GJl61K35[^en@m'IU%#TH+/B1BoS9;gm%i+Ulo>%`?eY2?On[)o#b^,$0YI*`XN]o:u,4V3>PK"OG,&\A?)`'PZ.U[FtYqFh!J-#7<cN`8*&<(5%qq")RQ%?qf>snHTeBS1.Bt4!H.Rdj.>AD8LPBfJC``p6WdKa9BAK$60m"%/@)9\G9n3L"`baX1?%t!l9$]DHcfuW:g"aKtIkp!;Vu^4)?/1%QGao6f@c2+(C26nrQ0(DKO$<B4q,Brm9:?dch!6+)]Lp16ebQt8'3lB"&iO-0l%m?iu4Gg0gKgY:#<'NUO'@HYTH>=6f;^$mV'S(%WMn=niQ8:AmMe&sir3J3Y1sK!&]X_jB.Ok[RmQ_uVOV7R&;pgi<BW^DgOk[lKfWs(&NeD#qVS0.P%Gl+ou&]%=UJ2G'l$GriA\[`%5<@&DA[?,B9oR25*>8!d2g7t0',JHaeDdfnH"q^+O?@=LYmj$FfuBuK%Odj0'TQQ-:sPj5Md#u0GJ87le*&u6`d(_FFNPW.&SLcJ%$;nJ_a7R6#8Jm:hHS]^t+s7LLB0E<q!84n;VAJt^%(_YO0HQ><]hF'T#j7bue?$=_7e.4gnGsYm,^/BAfNg^&mVJp!D8djCd$]0S%=Z7M`BOSDHZ-YgFL&#JA#)'I*kbUq'T#("&mbp3j:&m'P%)Uo4B,7MI;7!?I3OTcj&JP\t6P4bD"](V&0I1N\:`E:LC\!(q,jT7r%U8ss\_`gOJP.G$]*gRg(7,Agu`-k_LLZ,5qcA*ig1Vjp+VQoe;H42%3KJ_Ku:S3HQc.R+C<"4`uKc=I51Tu=_73K8i_s'T$0bq^D%Ua!`3Fc0?'&fD`"a'r5V&NZ%`D<Ad:+`2i<ap2hqPi<P6>227pR34,6NncAA]PE-7s$/O]a0go.JJGE9o6>O.G7(LELG<l<iVF7_%?%Ci[m=BoI5)#ouEu+8`7Y%dD5R5dL6CN6'``E@AGPF?hD#m+#oZj?TQk$0UTuZQt@r:,6N73F5OhQ!A'WNKrLW2K?53-n.r#\e^%gGs8Z2$BZiL7ZuAli8UC':#X:W5?X)Z2@kaGHNkZIT#^fXpsnNNb3d*opgfODA7unAIQ9lHmo:;KmE&>))K#/^=<sN#::@s_oMVf%1T%YlOmg%3%3(L'@cb"jAd3A[e7=Fgfi\PQE*-'eitQLb"Yu$/,W!73&LUR,Nem9p*`<88[JiFW+I!XQADLqM-\`eZdn*F"$gF((%T$=]p;%8'M'\]@^mAddAdT47`n-:Q132S6aMef]bZ%(ZA8:l>(O9U+&r>BGLa:-e].n'>u)"#Dhr:i?_rc&<u!)e0$Uffr?U1cWZ%DgF@_7Ul:5@%Yg4%(KidDbXYmfX"&^7UjT.e_uG-\gc0fne9MK:nuR*#kLfc8TZZh7(j)T*g).-h:6#u^,'Tq<OPVih(NZ\,&h'i%Wndo?&G1?>:(Q"f.s6aGWf+.Aae49c`@Q\"GON%adp/[eP\'P^F`2Z&8>q/DV.;DTe^0UL3=?cllm\BaI=sPXLnM;V8+h`N&t0A4%<>aE)J]NZh<aZ?AkSqDo/EB&4r\>$!+f`su@S,?c#.$5hiM.*ob(DY1(hC_[PA'pAFZj^B_b4XioGID$(u;g/-dsDpf1-0a5]GIc%D0Y@l&"%S\U'5fC0TN;Ba:/qf"(M[md$n$M,!f0$-SpNf]a!2_HH2qK/erP%QC9Xc[Q9c'OT_gY9I%ETgVVdHj*%P6q[$-'5(GLH%$6a9rGA4b;07j414NhiV!9^&LB$;h5*=:D.+E-b>:fAA@qK6?\A6#OK3jH&._1fPj*u]>*I\AOsVN0RQbD>blWW6-eN:q$;J/5d8%NheDsbd31#*]Y3=Y2O9VJUbH%&FjPG9*O:>TD?iu^:#@$[a:4++$a?4SteC@D5XS0V%c!G`.`>O"&<ZAQP5"D!ZVJi@M?A0f_s^`%roW\KU&<rcs5Q?"J,bj"r6)9nXhXnl+9))Nr/o&0.fWKFn\5\1*<Z=ka?[puh>cruY?:ECrp@o-O3a<g5Q'q6gjf23J,f((^1c2L%Pd:><bHLp5+2[Q/;Hj(a/-Y-"^\dWKnjCkjji:`ha8[?5r4hfp5JQ9Gs7#T/ra3^h5G?*sF;%F"m.B3J0(=p+3=\c$]Wd;`f85&K%+s6Au@M?AD=H%R0\J(Ib^EMM4c2[M7J,[@cr\)%d00]fqr:@]&r_J#gq>DE8Li<=_s2i$gr:@]$iEuWbs8"BuGkotkkJ.!6LjUt9%s39I!qu?>=^AU!)gN]U~>%AI9_PrivateDataEnd